{"ast":null,"code":"import { ViewContainerRef } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { DayService } from \"../_service/day.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_service/day.service\";\nimport * as i2 from \"../_service/calendar.service\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = [\"tpl\"];\nconst _c1 = (a0, a1, a2, a3, a4, a5, a6) => ({\n  isDisabled: a0,\n  isSelected: a1,\n  isWeekEnd: a2,\n  isInPeriod: a3,\n  period: a4,\n  end: a5,\n  start: a6\n});\nfunction DayViewComponent_div_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(2, 1, ctx_r1.dayService.day.date, \"d\"), \" \");\n  }\n}\nfunction DayViewComponent_div_1_ng_template_3_Template(rf, ctx) {}\nfunction DayViewComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵlistener(\"click\", function DayViewComponent_div_1_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onClick());\n    });\n    i0.ɵɵtemplate(1, DayViewComponent_div_1_span_1_Template, 3, 4, \"span\", 4);\n    i0.ɵɵelementStart(2, \"div\", 5);\n    i0.ɵɵtemplate(3, DayViewComponent_div_1_ng_template_3_Template, 0, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction7(2, _c1, ctx_r1.dayService.day.isDisabled, ctx_r1.dayService.day.isSelected, ctx_r1.dayService.day.isWeekEnd, ctx_r1.dayService.day.isInPeriod, ctx_r1.getSelectMode() === \"period\", ctx_r1.isStartOrEndDatePeriod() === \"end\", ctx_r1.isStartOrEndDatePeriod() === \"start\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.dayDirective);\n  }\n}\nexport let DayViewComponent = /*#__PURE__*/(() => {\n  class DayViewComponent {\n    constructor(dayService, calendarService) {\n      this.dayService = dayService;\n      this.calendarService = calendarService;\n    }\n    createChildComponent() {\n      let viewContainerRef = this.template;\n      viewContainerRef.clear();\n      viewContainerRef.createEmbeddedView(this.dayDirective.template, this.dayDirective.context);\n    }\n    isStartOrEndDatePeriod() {\n      if (this.getSelectMode() === \"period\") {\n        if (this.getSelectedDates().length == 2) {\n          if (this.date.getYmd() === this.getSelectedDates()[0].getYmd()) {\n            return \"start\";\n          } else if (this.date.getYmd() === this.getSelectedDates()[1].getYmd()) {\n            return \"end\";\n          }\n        }\n      }\n      return false;\n    }\n    getSelectedDates() {\n      return this.calendarService.selectedDates.value;\n    }\n    getSelectMode() {\n      return this.calendarService.selectMode;\n    }\n    ngAfterViewInit() {\n      if (this.dayDirective && this.template) {\n        this.createChildComponent();\n      }\n    }\n    // bad idea, too mach subscribes for every day\n    ngOnInit() {\n      this.dayService.createDay(this.date);\n      this.sub = this.calendarService.selectedDates.subscribe(data => {\n        const days = data.map(item => item.getYmd());\n        this.dayService.day.isSelected = days.includes(this.dayService.day.date.getYmd());\n        this.dayService.day.isInPeriod = this.dayService.getIsInPeriod(this.dayService.day.date);\n      });\n    }\n    detectChanges() {}\n    ngOnChanges() {\n      if (this.dayDirective && this.template) {\n        this.createChildComponent();\n      }\n    }\n    onClick() {\n      !this.dayService.day.isDisabled ? this.dayService.toggleDate() : null;\n    }\n    ngOnDestroy() {\n      this.sub.unsubscribe();\n    }\n    static {\n      this.ɵfac = function DayViewComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || DayViewComponent)(i0.ɵɵdirectiveInject(i1.DayService), i0.ɵɵdirectiveInject(i2.CalendarService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: DayViewComponent,\n        selectors: [[\"app-day-view\"]],\n        viewQuery: function DayViewComponent_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 5, ViewContainerRef);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\n          }\n        },\n        inputs: {\n          date: \"date\",\n          thisMonth: \"thisMonth\",\n          dayDirective: \"dayDirective\"\n        },\n        features: [i0.ɵɵProvidersFeature([DayService]), i0.ɵɵNgOnChangesFeature],\n        decls: 2,\n        vars: 1,\n        consts: [[\"tpl\", \"\"], [1, \"dayWrap\"], [\"class\", \"styledDay\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [1, \"styledDay\", 3, \"click\", \"ngClass\"], [\"class\", \"day\", 4, \"ngIf\"], [1, \"dayDir\"], [1, \"day\"]],\n        template: function DayViewComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 1);\n            i0.ɵɵtemplate(1, DayViewComponent_div_1_Template, 5, 10, \"div\", 2);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.thisMonth);\n          }\n        },\n        dependencies: [CommonModule, i3.NgClass, i3.NgIf, i3.DatePipe],\n        encapsulation: 2\n      });\n    }\n  }\n  return DayViewComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}