{"ast":null,"code":"import { CommonModule } from \"@angular/common\";\nimport { MonthService } from \"../_service/month.service\";\nimport { Subscription } from \"rxjs\";\nimport { WeekViewComponent } from \"../week-view/week-view.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_service/month.service\";\nimport * as i2 from \"../_service/calendar.service\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = [\"wrap\"];\nconst _c1 = a0 => ({\n  flexDirection: a0\n});\nfunction MonthViewComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const d_r2 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(2, 1, d_r2, \"EEEEEE\"));\n  }\n}\nfunction MonthViewComponent_app_week_view_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-week-view\", 7);\n  }\n  if (rf & 2) {\n    const weekStartDate_r3 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"date\", weekStartDate_r3)(\"dayDirectives\", ctx_r3.getWeekDayDirectives(weekStartDate_r3))(\"firstMonthDate\", ctx_r3.date)(\"ngStyle\", i0.ɵɵpureFunction1(4, _c1, ctx_r3.vertical ? \"column\" : \"row\"));\n  }\n}\nexport let MonthViewComponent = /*#__PURE__*/(() => {\n  class MonthViewComponent {\n    constructor(monthService, calendarService) {\n      this.monthService = monthService;\n      this.calendarService = calendarService;\n      this.sub = new Subscription();\n    }\n    showYears() {\n      this.calendarService.getShownYears(this.date);\n    }\n    ngOnInit() {\n      this.sub.add(this.calendarService.animationStep.subscribe(data => {\n        this.animationStep = data;\n      }));\n      this.weeks = this.monthService.getMonth(this.date);\n      let weekDays = [];\n      for (let i = 0; i < 7; i++) {\n        weekDays.push(this.weeks[0].adjustDate(i));\n      }\n      this.weekDays = weekDays;\n    }\n    ngOnDestroy() {\n      this.sub.unsubscribe();\n    }\n    getWeekDayDirectives(weekStartDate) {\n      weekStartDate.setHours(0, 0, 0, 0);\n      const weekEndDate = new Date(weekStartDate);\n      weekEndDate.setDate(weekStartDate.getDate() + 7);\n      weekEndDate.setHours(0, 0, 0, 0);\n      let directives = this.dayDirectives.filter(directive => directive.date.getTime() >= weekStartDate.getTime() && directive.date.getTime() < weekEndDate.getTime());\n      return directives;\n    }\n    static {\n      this.ɵfac = function MonthViewComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MonthViewComponent)(i0.ɵɵdirectiveInject(i1.MonthService), i0.ɵɵdirectiveInject(i2.CalendarService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: MonthViewComponent,\n        selectors: [[\"app-month-view\"]],\n        viewQuery: function MonthViewComponent_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 7);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.elementView = _t.first);\n          }\n        },\n        hostVars: 2,\n        hostBindings: function MonthViewComponent_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵstyleMap(ctx.elWidth);\n          }\n        },\n        inputs: {\n          date: \"date\",\n          updateDate: \"updateDate\",\n          vertical: \"vertical\",\n          dayDirectives: \"dayDirectives\"\n        },\n        outputs: {\n          elWidth: \"elWidth\"\n        },\n        features: [i0.ɵɵProvidersFeature([MonthService])],\n        decls: 9,\n        vars: 15,\n        consts: [[\"wrap\", \"\"], [1, \"monthHeader\", 3, \"click\"], [1, \"weekWrap\", 3, \"ngStyle\"], [2, \"display\", \"flex\", 3, \"ngStyle\"], [\"class\", \"dayWeekTitle\", 4, \"ngFor\", \"ngForOf\"], [3, \"date\", \"dayDirectives\", \"firstMonthDate\", \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [1, \"dayWeekTitle\"], [3, \"date\", \"dayDirectives\", \"firstMonthDate\", \"ngStyle\"]],\n        template: function MonthViewComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵelementStart(0, \"div\", null, 0)(2, \"div\", 1);\n            i0.ɵɵlistener(\"click\", function MonthViewComponent_Template_div_click_2_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.showYears());\n            });\n            i0.ɵɵtext(3);\n            i0.ɵɵpipe(4, \"date\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"div\", 2)(6, \"div\", 3);\n            i0.ɵɵtemplate(7, MonthViewComponent_div_7_Template, 3, 4, \"div\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(8, MonthViewComponent_app_week_view_8_Template, 1, 6, \"app-week-view\", 5);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵclassMapInterpolate1(\"monthWrap monthOne \", ctx.animationStep, \"\");\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(4, 8, ctx.date, \"LLLL yyyy\"), \" \");\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(11, _c1, ctx.vertical ? \"row\" : \"column\"));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(13, _c1, ctx.vertical ? \"column\" : \"row\"));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngForOf\", ctx.weekDays);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngForOf\", ctx.weeks);\n          }\n        },\n        dependencies: [CommonModule, i3.NgForOf, i3.NgStyle, i3.DatePipe, WeekViewComponent],\n        encapsulation: 2\n      });\n    }\n  }\n  return MonthViewComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}