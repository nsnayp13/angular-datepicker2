{"ast":null,"code":"import { EventEmitter } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { CalendarService } from \"../_service/calendar.service\";\nimport { DayDirective } from \"../day.directive\";\nimport { MonthViewComponent } from \"../month-view/month-view.component\";\nimport { MonthSelectComponent } from \"../month-select/month-select.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_service/calendar.service\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = [\"column\"];\nconst _c1 = a0 => ({\n  width: a0\n});\nfunction AngularDatepicker2_div_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵlistener(\"click\", function AngularDatepicker2_div_2_div_1_Template_div_click_0_listener() {\n      const item_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.clickSuggest(item_r2));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", item_r2.title, \"\");\n  }\n}\nfunction AngularDatepicker2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtemplate(1, AngularDatepicker2_div_2_div_1_Template, 2, 1, \"div\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.suggest);\n  }\n}\nfunction AngularDatepicker2_div_7_app_month_view_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-month-view\", 15, 0);\n  }\n  if (rf & 2) {\n    const date_r4 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"date\", date_r4)(\"vertical\", ctx_r2.vertical)(\"dayDirectives\", ctx_r2.getMonthDayDirectives(date_r4));\n  }\n}\nfunction AngularDatepicker2_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtemplate(1, AngularDatepicker2_div_7_app_month_view_1_Template, 2, 3, \"app-month-view\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.getCalendar());\n  }\n}\nfunction AngularDatepicker2_div_8_app_month_select_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-month-select\", 18, 0);\n  }\n  if (rf & 2) {\n    const date_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"date\", date_r5);\n  }\n}\nfunction AngularDatepicker2_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtemplate(1, AngularDatepicker2_div_8_app_month_select_1_Template, 2, 1, \"app-month-select\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.getCalendar());\n  }\n}\nexport let AngularDatepicker2 = /*#__PURE__*/(() => {\n  class AngularDatepicker2 {\n    constructor(calendarService, cdr) {\n      this.calendarService = calendarService;\n      this.cdr = cdr;\n      /**\n       * @description\n       *  Array of selected dates.\n       * */\n      this.selectedDates = [];\n      this.selectedDatesChange = new EventEmitter();\n      /**\n       * @description\n       *  Callback event when click on day\n       */\n      this.onDayClick = new EventEmitter();\n      /**\n       * @description\n       * Start week day, default 0\n       */\n      this.weekStart = 0;\n      /**\n       * @description\n       * Weekends, default [0,6], set Day.isWeekend true\n       */\n      this.weekends = [0, 6];\n      this.dayDirectives = [];\n    }\n    __getDirectives() {\n      if (this.dayDirectivesQueryList) {\n        this.dayDirectives = this.dayDirectivesQueryList.toArray();\n        this.dayDirectivesQueryList.changes.subscribe(data => {\n          this.dayDirectives = data.toArray();\n        });\n      }\n    }\n    ngAfterContentInit() {\n      // this.__getDirectives();\n    }\n    ngAfterViewInit() {\n      this.__getDirectives();\n    }\n    getMonthDayDirectives(date) {\n      return this.dayDirectives.filter(directive => directive.date.getMonth() === date.getMonth() && directive.date.getFullYear() === date.getFullYear());\n    }\n    clickSuggest(suggest) {\n      this.calendarService.selectMode = this.selectMode = suggest.selectMode;\n      this.calendarService.selectedDates.next(suggest.selectedDates);\n    }\n    recountWidth() {\n      let width = 0;\n      this.columns ? this.columns.toArray().map(item => width += item.elementView.nativeElement.clientWidth) : null;\n      this.calendarService.animationStep.value === \"stop\" && this.calendarService.viewSelectorMode === \"days\" ? this.width = width : null;\n      this.cdr.detectChanges();\n    }\n    ngAfterViewChecked() {\n      this.recountWidth();\n    }\n    ngOnInit() {\n      if (!this.shownDate) {\n        this.shownDate = new Date();\n      }\n      this.calendarService.animationStep.subscribe(data => {\n        if (data === \"stop\") {\n          setTimeout(() => this.recountWidth(), 10);\n        }\n      });\n      this.calendarService.selectedDates.subscribe(data => {\n        this.selectedDatesChange.emit(data);\n      });\n      this.calendarService.clickDayKey.subscribe(data => {\n        data ? this.onDayClick.emit(data.day) : null;\n      });\n      this.calendarService.days.next(this.days);\n      this.calendarService.weekStart = this.weekStart;\n      this.calendarService.weekends = this.weekends;\n      this.calendarService.viewMode = this.viewMode;\n      this.calendarService.viewSelectorMode = \"days\";\n      this.calendarService.selectMode = this.selectMode;\n      this.calendarService.shownDate = this.shownDate;\n      this.calendarService.setSelectedDates(this.selectedDates);\n      this.calendarService.setDays(this.days);\n      this.calendarService.getShownMonths(this.shownDate);\n      this.calendarService.setDisabledDates(this.disabledDates);\n    }\n    getCalendar() {\n      return this.calendarService.calendar;\n    }\n    getViewSelectorMode() {\n      return this.calendarService.viewSelectorMode;\n    }\n    calculate() {\n      let date = this.shownDate;\n      let countMonths = 0;\n      const months = [];\n      let lastDate;\n      lastDate = date ? date : this.calendarService.getLastDate();\n      countMonths = this.calendarService.getCountMonths();\n      for (let i = countMonths - 1; i >= 0; i--) {\n        months.push(new Date(lastDate).adjustMonth(-i));\n      }\n      return months;\n    }\n    isEqual(array, array1) {\n      console.log(array, array1);\n      let a = array.filter(item => array1.includes(item));\n      return a.length === 0 && array.length === array1.length;\n    }\n    _viewMode(simpleChange) {\n      if (simpleChange.viewMode.currentValue !== simpleChange.viewMode.previousValue) {\n        this.calendarService.viewMode = simpleChange.viewMode.currentValue;\n        this.calendarService.getShownMonths(this.shownDate);\n        setTimeout(() => this.recountWidth(), 10);\n      }\n    }\n    _selectMode(simpleChange) {\n      if (simpleChange.selectMode.currentValue !== simpleChange.selectMode.previousValue) {\n        this.calendarService.selectMode = simpleChange.selectMode.currentValue;\n        this.calendarService.getShownMonths(this.shownDate);\n        setTimeout(() => this.recountWidth(), 10);\n      }\n    }\n    _shownDate(simpleChange) {\n      if (simpleChange.shownDate.currentValue !== simpleChange.shownDate.previousValue) {\n        this.calendarService.shownDate = simpleChange.shownDate.currentValue;\n        this.calendarService.getShownMonths(this.shownDate);\n        setTimeout(() => this.recountWidth(), 10);\n      }\n    }\n    ngOnChanges(simpleChange) {\n      simpleChange.viewMode && this._viewMode(simpleChange);\n      simpleChange.selectMode && this._selectMode(simpleChange);\n      simpleChange.shownDate && this._shownDate(simpleChange);\n      simpleChange.days && this.calendarService.days.next(this.days);\n      simpleChange.selectedDates && this.calendarService.setSelectedDates(this.selectedDates);\n    }\n    /** Set custom Day[] */\n    setDays() {}\n    goNext() {\n      let lastDate = this.calendarService.calendar[this.calendarService.calendar.length - 1];\n      this.calendarService.goNext(lastDate);\n    }\n    goPrev() {\n      let firstDate = this.calendarService.calendar[0];\n      this.calendarService.goPrev(firstDate);\n    }\n    static {\n      this.ɵfac = function AngularDatepicker2_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || AngularDatepicker2)(i0.ɵɵdirectiveInject(i1.CalendarService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: AngularDatepicker2,\n        selectors: [[\"angular-datepicker2\"]],\n        contentQueries: function AngularDatepicker2_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, DayDirective, 4);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dayDirectivesQueryList = _t);\n          }\n        },\n        viewQuery: function AngularDatepicker2_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.columns = _t);\n          }\n        },\n        inputs: {\n          selectedDates: \"selectedDates\",\n          suggest: \"suggest\",\n          days: \"days\",\n          shownDate: \"shownDate\",\n          vertical: \"vertical\",\n          viewMode: \"viewMode\",\n          weekStart: \"weekStart\",\n          weekends: \"weekends\",\n          selectMode: \"selectMode\",\n          nowDate: \"nowDate\",\n          disabledDates: \"disabledDates\"\n        },\n        outputs: {\n          selectedDatesChange: \"selectedDatesChange\",\n          onDayClick: \"onDayClick\"\n        },\n        features: [i0.ɵɵProvidersFeature([CalendarService]), i0.ɵɵNgOnChangesFeature],\n        decls: 11,\n        vars: 8,\n        consts: [[\"column\", \"\"], [1, \"calendarWrap\"], [1, \"headerCalendar\"], [\"class\", \"suggests\", 4, \"ngIf\"], [1, \"dateSelector\"], [1, \"nextPrevBtn\", 2, \"left\", \"0\", 3, \"click\"], [1, \"wrapMonths\", 3, \"ngStyle\"], [\"class\", \"months\", 4, \"ngIf\"], [\"class\", \"\", \"style\", \"width: 100%; display:flex; flex:1;\", 4, \"ngIf\"], [1, \"nextPrevBtn\", 2, \"right\", \"0\", 3, \"click\"], [1, \"suggests\"], [\"class\", \"suggest\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"suggest\", 3, \"click\"], [1, \"months\"], [3, \"date\", \"vertical\", \"dayDirectives\", 4, \"ngFor\", \"ngForOf\"], [3, \"date\", \"vertical\", \"dayDirectives\"], [1, \"\", 2, \"width\", \"100%\", \"display\", \"flex\", \"flex\", \"1\"], [3, \"date\", 4, \"ngFor\", \"ngForOf\"], [3, \"date\"]],\n        template: function AngularDatepicker2_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2);\n            i0.ɵɵtemplate(2, AngularDatepicker2_div_2_Template, 2, 1, \"div\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"div\", 4)(4, \"div\", 5);\n            i0.ɵɵlistener(\"click\", function AngularDatepicker2_Template_div_click_4_listener() {\n              return ctx.goPrev();\n            });\n            i0.ɵɵtext(5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(6, \"div\", 6);\n            i0.ɵɵtemplate(7, AngularDatepicker2_div_7_Template, 2, 1, \"div\", 7)(8, AngularDatepicker2_div_8_Template, 2, 1, \"div\", 8);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(9, \"div\", 9);\n            i0.ɵɵlistener(\"click\", function AngularDatepicker2_Template_div_click_9_listener() {\n              return ctx.goNext();\n            });\n            i0.ɵɵtext(10);\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.suggest && ctx.suggest.length > 0);\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate(\"<\");\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(6, _c1, ctx.width + \"px\"));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.getViewSelectorMode() === \"days\");\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.getViewSelectorMode() === \"months\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate(\">\");\n          }\n        },\n        dependencies: [CommonModule, i2.NgForOf, i2.NgIf, i2.NgStyle, MonthViewComponent, MonthSelectComponent],\n        styles: [\".suggest{background:#e0f5f5;width:auto;display:block;float:left;color:#26b1b1;border-radius:2px;padding:4px 8px;margin-right:2px;margin-bottom:2px;font-size:13px;transition:all .2s;cursor:pointer}.suggest:hover{background:#82dcdc;color:#148a8a}app-calendar{display:block;float:left;width:100%}.nextPrevBtn{display:flex;flex-direction:column;justify-content:center;align-items:center;-webkit-user-select:none;user-select:none;position:absolute;cursor:pointer;padding:8px 16px;transition:all .2s;font-size:.9em;color:#26b1b1;z-index:1;background:#fff}.nextPrevBtn:hover{background:#eee}app-week-view{width:100%;display:flex;flex-direction:row}.dayWeekTitle{flex:1;color:#a9a9a9;justify-content:center;align-items:center;display:flex;font-size:.8em;padding:4px}.styledDay.isWeekEnd{color:#c53c3c}.weekWrap{display:flex;flex-direction:column}app-month-select{display:flex;float:left;min-width:200px;animation:appear .2s ease-in-out}.monthItem{width:33%;font-size:.8em;text-align:center;padding:9px 0;box-shadow:0 0 0 1px #f4f3f3;color:#313131}.monthItem:hover{-webkit-user-select:none;user-select:none;cursor:pointer;background:#eee;transition:.2s}app-month-view{display:flex;float:left;min-width:200px;animation:appear .2s ease-in-out;height:100%}@keyframes appear{0%{transform:scale(.6);opacity:.6}50%{transform:opacity(0);transform:scale(.8)}to{opacity:1;transform:scale(1)}}.months{display:flex;flex-direction:row;position:relative;overflow:hidden;height:100%}.wrapMonths{display:block;float:left;overflow:hidden;width:477px}.monthOne{position:relative}.monthOne.right{animation:right .2s ease-in-out}.monthOne.left{animation:left .2s ease-in-out}@keyframes left{0%{transform:translate(-100%)}to{transform:translate(0)}}@keyframes right{0%{transform:translate(0)}to{transform:translate(-100%)}}.suggests{padding:8px 8px 0;display:block;float:left;width:100%;box-sizing:border-box}.monthSelectBtn{display:flex;flex-direction:row;flex:1;padding:4px 8px}app-day-view{display:block;float:left;width:100%}.styledDay.isDisabled{color:#a7a7a7}.styledDay.isInPeriod{background:#26b1b12b!important}.styledDay.isSelected{background:#26b1b180!important}.styledDay.isSelected.period.end{background:linear-gradient(120deg,#26b1b12b 45%,#26b1b180 113%)!important;animation:appear .2s ease-in-out}.styledDay.isSelected.period.start{background:linear-gradient(-50deg,#26b1b12b 45%,#26b1b180 113%)!important;animation:appear .2s ease-in-out}.day{display:flex;flex:1;font-size:.8em;padding:6px}.dayDir{display:block;float:left;width:100%;height:100%}.styledDay{display:flex;flex:1;flex-direction:column;justify-content:center;align-items:center;color:#313131;transition:all .2s}.styledDay:hover{background:#eee;cursor:pointer;color:#313131;-webkit-user-select:none;user-select:none}.dayWrap{display:flex;flex:1;height:100%;width:100%}.calendarWrap{float:left;display:flex;background:#fff;flex-direction:column;border-radius:4px;transition:all .2s;width:min-content}.dateSelector{float:left;width:auto;display:flex;position:relative;flex-direction:row;transition:all .2s}.monthWrap{padding:0 8px;display:block;float:left;width:100%}.f1{display:flex;flex:1}.monthHeader{text-align:center;padding:8px 16px;font-size:15px;color:#2b2b2b}.monthHeader:first-letter{text-transform:uppercase}.monthHeader:hover{cursor:pointer;-webkit-user-select:none;user-select:none;background:#eee}\\n\"],\n        encapsulation: 2\n      });\n    }\n  }\n  return AngularDatepicker2;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}