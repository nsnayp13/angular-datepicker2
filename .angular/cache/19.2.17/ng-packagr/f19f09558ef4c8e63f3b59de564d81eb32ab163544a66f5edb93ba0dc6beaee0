{"hash":"122f9e743ce41abaf6038b5abb749fe3e0cead42c6f84930bf99f719154f6bf3","fesm2022":[{"exports":["AngularDatepicker2","CalendarService","DateUtils","DayDirective","DayService","DayViewComponent","MonthSelectComponent","MonthService","MonthViewComponent","SelectMode","ViewMode","WeekService","WeekViewComponent","YearSelectComponent"],"facadeModuleId":"/workspace/dist/angular-datepicker2/esm2022/angular-datepicker2.mjs","isDynamicEntry":false,"isEntry":true,"isImplicitEntry":false,"moduleIds":["/workspace/dist/angular-datepicker2/esm2022/lib/interfaces.mjs","/workspace/dist/angular-datepicker2/esm2022/lib/_utils/date.utils.mjs","/workspace/dist/angular-datepicker2/esm2022/lib/_service/calendar.service.mjs","/workspace/dist/angular-datepicker2/esm2022/lib/day.directive.mjs","/workspace/dist/angular-datepicker2/esm2022/lib/_service/month.service.mjs","/workspace/dist/angular-datepicker2/esm2022/lib/_service/week.service.mjs","/workspace/dist/angular-datepicker2/esm2022/lib/_service/day.service.mjs","/workspace/dist/angular-datepicker2/esm2022/lib/day-view/day-view.component.mjs","/workspace/dist/angular-datepicker2/esm2022/lib/week-view/week-view.component.mjs","/workspace/dist/angular-datepicker2/esm2022/lib/month-view/month-view.component.mjs","/workspace/dist/angular-datepicker2/esm2022/lib/month-select/month-select.component.mjs","/workspace/dist/angular-datepicker2/esm2022/lib/year-select/year-select.component.mjs","/workspace/dist/angular-datepicker2/esm2022/lib/calendar/angular-datepicker2.component.mjs","/workspace/dist/angular-datepicker2/esm2022/public-api.mjs","/workspace/dist/angular-datepicker2/esm2022/angular-datepicker2.mjs"],"name":"angular-datepicker2","type":"chunk","dynamicImports":[],"fileName":"angular-datepicker2.mjs","implicitlyLoadedBefore":[],"importedBindings":{"@angular/core":["*","Injectable","Directive","Input","ViewContainerRef","Component","ViewChild","Output","HostBinding","EventEmitter","ViewEncapsulation","ContentChildren","ViewChildren"],"@angular/common":["CommonModule","*"],"rxjs":["BehaviorSubject","Subscription"]},"imports":["@angular/core","@angular/common","rxjs"],"modules":{"/workspace/dist/angular-datepicker2/esm2022/lib/interfaces.mjs":{"code":"/**\n * @publicApi\n */\nvar SelectMode;\n(function (SelectMode) {\n    SelectMode[\"Single\"] = \"single\";\n    SelectMode[\"Multiple\"] = \"multiple\";\n    SelectMode[\"Period\"] = \"period\";\n})(SelectMode || (SelectMode = {}));\nvar ViewMode;\n(function (ViewMode) {\n    ViewMode[\"Year\"] = \"year\";\n    ViewMode[\"Quarter\"] = \"quarter\";\n    ViewMode[\"Semester\"] = \"semester\";\n})(ViewMode || (ViewMode = {}));","originalLength":2212,"removedExports":[],"renderedExports":["SelectMode","ViewMode"],"renderedLength":391},"/workspace/dist/angular-datepicker2/esm2022/lib/_utils/date.utils.mjs":{"code":"/**\n * Date utility functions for angular-datepicker2\n * Replaces Date prototype extensions for better compatibility\n */\nclass DateUtils {\n    static adjustDate(date, num = 0) {\n        const newDate = new Date(date);\n        newDate.setDate(newDate.getDate() + num);\n        return newDate;\n    }\n    /** Adjust month and set date to 1 */\n    static adjustMonth(date, num = 0) {\n        const newDate = new Date(date);\n        newDate.setDate(1);\n        newDate.setMonth(newDate.getMonth() + num);\n        return newDate;\n    }\n    /** Adjust year, set month to 0 and date to 1 */\n    static adjustYear(date, num = 0) {\n        const newDate = new Date(date);\n        newDate.setDate(1);\n        newDate.setMonth(0);\n        newDate.setFullYear(newDate.getFullYear() + num);\n        return newDate;\n    }\n    static getDayWithStart(date, start) {\n        const newDate = new Date(date.getTime());\n        let day = newDate.getDay();\n        day = day - start;\n        if (day < 0) {\n            day = 7 + day;\n        }\n        return day;\n    }\n    static getFirstDateDay(date, start) {\n        const newDate = new Date(date.getTime());\n        newDate.setDate(1);\n        return DateUtils.getDayWithStart(newDate, start);\n    }\n    static getYmd(date) {\n        return (date.getFullYear().toString() +\n            String(date.getMonth().toString()).padStart(2, \"0\") +\n            String(date.getDate().toString()).padStart(2, \"0\"));\n    }\n}","originalLength":5854,"removedExports":[],"renderedExports":["DateUtils"],"renderedLength":1444},"/workspace/dist/angular-datepicker2/esm2022/lib/_service/calendar.service.mjs":{"code":"class CalendarService {\n    constructor() {\n        this.selectedDates = new BehaviorSubject([]);\n        this.disabledDates = new BehaviorSubject(null);\n        this.days = new BehaviorSubject([]);\n        this.animationStep = new BehaviorSubject(\"stop\");\n        this.recountWidth = new BehaviorSubject(1);\n        /** Needs for onClickDay detect change */\n        this.clickDayKey = new BehaviorSubject(null);\n        this.updateDate = new BehaviorSubject(new Date());\n    }\n    setSelectedDates(selectedDates) {\n        this.selectedDates.next(selectedDates);\n    }\n    setDisabledDates(disabledDates) {\n        this.disabledDates.next(disabledDates);\n    }\n    setDays(days) {\n        this.days.next(days);\n    }\n    setShownDate(date) {\n        this.shownDate = date;\n    }\n    addSelected(date) {\n        let selectedDates = this.selectedDates.value;\n        selectedDates.push(date);\n        this.selectedDates.next(selectedDates);\n    }\n    getCountMonths() {\n        let viewMode = this.viewMode;\n        if (typeof viewMode === \"number\") {\n            return viewMode;\n        }\n        else {\n            if (viewMode === ViewMode.Quarter) {\n                return 3;\n            }\n            else if (viewMode === ViewMode.Semester) {\n                return 6;\n            }\n        }\n        return 1;\n    }\n    getLastDate(date) {\n        //console.log(date, 'date getlasr')\n        let viewMode = this.viewMode;\n        let lastDate = this.shownDate\n            ? new Date(this.shownDate)\n            : this.selectedDates.value\n                ? new Date(this.selectedDates[this.selectedDates.value.length - 1])\n                : new Date();\n        lastDate = date ? new Date(date) : lastDate;\n        //if (typeof viewMode === \"ViewMode\") {\n        if (viewMode === ViewMode.Quarter) {\n            if (lastDate.getMonth() >= 0 && lastDate.getMonth() <= 2) {\n                lastDate.setMonth(2);\n            }\n            else if (lastDate.getMonth() >= 3 && lastDate.getMonth() <= 5) {\n                lastDate.setMonth(5);\n            }\n            else if (lastDate.getMonth() >= 6 && lastDate.getMonth() <= 8) {\n                lastDate.setMonth(8);\n            }\n            else if (lastDate.getMonth() >= 9 && lastDate.getMonth() <= 11) {\n                lastDate.setMonth(11);\n            }\n        }\n        else if (viewMode === ViewMode.Semester) {\n            if (lastDate.getMonth() >= 0 && lastDate.getMonth() <= 5) {\n                lastDate.setMonth(5);\n            }\n            else if (lastDate.getMonth() >= 6 && lastDate.getMonth() <= 11) {\n                lastDate.setMonth(11);\n            }\n        }\n        //}\n        return lastDate;\n    }\n    getShownYears(lastDateShown) {\n        let countMonths = 0;\n        const months = [];\n        countMonths = this.getCountMonths();\n        this.countMonths = countMonths;\n        for (let i = countMonths - 1; i >= 0; i--) {\n            months.push(DateUtils.adjustYear(new Date(lastDateShown), -i));\n        }\n        this.calendar = months;\n        this.viewSelectorMode = \"months\";\n    }\n    getShownMonths(date) {\n        let countMonths = 0;\n        const months = [];\n        let lastDate;\n        lastDate = this.getLastDate(date);\n        countMonths = this.getCountMonths();\n        this.countMonths = countMonths;\n        for (let i = countMonths - 1; i >= 0; i--) {\n            months.push(DateUtils.adjustMonth(new Date(lastDate), -i));\n        }\n        this.calendar = months;\n        this.viewSelectorMode = \"days\";\n    }\n    goPrev(firstDate) {\n        let prevDate = new Date(firstDate);\n        if (this.viewSelectorMode === \"days\") {\n            prevDate = DateUtils.adjustMonth(prevDate, -1);\n        }\n        else if (this.viewSelectorMode === \"months\") {\n            prevDate = DateUtils.adjustYear(prevDate, -1);\n        }\n        let dates = [...this.calendar];\n        dates.unshift(prevDate);\n        this.calendar = dates;\n        this.animationStep.next(\"left\");\n        setTimeout(() => {\n            dates = [...this.calendar];\n            dates.splice(dates.length - 1, 1);\n            this.calendar = dates;\n            this.animationStep.next(\"stop\");\n        }, 205);\n    }\n    goNext(lastDate) {\n        let nextDate = new Date(lastDate);\n        if (this.viewSelectorMode === \"days\") {\n            nextDate = DateUtils.adjustMonth(nextDate, 1);\n        }\n        else if (this.viewSelectorMode === \"months\") {\n            nextDate = DateUtils.adjustYear(nextDate, 1);\n        }\n        let dates = [...this.calendar];\n        //dates.splice(0, 1);\n        dates.push(nextDate);\n        this.calendar = dates;\n        this.animationStep.next(\"right\");\n        setTimeout(() => {\n            dates = [...this.calendar];\n            dates.splice(0, 1);\n            this.calendar = dates;\n            this.animationStep.next(\"stop\");\n            //this.recountWidth.next(this.recountWidth.value + 1);\n        }, 205);\n    }\n    /** @nocollapse */ static { this.ɵfac = function CalendarService_Factory(__ngFactoryType__) { return new (__ngFactoryType__ || CalendarService)(); }; }\n    /** @nocollapse */ static { this.ɵprov = /** @pureOrBreakMyCode */ i0.ɵɵdefineInjectable({ token: CalendarService, factory: CalendarService.ɵfac, providedIn: \"root\" }); }\n}\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CalendarService, [{\n        type: Injectable,\n        args: [{\n                providedIn: \"root\",\n            }]\n    }], () => [], null); })();","originalLength":20193,"removedExports":[],"renderedExports":["CalendarService"],"renderedLength":5506},"/workspace/dist/angular-datepicker2/esm2022/lib/day.directive.mjs":{"code":"class DayDirective {\n    constructor(template, container) {\n        this.template = template;\n        this.container = container;\n        this.context = null;\n        this.__created = false;\n    }\n    set day(date) {\n        this.context = {\n            $implicit: date,\n        };\n    }\n    ngOnInit() {\n        this.context = {\n            $implicit: this.date,\n            date: this.date,\n        };\n    }\n    /** @nocollapse */ static { this.ɵfac = function DayDirective_Factory(__ngFactoryType__) { return new (__ngFactoryType__ || DayDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef)); }; }\n    /** @nocollapse */ static { this.ɵdir = /** @pureOrBreakMyCode */ i0.ɵɵdefineDirective({ type: DayDirective, selectors: [[\"\", \"ad2day\", \"\"]], inputs: { date: [0, \"ad2dayFrom\", \"date\"], day: \"day\" } }); }\n}\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DayDirective, [{\n        type: Directive,\n        args: [{\n                selector: \"[ad2day]\",\n                standalone: true,\n                //providers: [TemplateRef],\n            }]\n    }], () => [{ type: i0.TemplateRef }, { type: i0.ViewContainerRef }], { date: [{\n            type: Input,\n            args: [\"ad2dayFrom\"]\n        }], day: [{\n            type: Input\n        }] }); })();","originalLength":3367,"removedExports":[],"renderedExports":["DayDirective"],"renderedLength":1326},"/workspace/dist/angular-datepicker2/esm2022/lib/_service/month.service.mjs":{"code":"class MonthService {\n    constructor(calendarService) {\n        this.calendarService = calendarService;\n    }\n    getMonth(date) {\n        const daysInMonth = new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n        let weekStart = this.calendarService.weekStart;\n        const countWeek = Math.ceil((daysInMonth + DateUtils.getFirstDateDay(date, weekStart)) / 7);\n        const weeks = [];\n        for (let i = 0; i < countWeek; i++) {\n            const startWeekDate = new Date(date);\n            startWeekDate.setDate(date.getDate() + i * 7 - DateUtils.getDayWithStart(date, weekStart));\n            weeks.push(startWeekDate);\n        }\n        return weeks;\n    }\n    /** @nocollapse */ static { this.ɵfac = function MonthService_Factory(__ngFactoryType__) { return new (__ngFactoryType__ || MonthService)(i0.ɵɵinject(CalendarService)); }; }\n    /** @nocollapse */ static { this.ɵprov = /** @pureOrBreakMyCode */ i0.ɵɵdefineInjectable({ token: MonthService, factory: MonthService.ɵfac, providedIn: \"root\" }); }\n}\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MonthService, [{\n        type: Injectable,\n        args: [{\n                providedIn: \"root\"\n            }]\n    }], () => [{ type: CalendarService }], null); })();","originalLength":4303,"removedExports":[],"renderedExports":["MonthService"],"renderedLength":1278},"/workspace/dist/angular-datepicker2/esm2022/lib/_service/week.service.mjs":{"code":"class WeekService {\n    constructor() { }\n    getWeek(date) {\n        const dayInWeek = 7;\n        const days = [];\n        for (let i = 0; i < dayInWeek; i++) {\n            const curDate = new Date(date);\n            curDate.setDate(curDate.getDate() + i);\n            days.push(curDate);\n        }\n        return days;\n    }\n    /** @nocollapse */ static { this.ɵfac = function WeekService_Factory(__ngFactoryType__) { return new (__ngFactoryType__ || WeekService)(); }; }\n    /** @nocollapse */ static { this.ɵprov = /** @pureOrBreakMyCode */ i0.ɵɵdefineInjectable({ token: WeekService, factory: WeekService.ɵfac, providedIn: \"root\" }); }\n}\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(WeekService, [{\n        type: Injectable,\n        args: [{\n                providedIn: \"root\"\n            }]\n    }], () => [], null); })();","originalLength":2579,"removedExports":[],"renderedExports":["WeekService"],"renderedLength":864},"/workspace/dist/angular-datepicker2/esm2022/lib/_service/day.service.mjs":{"code":"class DayService {\n    constructor(calendarService) {\n        this.calendarService = calendarService;\n    }\n    getIsDisabled(date) {\n        const disabledDates = this.calendarService.disabledDates.value;\n        if (!disabledDates) {\n            return false;\n        }\n        if (disabledDates.dates &&\n            disabledDates.dates.length > 0 &&\n            disabledDates.dates.find((disableDate) => disableDate.getTime() === date.getTime())) {\n            return true;\n        }\n        if (disabledDates.after && disabledDates.after.getTime() < date.getTime()) {\n            return true;\n        }\n        if (disabledDates.before &&\n            disabledDates.before.getTime() > date.getTime()) {\n            return true;\n        }\n        return false;\n    }\n    createDay(date) {\n        this.day = {\n            isDisabled: this.getIsDisabled(date),\n            isWeekEnd: this.calendarService.weekends.includes(date.getDay()),\n            isSelected: false,\n            isHovered: false,\n            isInPeriod: this.getIsInPeriod(date),\n            date: date,\n        };\n        return this.day;\n    }\n    getIsInPeriod(date) {\n        if (this.calendarService.selectMode === \"period\" &&\n            this.calendarService.selectedDates.value.length == 2 &&\n            date.getTime() >= this.calendarService.selectedDates.value[0].getTime() &&\n            date.getTime() <= this.calendarService.selectedDates.value[1].getTime()) {\n            return true;\n        }\n        return false;\n    }\n    getDay() {\n        return this.day;\n    }\n    sortByDate(a, b) {\n        if (a.getTime() > b.getTime())\n            return 1;\n        if (a.getTime() == b.getTime())\n            return 0;\n        if (a.getTime() < b.getTime())\n            return -1;\n    }\n    toggleDate() {\n        console.log(\"clicked in service\");\n        this.calendarService.clickDayKey.next({\n            key: DateUtils.getYmd(new Date()) + \"\" + Math.random(),\n            day: this.day,\n        });\n        if (this.calendarService.selectMode === \"single\") {\n            if (this.calendarService.selectedDates.value.length > 0) {\n                this.calendarService.selectedDates.next([this.day.date]);\n            }\n        }\n        else if (this.calendarService.selectMode === \"multiple\") {\n            if (this.day.isSelected) {\n                let selectedDates = this.calendarService.selectedDates.value.filter((elem) => DateUtils.getYmd(elem) !== DateUtils.getYmd(this.day.date));\n                selectedDates.sort(this.sortByDate);\n                this.calendarService.selectedDates.next(selectedDates);\n            }\n            else {\n                let selectedDates = this.calendarService.selectedDates.value;\n                selectedDates.push(this.day.date);\n                this.calendarService.selectedDates.next(selectedDates);\n            }\n        }\n        else if (this.calendarService.selectMode === \"period\") {\n            if (this.day.isSelected) {\n                let selectedDates = this.calendarService.selectedDates.value.filter((elem) => DateUtils.getYmd(elem) !== DateUtils.getYmd(this.day.date));\n                this.calendarService.selectedDates.next(selectedDates);\n            }\n            else {\n                if (this.calendarService.selectedDates.value.length == 2) {\n                    this.calendarService.selectedDates.next([this.day.date]);\n                }\n                else if (this.calendarService.selectedDates.value.length < 2) {\n                    let selectedDates = this.calendarService.selectedDates.value;\n                    selectedDates.push(this.day.date);\n                    selectedDates.sort(this.sortByDate);\n                    //console.log(selectedDates)\n                    this.calendarService.selectedDates.next(selectedDates);\n                }\n            }\n        }\n    }\n    /** @nocollapse */ static { this.ɵfac = function DayService_Factory(__ngFactoryType__) { return new (__ngFactoryType__ || DayService)(i0.ɵɵinject(CalendarService)); }; }\n    /** @nocollapse */ static { this.ɵprov = /** @pureOrBreakMyCode */ i0.ɵɵdefineInjectable({ token: DayService, factory: DayService.ɵfac, providedIn: \"root\" }); }\n}\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DayService, [{\n        type: Injectable,\n        args: [{\n                providedIn: \"root\",\n            }]\n    }], () => [{ type: CalendarService }], null); })();","originalLength":15324,"removedExports":[],"renderedExports":["DayService"],"renderedLength":4427},"/workspace/dist/angular-datepicker2/esm2022/lib/day-view/day-view.component.mjs":{"code":"const _c0$3 = [\"tpl\"];\nconst _c1$2 = (a0, a1, a2, a3, a4, a5, a6) => ({ isDisabled: a0, isSelected: a1, isWeekEnd: a2, isInPeriod: a3, period: a4, end: a5, start: a6 });\nfunction DayViewComponent_div_1_span_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(2, 1, ctx_r1.dayService.day.date, \"d\"), \" \");\n} }\nfunction DayViewComponent_div_1_ng_template_3_Template(rf, ctx) { }\nfunction DayViewComponent_div_1_Template(rf, ctx) { if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵlistener(\"click\", function DayViewComponent_div_1_Template_div_click_0_listener() { i0.ɵɵrestoreView(_r1); const ctx_r1 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r1.onClick()); });\n    i0.ɵɵtemplate(1, DayViewComponent_div_1_span_1_Template, 3, 4, \"span\", 4);\n    i0.ɵɵelementStart(2, \"div\", 5);\n    i0.ɵɵtemplate(3, DayViewComponent_div_1_ng_template_3_Template, 0, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction7(2, _c1$2, ctx_r1.dayService.day.isDisabled, ctx_r1.dayService.day.isSelected, ctx_r1.dayService.day.isWeekEnd, ctx_r1.dayService.day.isInPeriod, ctx_r1.getSelectMode() === \"period\", ctx_r1.isStartOrEndDatePeriod() === \"end\", ctx_r1.isStartOrEndDatePeriod() === \"start\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.dayDirective);\n} }\nclass DayViewComponent {\n    constructor(dayService, calendarService) {\n        this.dayService = dayService;\n        this.calendarService = calendarService;\n    }\n    createChildComponent() {\n        let viewContainerRef = this.template;\n        viewContainerRef.clear();\n        viewContainerRef.createEmbeddedView(this.dayDirective.template, this.dayDirective.context);\n    }\n    isStartOrEndDatePeriod() {\n        if (this.getSelectMode() === \"period\") {\n            if (this.getSelectedDates().length == 2) {\n                if (DateUtils.getYmd(this.date) === DateUtils.getYmd(this.getSelectedDates()[0])) {\n                    return \"start\";\n                }\n                else if (DateUtils.getYmd(this.date) === DateUtils.getYmd(this.getSelectedDates()[1])) {\n                    return \"end\";\n                }\n            }\n        }\n        return false;\n    }\n    getSelectedDates() {\n        return this.calendarService.selectedDates.value;\n    }\n    getSelectMode() {\n        return this.calendarService.selectMode;\n    }\n    ngAfterViewInit() {\n        if (this.dayDirective && this.template) {\n            this.createChildComponent();\n        }\n    }\n    // bad idea, too mach subscribes for every day\n    ngOnInit() {\n        this.dayService.createDay(this.date);\n        this.sub = this.calendarService.selectedDates.subscribe((data) => {\n            const days = data.map((item) => DateUtils.getYmd(item));\n            this.dayService.day.isSelected = days.includes(DateUtils.getYmd(this.dayService.day.date));\n            this.dayService.day.isInPeriod = this.dayService.getIsInPeriod(this.dayService.day.date);\n        });\n    }\n    detectChanges() { }\n    ngOnChanges() {\n        if (this.dayDirective && this.template) {\n            this.createChildComponent();\n        }\n    }\n    onClick() {\n        !this.dayService.day.isDisabled ? this.dayService.toggleDate() : null;\n    }\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n    /** @nocollapse */ static { this.ɵfac = function DayViewComponent_Factory(__ngFactoryType__) { return new (__ngFactoryType__ || DayViewComponent)(i0.ɵɵdirectiveInject(DayService), i0.ɵɵdirectiveInject(CalendarService)); }; }\n    /** @nocollapse */ static { this.ɵcmp = /** @pureOrBreakMyCode */ i0.ɵɵdefineComponent({ type: DayViewComponent, selectors: [[\"app-day-view\"]], viewQuery: function DayViewComponent_Query(rf, ctx) { if (rf & 1) {\n            i0.ɵɵviewQuery(_c0$3, 5, ViewContainerRef);\n        } if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\n        } }, inputs: { date: \"date\", thisMonth: \"thisMonth\", dayDirective: \"dayDirective\" }, features: [i0.ɵɵProvidersFeature([DayService]), i0.ɵɵNgOnChangesFeature], decls: 2, vars: 1, consts: [[\"tpl\", \"\"], [1, \"dayWrap\"], [\"class\", \"styledDay\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [1, \"styledDay\", 3, \"click\", \"ngClass\"], [\"class\", \"day\", 4, \"ngIf\"], [1, \"dayDir\"], [1, \"day\"]], template: function DayViewComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 1);\n            i0.ɵɵtemplate(1, DayViewComponent_div_1_Template, 5, 10, \"div\", 2);\n            i0.ɵɵelementEnd();\n        } if (rf & 2) {\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.thisMonth);\n        } }, dependencies: [CommonModule, i2.NgClass, i2.NgIf, i2.DatePipe], encapsulation: 2 }); }\n}\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DayViewComponent, [{\n        type: Component,\n        args: [{ selector: \"app-day-view\", standalone: true, imports: [CommonModule], providers: [DayService], template: \"<div class=\\\"dayWrap\\\">\\n    <div class=\\\"styledDay\\\" *ngIf=\\\"thisMonth\\\" (click)=\\\"onClick()\\\" [ngClass]=\\\"{\\n        isDisabled : dayService.day.isDisabled,\\n        isSelected: dayService.day.isSelected,\\n        isWeekEnd: dayService.day.isWeekEnd,\\n        isInPeriod: dayService.day.isInPeriod,\\n        period: getSelectMode()==='period',\\n        end: isStartOrEndDatePeriod()==='end',\\n        start: isStartOrEndDatePeriod()==='start'\\n    }\\\">\\n        <span *ngIf=\\\"!dayDirective\\\" class=\\\"day\\\">\\n            {{dayService.day.date | date: \\\"d\\\"}}\\n        </span>\\n        <div class=\\\"dayDir\\\">\\n            <ng-template #tpl></ng-template>\\n        </div>\\n    </div>\\n</div>\" }]\n    }], () => [{ type: DayService }, { type: CalendarService }], { date: [{\n            type: Input\n        }], thisMonth: [{\n            type: Input\n        }], dayDirective: [{\n            type: Input\n        }], template: [{\n            type: ViewChild,\n            args: [\"tpl\", { static: false, read: ViewContainerRef }]\n        }] }); })();\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassDebugInfo(DayViewComponent, { className: \"DayViewComponent\", filePath: \"lib/day-view/day-view.component.ts\", lineNumber: 26 }); })();","originalLength":15833,"removedExports":[],"renderedExports":["DayViewComponent"],"renderedLength":6536},"/workspace/dist/angular-datepicker2/esm2022/lib/week-view/week-view.component.mjs":{"code":"function WeekViewComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelement(1, \"app-day-view\", 2);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const date_r1 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"dayDirective\", ctx_r1.getDayDirective(date_r1))(\"date\", date_r1)(\"thisMonth\", date_r1.getMonth() === ctx_r1.firstMonthDate.getMonth() && date_r1.getFullYear() === ctx_r1.firstMonthDate.getFullYear());\n} }\nclass WeekViewComponent {\n    constructor(weekService) {\n        this.weekService = weekService;\n    }\n    ngOnInit() {\n        this.dates = this.weekService.getWeek(this.date);\n    }\n    getDayDirective(date) {\n        let day = this.dayDirectives.find((directive) => directive.date.getTime() === date.getTime());\n        return day;\n    }\n    /** @nocollapse */ static { this.ɵfac = function WeekViewComponent_Factory(__ngFactoryType__) { return new (__ngFactoryType__ || WeekViewComponent)(i0.ɵɵdirectiveInject(WeekService)); }; }\n    /** @nocollapse */ static { this.ɵcmp = /** @pureOrBreakMyCode */ i0.ɵɵdefineComponent({ type: WeekViewComponent, selectors: [[\"app-week-view\"]], inputs: { date: \"date\", firstMonthDate: \"firstMonthDate\", dayDirectives: \"dayDirectives\" }, features: [i0.ɵɵProvidersFeature([WeekService])], decls: 1, vars: 1, consts: [[\"class\", \"f1\", 4, \"ngFor\", \"ngForOf\"], [1, \"f1\"], [3, \"dayDirective\", \"date\", \"thisMonth\"]], template: function WeekViewComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵtemplate(0, WeekViewComponent_div_0_Template, 2, 3, \"div\", 0);\n        } if (rf & 2) {\n            i0.ɵɵproperty(\"ngForOf\", ctx.dates);\n        } }, dependencies: [CommonModule, i2.NgForOf, DayViewComponent], encapsulation: 2 }); }\n}\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(WeekViewComponent, [{\n        type: Component,\n        args: [{ selector: \"app-week-view\", standalone: true, imports: [CommonModule, DayViewComponent], providers: [WeekService], template: \"<div *ngFor=\\\"let date of dates\\\" class=\\\"f1\\\">\\n    <app-day-view [dayDirective]=\\\"getDayDirective(date)\\\" [date]=\\\"date\\\"\\n        [thisMonth]=\\\"date.getMonth()===firstMonthDate.getMonth()&&date.getFullYear()===firstMonthDate.getFullYear()\\\">\\n    </app-day-view>\\n</div>\" }]\n    }], () => [{ type: WeekService }], { date: [{\n            type: Input\n        }], firstMonthDate: [{\n            type: Input\n        }], dayDirectives: [{\n            type: Input\n        }] }); })();\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassDebugInfo(WeekViewComponent, { className: \"WeekViewComponent\", filePath: \"lib/week-view/week-view.component.ts\", lineNumber: 15 }); })();","originalLength":6540,"removedExports":[],"renderedExports":["WeekViewComponent"],"renderedLength":2731},"/workspace/dist/angular-datepicker2/esm2022/lib/month-view/month-view.component.mjs":{"code":"const _c0$2 = [\"wrap\"];\nconst _c1$1 = a0 => ({ flexDirection: a0 });\nfunction MonthViewComponent_div_7_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const d_r2 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(2, 1, d_r2, \"EEEEEE\"));\n} }\nfunction MonthViewComponent_app_week_view_8_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"app-week-view\", 7);\n} if (rf & 2) {\n    const weekStartDate_r3 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"date\", weekStartDate_r3)(\"dayDirectives\", ctx_r3.getWeekDayDirectives(weekStartDate_r3))(\"firstMonthDate\", ctx_r3.date)(\"ngStyle\", i0.ɵɵpureFunction1(4, _c1$1, ctx_r3.vertical ? \"column\" : \"row\"));\n} }\nclass MonthViewComponent {\n    constructor(monthService, calendarService) {\n        this.monthService = monthService;\n        this.calendarService = calendarService;\n        this.sub = new Subscription();\n    }\n    showYears() {\n        this.calendarService.getShownYears(this.date);\n    }\n    ngOnInit() {\n        this.sub.add(this.calendarService.animationStep.subscribe((data) => {\n            this.animationStep = data;\n        }));\n        this.weeks = this.monthService.getMonth(this.date);\n        let weekDays = [];\n        for (let i = 0; i < 7; i++) {\n            weekDays.push(DateUtils.adjustDate(this.weeks[0], i));\n        }\n        this.weekDays = weekDays;\n    }\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n    getWeekDayDirectives(weekStartDate) {\n        weekStartDate.setHours(0, 0, 0, 0);\n        const weekEndDate = new Date(weekStartDate);\n        weekEndDate.setDate(weekStartDate.getDate() + 7);\n        weekEndDate.setHours(0, 0, 0, 0);\n        let directives = this.dayDirectives.filter((directive) => directive.date.getTime() >= weekStartDate.getTime() &&\n            directive.date.getTime() < weekEndDate.getTime());\n        return directives;\n    }\n    /** @nocollapse */ static { this.ɵfac = function MonthViewComponent_Factory(__ngFactoryType__) { return new (__ngFactoryType__ || MonthViewComponent)(i0.ɵɵdirectiveInject(MonthService), i0.ɵɵdirectiveInject(CalendarService)); }; }\n    /** @nocollapse */ static { this.ɵcmp = /** @pureOrBreakMyCode */ i0.ɵɵdefineComponent({ type: MonthViewComponent, selectors: [[\"app-month-view\"]], viewQuery: function MonthViewComponent_Query(rf, ctx) { if (rf & 1) {\n            i0.ɵɵviewQuery(_c0$2, 7);\n        } if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.elementView = _t.first);\n        } }, hostVars: 2, hostBindings: function MonthViewComponent_HostBindings(rf, ctx) { if (rf & 2) {\n            i0.ɵɵstyleMap(ctx.elWidth);\n        } }, inputs: { date: \"date\", updateDate: \"updateDate\", vertical: \"vertical\", dayDirectives: \"dayDirectives\" }, outputs: { elWidth: \"elWidth\" }, features: [i0.ɵɵProvidersFeature([MonthService])], decls: 9, vars: 15, consts: [[\"wrap\", \"\"], [1, \"monthHeader\", 3, \"click\"], [1, \"weekWrap\", 3, \"ngStyle\"], [2, \"display\", \"flex\", 3, \"ngStyle\"], [\"class\", \"dayWeekTitle\", 4, \"ngFor\", \"ngForOf\"], [3, \"date\", \"dayDirectives\", \"firstMonthDate\", \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [1, \"dayWeekTitle\"], [3, \"date\", \"dayDirectives\", \"firstMonthDate\", \"ngStyle\"]], template: function MonthViewComponent_Template(rf, ctx) { if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵelementStart(0, \"div\", null, 0)(2, \"div\", 1);\n            i0.ɵɵlistener(\"click\", function MonthViewComponent_Template_div_click_2_listener() { i0.ɵɵrestoreView(_r1); return i0.ɵɵresetView(ctx.showYears()); });\n            i0.ɵɵtext(3);\n            i0.ɵɵpipe(4, \"date\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"div\", 2)(6, \"div\", 3);\n            i0.ɵɵtemplate(7, MonthViewComponent_div_7_Template, 3, 4, \"div\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(8, MonthViewComponent_app_week_view_8_Template, 1, 6, \"app-week-view\", 5);\n            i0.ɵɵelementEnd()();\n        } if (rf & 2) {\n            i0.ɵɵclassMapInterpolate1(\"monthWrap monthOne \", ctx.animationStep, \"\");\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(4, 8, ctx.date, \"LLLL yyyy\"), \" \");\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(11, _c1$1, ctx.vertical ? \"row\" : \"column\"));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(13, _c1$1, ctx.vertical ? \"column\" : \"row\"));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngForOf\", ctx.weekDays);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngForOf\", ctx.weeks);\n        } }, dependencies: [CommonModule, i2.NgForOf, i2.NgStyle, i2.DatePipe, WeekViewComponent], encapsulation: 2 }); }\n}\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MonthViewComponent, [{\n        type: Component,\n        args: [{ selector: \"app-month-view\", standalone: true, imports: [CommonModule, WeekViewComponent], providers: [MonthService], template: \"<div #wrap class=\\\"monthWrap monthOne {{animationStep}}\\\">\\n    <div class=\\\"monthHeader\\\" (click)=\\\"showYears()\\\">\\n        {{date | date: \\\"LLLL yyyy\\\"}}\\n    </div>\\n    <div class=\\\"weekWrap\\\" [ngStyle]=\\\"{flexDirection: (vertical)?'row':'column'}\\\">\\n        <div [ngStyle]=\\\"{flexDirection: ((vertical)?'column':'row')}\\\" style=\\\"display: flex;\\\">\\n            <div *ngFor=\\\"let d of weekDays\\\" class=\\\"dayWeekTitle\\\">{{ d | date: 'EEEEEE' }}</div>\\n        </div>\\n        <app-week-view *ngFor=\\\"let weekStartDate of weeks\\\" [date]=\\\"weekStartDate\\\"\\n            [dayDirectives]=\\\"getWeekDayDirectives(weekStartDate)\\\" [firstMonthDate]=\\\"date\\\"\\n            [ngStyle]=\\\"{flexDirection: (vertical)?'column':'row'}\\\">\\n        </app-week-view>\\n    </div>\\n</div>\" }]\n    }], () => [{ type: MonthService }, { type: CalendarService }], { date: [{\n            type: Input\n        }], updateDate: [{\n            type: Input\n        }], vertical: [{\n            type: Input\n        }], dayDirectives: [{\n            type: Input\n        }], elWidth: [{\n            type: Output\n        }, {\n            type: HostBinding,\n            args: [\"style\"]\n        }], elementView: [{\n            type: ViewChild,\n            args: [\"wrap\", { static: true }]\n        }] }); })();\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassDebugInfo(MonthViewComponent, { className: \"MonthViewComponent\", filePath: \"lib/month-view/month-view.component.ts\", lineNumber: 27 }); })();","originalLength":14983,"removedExports":[],"renderedExports":["MonthViewComponent"],"renderedLength":6610},"/workspace/dist/angular-datepicker2/esm2022/lib/month-select/month-select.component.mjs":{"code":"const _c0$1 = [\"wrap\"];\nfunction MonthSelectComponent_ng_container_6_div_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 7);\n} }\nfunction MonthSelectComponent_ng_container_6_Template(rf, ctx) { if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 5);\n    i0.ɵɵlistener(\"click\", function MonthSelectComponent_ng_container_6_Template_div_click_1_listener() { const month_r2 = i0.ɵɵrestoreView(_r1).$implicit; const ctx_r2 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r2.setMonth(month_r2)); });\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, MonthSelectComponent_ng_container_6_div_4_Template, 1, 0, \"div\", 6);\n    i0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const month_r2 = ctx.$implicit;\n    const i_r4 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(3, 2, month_r2, \"LLL\"), \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (i_r4 + 1) % 3 === 0 && i_r4 != 0 && i_r4 != 11);\n} }\nclass MonthSelectComponent {\n    constructor(calendarService) {\n        this.calendarService = calendarService;\n        this.months = [];\n    }\n    ngOnInit() {\n        for (let i = 0; i < 12; i++) {\n            let date = new Date(this.date);\n            date.setMonth(0);\n            date = DateUtils.adjustMonth(date, i);\n            this.months.push(date);\n        }\n        this.calendarService.animationStep.subscribe(data => {\n            this.animationStep = data;\n        });\n    }\n    setMonth(month) {\n        this.calendarService.getShownMonths(month);\n    }\n    /** @nocollapse */ static { this.ɵfac = function MonthSelectComponent_Factory(__ngFactoryType__) { return new (__ngFactoryType__ || MonthSelectComponent)(i0.ɵɵdirectiveInject(CalendarService)); }; }\n    /** @nocollapse */ static { this.ɵcmp = /** @pureOrBreakMyCode */ i0.ɵɵdefineComponent({ type: MonthSelectComponent, selectors: [[\"app-month-select\"]], viewQuery: function MonthSelectComponent_Query(rf, ctx) { if (rf & 1) {\n            i0.ɵɵviewQuery(_c0$1, 7);\n        } if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.elementView = _t.first);\n        } }, inputs: { date: \"date\" }, decls: 7, vars: 8, consts: [[\"wrap\", \"\"], [2, \"display\", \"flex\", \"flex-direction\", \"column\", \"flex\", \"1\", \"width\", \"100%\"], [1, \"monthHeader\"], [2, \"display\", \"flex\", \"flex-direction\", \"row\", \"flex\", \"1\", \"flex-wrap\", \"wrap\"], [4, \"ngFor\", \"ngForOf\"], [1, \"monthItem\", 3, \"click\"], [\"style\", \"width:100%; height:1px; \", 4, \"ngIf\"], [2, \"width\", \"100%\", \"height\", \"1px\"]], template: function MonthSelectComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 1, 0)(2, \"div\", 2);\n            i0.ɵɵtext(3);\n            i0.ɵɵpipe(4, \"date\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"div\", 3);\n            i0.ɵɵtemplate(6, MonthSelectComponent_ng_container_6_Template, 5, 5, \"ng-container\", 4);\n            i0.ɵɵelementEnd()();\n        } if (rf & 2) {\n            i0.ɵɵclassMapInterpolate1(\"monthWrap monthOne \", ctx.animationStep, \"\");\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(4, 5, ctx.date, \"yyyy\"), \" \");\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngForOf\", ctx.months);\n        } }, dependencies: [CommonModule, i2.NgForOf, i2.NgIf, i2.DatePipe], encapsulation: 2 }); }\n}\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MonthSelectComponent, [{\n        type: Component,\n        args: [{ selector: \"app-month-select\", standalone: true, imports: [CommonModule], template: \"<div #wrap style=\\\"display: flex;flex-direction:column; flex:1; width: 100%;\\\"\\n    class=\\\"monthWrap monthOne {{animationStep}}\\\">\\n    <div class=\\\"monthHeader\\\">\\n        {{date | date: \\\"yyyy\\\"}}\\n    </div>\\n    <div style=\\\" display: flex;flex-direction:row; flex:1; flex-wrap: wrap;\\\">\\n\\n        <ng-container *ngFor=\\\"let month of months; let i = index\\\">\\n            <div class=\\\"monthItem\\\" (click)=\\\"setMonth(month)\\\">\\n                {{ month | date:'LLL' }}</div>\\n            <div *ngIf=\\\" (i+1)%3===0&&i!=0&&i!=11\\\" style=\\\"width:100%; height:1px; \\\"></div>\\n        </ng-container>\\n\\n    </div>\\n</div>\" }]\n    }], () => [{ type: CalendarService }], { date: [{\n            type: Input\n        }], elementView: [{\n            type: ViewChild,\n            args: [\"wrap\", { static: true }]\n        }] }); })();\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassDebugInfo(MonthSelectComponent, { className: \"MonthSelectComponent\", filePath: \"lib/month-select/month-select.component.ts\", lineNumber: 13 }); })();","originalLength":9508,"removedExports":[],"renderedExports":["MonthSelectComponent"],"renderedLength":4713},"/workspace/dist/angular-datepicker2/esm2022/lib/year-select/year-select.component.mjs":{"code":"class YearSelectComponent {\n    constructor() { }\n    ngOnInit() {\n    }\n    /** @nocollapse */ static { this.ɵfac = function YearSelectComponent_Factory(__ngFactoryType__) { return new (__ngFactoryType__ || YearSelectComponent)(); }; }\n    /** @nocollapse */ static { this.ɵcmp = /** @pureOrBreakMyCode */ i0.ɵɵdefineComponent({ type: YearSelectComponent, selectors: [[\"app-year-select\"]], decls: 2, vars: 0, template: function YearSelectComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵelementStart(0, \"p\");\n            i0.ɵɵtext(1, \"year-select works!\");\n            i0.ɵɵelementEnd();\n        } }, dependencies: [CommonModule], encapsulation: 2 }); }\n}\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(YearSelectComponent, [{\n        type: Component,\n        args: [{ selector: 'app-year-select', standalone: true, imports: [CommonModule], template: \"<p>year-select works!</p>\\n\" }]\n    }], () => [], null); })();\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassDebugInfo(YearSelectComponent, { className: \"YearSelectComponent\", filePath: \"lib/year-select/year-select.component.ts\", lineNumber: 11 }); })();","originalLength":2749,"removedExports":[],"renderedExports":["YearSelectComponent"],"renderedLength":1179},"/workspace/dist/angular-datepicker2/esm2022/lib/calendar/angular-datepicker2.component.mjs":{"code":"const _c0 = [\"column\"];\nconst _c1 = a0 => ({ width: a0 });\nfunction AngularDatepicker2_div_2_div_1_Template(rf, ctx) { if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵlistener(\"click\", function AngularDatepicker2_div_2_div_1_Template_div_click_0_listener() { const item_r2 = i0.ɵɵrestoreView(_r1).$implicit; const ctx_r2 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r2.clickSuggest(item_r2)); });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", item_r2.title, \"\");\n} }\nfunction AngularDatepicker2_div_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtemplate(1, AngularDatepicker2_div_2_div_1_Template, 2, 1, \"div\", 11);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.suggest);\n} }\nfunction AngularDatepicker2_div_7_app_month_view_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"app-month-view\", 15, 0);\n} if (rf & 2) {\n    const date_r4 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"date\", date_r4)(\"vertical\", ctx_r2.vertical)(\"dayDirectives\", ctx_r2.getMonthDayDirectives(date_r4));\n} }\nfunction AngularDatepicker2_div_7_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtemplate(1, AngularDatepicker2_div_7_app_month_view_1_Template, 2, 3, \"app-month-view\", 14);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.getCalendar());\n} }\nfunction AngularDatepicker2_div_8_app_month_select_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"app-month-select\", 18, 0);\n} if (rf & 2) {\n    const date_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"date\", date_r5);\n} }\nfunction AngularDatepicker2_div_8_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtemplate(1, AngularDatepicker2_div_8_app_month_select_1_Template, 2, 1, \"app-month-select\", 17);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.getCalendar());\n} }\nclass AngularDatepicker2 {\n    constructor(calendarService, cdr) {\n        this.calendarService = calendarService;\n        this.cdr = cdr;\n        /**\n         * @description\n         *  Array of selected dates.\n         * */\n        this.selectedDates = [];\n        this.selectedDatesChange = new EventEmitter();\n        /**\n         * @description\n         *  Callback event when click on day\n         */\n        this.onDayClick = new EventEmitter();\n        /**\n         * @description\n         * Start week day, default 0\n         */\n        this.weekStart = 0;\n        /**\n         * @description\n         * Weekends, default [0,6], set Day.isWeekend true\n         */\n        this.weekends = [0, 6];\n        this.dayDirectives = [];\n    }\n    __getDirectives() {\n        if (this.dayDirectivesQueryList) {\n            this.dayDirectives = this.dayDirectivesQueryList.toArray();\n            this.dayDirectivesQueryList.changes.subscribe((data) => {\n                this.dayDirectives = data.toArray();\n            });\n        }\n    }\n    ngAfterContentInit() {\n        // this.__getDirectives();\n    }\n    ngAfterViewInit() {\n        this.__getDirectives();\n    }\n    getMonthDayDirectives(date) {\n        return this.dayDirectives.filter((directive) => directive.date.getMonth() === date.getMonth() &&\n            directive.date.getFullYear() === date.getFullYear());\n    }\n    clickSuggest(suggest) {\n        this.calendarService.selectMode = this.selectMode = suggest.selectMode;\n        this.calendarService.selectedDates.next(suggest.selectedDates);\n    }\n    recountWidth() {\n        let width = 0;\n        this.columns\n            ? this.columns\n                .toArray()\n                .map((item) => (width += item.elementView.nativeElement.clientWidth))\n            : null;\n        this.calendarService.animationStep.value === \"stop\" &&\n            this.calendarService.viewSelectorMode === \"days\"\n            ? (this.width = width)\n            : null;\n        this.cdr.detectChanges();\n    }\n    ngAfterViewChecked() {\n        this.recountWidth();\n    }\n    ngOnInit() {\n        if (!this.shownDate) {\n            this.shownDate = new Date();\n        }\n        this.calendarService.animationStep.subscribe((data) => {\n            if (data === \"stop\") {\n                setTimeout(() => this.recountWidth(), 10);\n            }\n        });\n        this.calendarService.selectedDates.subscribe((data) => {\n            this.selectedDatesChange.emit(data);\n        });\n        this.calendarService.clickDayKey.subscribe((data) => {\n            data ? this.onDayClick.emit(data.day) : null;\n        });\n        this.calendarService.days.next(this.days);\n        this.calendarService.weekStart = this.weekStart;\n        this.calendarService.weekends = this.weekends;\n        this.calendarService.viewMode = this.viewMode;\n        this.calendarService.viewSelectorMode = \"days\";\n        this.calendarService.selectMode = this.selectMode;\n        this.calendarService.shownDate = this.shownDate;\n        this.calendarService.setSelectedDates(this.selectedDates);\n        this.calendarService.setDays(this.days);\n        this.calendarService.getShownMonths(this.shownDate);\n        this.calendarService.setDisabledDates(this.disabledDates);\n    }\n    getCalendar() {\n        return this.calendarService.calendar;\n    }\n    getViewSelectorMode() {\n        return this.calendarService.viewSelectorMode;\n    }\n    calculate() {\n        let date = this.shownDate;\n        let countMonths = 0;\n        const months = [];\n        let lastDate;\n        lastDate = date ? date : this.calendarService.getLastDate();\n        countMonths = this.calendarService.getCountMonths();\n        for (let i = countMonths - 1; i >= 0; i--) {\n            months.push(DateUtils.adjustMonth(new Date(lastDate), -i));\n        }\n        return months;\n    }\n    isEqual(array, array1) {\n        console.log(array, array1);\n        let a = array.filter((item) => array1.includes(item));\n        return a.length === 0 && array.length === array1.length;\n    }\n    _viewMode(simpleChange) {\n        if (simpleChange.viewMode.currentValue !== simpleChange.viewMode.previousValue) {\n            this.calendarService.viewMode = simpleChange.viewMode.currentValue;\n            this.calendarService.getShownMonths(this.shownDate);\n            setTimeout(() => this.recountWidth(), 10);\n        }\n    }\n    _selectMode(simpleChange) {\n        if (simpleChange.selectMode.currentValue !==\n            simpleChange.selectMode.previousValue) {\n            this.calendarService.selectMode = simpleChange.selectMode.currentValue;\n            this.calendarService.getShownMonths(this.shownDate);\n            setTimeout(() => this.recountWidth(), 10);\n        }\n    }\n    _shownDate(simpleChange) {\n        if (simpleChange.shownDate.currentValue !==\n            simpleChange.shownDate.previousValue) {\n            this.calendarService.shownDate = simpleChange.shownDate.currentValue;\n            this.calendarService.getShownMonths(this.shownDate);\n            setTimeout(() => this.recountWidth(), 10);\n        }\n    }\n    ngOnChanges(simpleChange) {\n        simpleChange.viewMode && this._viewMode(simpleChange);\n        simpleChange.selectMode && this._selectMode(simpleChange);\n        simpleChange.shownDate && this._shownDate(simpleChange);\n        simpleChange.days && this.calendarService.days.next(this.days);\n        simpleChange.selectedDates &&\n            this.calendarService.setSelectedDates(this.selectedDates);\n    }\n    /** Set custom Day[] */\n    setDays() { }\n    goNext() {\n        let lastDate = this.calendarService.calendar[this.calendarService.calendar.length - 1];\n        this.calendarService.goNext(lastDate);\n    }\n    goPrev() {\n        let firstDate = this.calendarService.calendar[0];\n        this.calendarService.goPrev(firstDate);\n    }\n    /** @nocollapse */ static { this.ɵfac = function AngularDatepicker2_Factory(__ngFactoryType__) { return new (__ngFactoryType__ || AngularDatepicker2)(i0.ɵɵdirectiveInject(CalendarService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); }; }\n    /** @nocollapse */ static { this.ɵcmp = /** @pureOrBreakMyCode */ i0.ɵɵdefineComponent({ type: AngularDatepicker2, selectors: [[\"angular-datepicker2\"]], contentQueries: function AngularDatepicker2_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, DayDirective, 4);\n        } if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dayDirectivesQueryList = _t);\n        } }, viewQuery: function AngularDatepicker2_Query(rf, ctx) { if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 5);\n        } if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.columns = _t);\n        } }, inputs: { selectedDates: \"selectedDates\", suggest: \"suggest\", days: \"days\", shownDate: \"shownDate\", vertical: \"vertical\", viewMode: \"viewMode\", weekStart: \"weekStart\", weekends: \"weekends\", selectMode: \"selectMode\", nowDate: \"nowDate\", disabledDates: \"disabledDates\" }, outputs: { selectedDatesChange: \"selectedDatesChange\", onDayClick: \"onDayClick\" }, features: [i0.ɵɵProvidersFeature([CalendarService]), i0.ɵɵNgOnChangesFeature], decls: 11, vars: 8, consts: [[\"column\", \"\"], [1, \"calendarWrap\"], [1, \"headerCalendar\"], [\"class\", \"suggests\", 4, \"ngIf\"], [1, \"dateSelector\"], [1, \"nextPrevBtn\", 2, \"left\", \"0\", 3, \"click\"], [1, \"wrapMonths\", 3, \"ngStyle\"], [\"class\", \"months\", 4, \"ngIf\"], [\"class\", \"\", \"style\", \"width: 100%; display:flex; flex:1;\", 4, \"ngIf\"], [1, \"nextPrevBtn\", 2, \"right\", \"0\", 3, \"click\"], [1, \"suggests\"], [\"class\", \"suggest\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"suggest\", 3, \"click\"], [1, \"months\"], [3, \"date\", \"vertical\", \"dayDirectives\", 4, \"ngFor\", \"ngForOf\"], [3, \"date\", \"vertical\", \"dayDirectives\"], [1, \"\", 2, \"width\", \"100%\", \"display\", \"flex\", \"flex\", \"1\"], [3, \"date\", 4, \"ngFor\", \"ngForOf\"], [3, \"date\"]], template: function AngularDatepicker2_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2);\n            i0.ɵɵtemplate(2, AngularDatepicker2_div_2_Template, 2, 1, \"div\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"div\", 4)(4, \"div\", 5);\n            i0.ɵɵlistener(\"click\", function AngularDatepicker2_Template_div_click_4_listener() { return ctx.goPrev(); });\n            i0.ɵɵtext(5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(6, \"div\", 6);\n            i0.ɵɵtemplate(7, AngularDatepicker2_div_7_Template, 2, 1, \"div\", 7)(8, AngularDatepicker2_div_8_Template, 2, 1, \"div\", 8);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(9, \"div\", 9);\n            i0.ɵɵlistener(\"click\", function AngularDatepicker2_Template_div_click_9_listener() { return ctx.goNext(); });\n            i0.ɵɵtext(10);\n            i0.ɵɵelementEnd()()();\n        } if (rf & 2) {\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.suggest && ctx.suggest.length > 0);\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate(\"<\");\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(6, _c1, ctx.width + \"px\"));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.getViewSelectorMode() === \"days\");\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.getViewSelectorMode() === \"months\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate(\">\");\n        } }, dependencies: [CommonModule, i2.NgForOf, i2.NgIf, i2.NgStyle, MonthViewComponent,\n            MonthSelectComponent], styles: [\".suggest{background:#e0f5f5;width:auto;display:block;float:left;color:#26b1b1;border-radius:2px;padding:4px 8px;margin-right:2px;margin-bottom:2px;font-size:13px;transition:all .2s;cursor:pointer}.suggest:hover{background:#82dcdc;color:#148a8a}app-calendar{display:block;float:left;width:100%}.nextPrevBtn{display:flex;flex-direction:column;justify-content:center;align-items:center;-webkit-user-select:none;user-select:none;position:absolute;cursor:pointer;padding:8px 16px;transition:all .2s;font-size:.9em;color:#26b1b1;z-index:1;background:#fff}.nextPrevBtn:hover{background:#eee}app-week-view{width:100%;display:flex;flex-direction:row}.dayWeekTitle{flex:1;color:#a9a9a9;justify-content:center;align-items:center;display:flex;font-size:.8em;padding:4px}.styledDay.isWeekEnd{color:#c53c3c}.weekWrap{display:flex;flex-direction:column}app-month-select{display:flex;float:left;min-width:200px;animation:appear .2s ease-in-out}.monthItem{width:33%;font-size:.8em;text-align:center;padding:9px 0;box-shadow:0 0 0 1px #f4f3f3;color:#313131}.monthItem:hover{-webkit-user-select:none;user-select:none;cursor:pointer;background:#eee;transition:.2s}app-month-view{display:flex;float:left;min-width:200px;animation:appear .2s ease-in-out;height:100%}@keyframes appear{0%{transform:scale(.6);opacity:.6}50%{transform:opacity(0);transform:scale(.8)}to{opacity:1;transform:scale(1)}}.months{display:flex;flex-direction:row;position:relative;overflow:hidden;height:100%}.wrapMonths{display:block;float:left;overflow:hidden;width:477px}.monthOne{position:relative}.monthOne.right{animation:right .2s ease-in-out}.monthOne.left{animation:left .2s ease-in-out}@keyframes left{0%{transform:translate(-100%)}to{transform:translate(0)}}@keyframes right{0%{transform:translate(0)}to{transform:translate(-100%)}}.suggests{padding:8px 8px 0;display:block;float:left;width:100%;box-sizing:border-box}.monthSelectBtn{display:flex;flex-direction:row;flex:1;padding:4px 8px}app-day-view{display:block;float:left;width:100%}.styledDay.isDisabled{color:#a7a7a7}.styledDay.isInPeriod{background:#26b1b12b!important}.styledDay.isSelected{background:#26b1b180!important}.styledDay.isSelected.period.end{background:linear-gradient(120deg,#26b1b12b 45%,#26b1b180 113%)!important;animation:appear .2s ease-in-out}.styledDay.isSelected.period.start{background:linear-gradient(-50deg,#26b1b12b 45%,#26b1b180 113%)!important;animation:appear .2s ease-in-out}.day{display:flex;flex:1;font-size:.8em;padding:6px}.dayDir{display:block;float:left;width:100%;height:100%}.styledDay{display:flex;flex:1;flex-direction:column;justify-content:center;align-items:center;color:#313131;transition:all .2s}.styledDay:hover{background:#eee;cursor:pointer;color:#313131;-webkit-user-select:none;user-select:none}.dayWrap{display:flex;flex:1;height:100%;width:100%}.calendarWrap{float:left;display:flex;background:#fff;flex-direction:column;border-radius:4px;transition:all .2s;width:min-content}.dateSelector{float:left;width:auto;display:flex;position:relative;flex-direction:row;transition:all .2s}.monthWrap{padding:0 8px;display:block;float:left;width:100%}.f1{display:flex;flex:1}.monthHeader{text-align:center;padding:8px 16px;font-size:15px;color:#2b2b2b}.monthHeader:first-letter{text-transform:uppercase}.monthHeader:hover{cursor:pointer;-webkit-user-select:none;user-select:none;background:#eee}\\n\"], encapsulation: 2 }); }\n}\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AngularDatepicker2, [{\n        type: Component,\n        args: [{ selector: \"angular-datepicker2\", standalone: true, imports: [\n                    CommonModule,\n                    MonthViewComponent,\n                    MonthSelectComponent,\n                    YearSelectComponent,\n                    DayDirective,\n                ], providers: [CalendarService], encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"calendarWrap\\\">\\n    <div class=\\\"headerCalendar\\\">\\n        <div *ngIf=\\\"suggest&&suggest.length>0\\\" class=\\\"suggests\\\">\\n            <div *ngFor=\\\"let item of suggest ; let i = index\\\" class=\\\"suggest\\\" (click)=\\\"clickSuggest(item)\\\">\\n                {{item.title}}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"dateSelector\\\">\\n        <div (click)=\\\"goPrev()\\\" class=\\\"nextPrevBtn\\\" style=\\\"left:0;\\\">{{'<'}}</div>\\n        <div class=\\\"wrapMonths\\\" [ngStyle]=\\\"{width: width+'px'}\\\">\\n            <div class=\\\"months\\\" *ngIf=\\\"getViewSelectorMode()==='days'\\\">\\n                <app-month-view *ngFor=\\\"let date of  getCalendar()\\\" #column [date]=\\\"date\\\" [vertical]=\\\"vertical\\\"\\n                    [dayDirectives]=\\\"getMonthDayDirectives(date)\\\">\\n                </app-month-view>\\n            </div>\\n\\n            <div class=\\\"\\\" *ngIf=\\\"getViewSelectorMode()==='months'\\\" style=\\\"width: 100%; display:flex; flex:1;\\\">\\n                <app-month-select *ngFor=\\\"let date of  getCalendar()\\\" #column [date]=\\\"date\\\">\\n                </app-month-select>\\n            </div>\\n        </div>\\n        <div (click)=\\\"goNext()\\\" class=\\\"nextPrevBtn\\\" style=\\\"right:0;\\\">{{\\\">\\\"}}</div>\\n    </div>\\n</div>\", styles: [\".suggest{background:#e0f5f5;width:auto;display:block;float:left;color:#26b1b1;border-radius:2px;padding:4px 8px;margin-right:2px;margin-bottom:2px;font-size:13px;transition:all .2s;cursor:pointer}.suggest:hover{background:#82dcdc;color:#148a8a}app-calendar{display:block;float:left;width:100%}.nextPrevBtn{display:flex;flex-direction:column;justify-content:center;align-items:center;-webkit-user-select:none;user-select:none;position:absolute;cursor:pointer;padding:8px 16px;transition:all .2s;font-size:.9em;color:#26b1b1;z-index:1;background:#fff}.nextPrevBtn:hover{background:#eee}app-week-view{width:100%;display:flex;flex-direction:row}.dayWeekTitle{flex:1;color:#a9a9a9;justify-content:center;align-items:center;display:flex;font-size:.8em;padding:4px}.styledDay.isWeekEnd{color:#c53c3c}.weekWrap{display:flex;flex-direction:column}app-month-select{display:flex;float:left;min-width:200px;animation:appear .2s ease-in-out}.monthItem{width:33%;font-size:.8em;text-align:center;padding:9px 0;box-shadow:0 0 0 1px #f4f3f3;color:#313131}.monthItem:hover{-webkit-user-select:none;user-select:none;cursor:pointer;background:#eee;transition:.2s}app-month-view{display:flex;float:left;min-width:200px;animation:appear .2s ease-in-out;height:100%}@keyframes appear{0%{transform:scale(.6);opacity:.6}50%{transform:opacity(0);transform:scale(.8)}to{opacity:1;transform:scale(1)}}.months{display:flex;flex-direction:row;position:relative;overflow:hidden;height:100%}.wrapMonths{display:block;float:left;overflow:hidden;width:477px}.monthOne{position:relative}.monthOne.right{animation:right .2s ease-in-out}.monthOne.left{animation:left .2s ease-in-out}@keyframes left{0%{transform:translate(-100%)}to{transform:translate(0)}}@keyframes right{0%{transform:translate(0)}to{transform:translate(-100%)}}.suggests{padding:8px 8px 0;display:block;float:left;width:100%;box-sizing:border-box}.monthSelectBtn{display:flex;flex-direction:row;flex:1;padding:4px 8px}app-day-view{display:block;float:left;width:100%}.styledDay.isDisabled{color:#a7a7a7}.styledDay.isInPeriod{background:#26b1b12b!important}.styledDay.isSelected{background:#26b1b180!important}.styledDay.isSelected.period.end{background:linear-gradient(120deg,#26b1b12b 45%,#26b1b180 113%)!important;animation:appear .2s ease-in-out}.styledDay.isSelected.period.start{background:linear-gradient(-50deg,#26b1b12b 45%,#26b1b180 113%)!important;animation:appear .2s ease-in-out}.day{display:flex;flex:1;font-size:.8em;padding:6px}.dayDir{display:block;float:left;width:100%;height:100%}.styledDay{display:flex;flex:1;flex-direction:column;justify-content:center;align-items:center;color:#313131;transition:all .2s}.styledDay:hover{background:#eee;cursor:pointer;color:#313131;-webkit-user-select:none;user-select:none}.dayWrap{display:flex;flex:1;height:100%;width:100%}.calendarWrap{float:left;display:flex;background:#fff;flex-direction:column;border-radius:4px;transition:all .2s;width:min-content}.dateSelector{float:left;width:auto;display:flex;position:relative;flex-direction:row;transition:all .2s}.monthWrap{padding:0 8px;display:block;float:left;width:100%}.f1{display:flex;flex:1}.monthHeader{text-align:center;padding:8px 16px;font-size:15px;color:#2b2b2b}.monthHeader:first-letter{text-transform:uppercase}.monthHeader:hover{cursor:pointer;-webkit-user-select:none;user-select:none;background:#eee}\\n\"] }]\n    }], () => [{ type: CalendarService }, { type: i0.ChangeDetectorRef }], { selectedDates: [{\n            type: Input\n        }], selectedDatesChange: [{\n            type: Output\n        }], onDayClick: [{\n            type: Output\n        }], suggest: [{\n            type: Input\n        }], days: [{\n            type: Input\n        }], shownDate: [{\n            type: Input\n        }], vertical: [{\n            type: Input\n        }], viewMode: [{\n            type: Input\n        }], weekStart: [{\n            type: Input\n        }], weekends: [{\n            type: Input\n        }], selectMode: [{\n            type: Input\n        }], nowDate: [{\n            type: Input\n        }], disabledDates: [{\n            type: Input\n        }], columns: [{\n            type: ViewChildren,\n            args: [\"column\"]\n        }], dayDirectivesQueryList: [{\n            type: ContentChildren,\n            args: [DayDirective]\n        }] }); })();\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassDebugInfo(AngularDatepicker2, { className: \"AngularDatepicker2\", filePath: \"lib/calendar/angular-datepicker2.component.ts\", lineNumber: 48 }); })();","originalLength":45062,"removedExports":[],"renderedExports":["AngularDatepicker2"],"renderedLength":21460},"/workspace/dist/angular-datepicker2/esm2022/public-api.mjs":{"code":"/*\n * Public API Surface of angular-datepicker2\n */","originalLength":2343,"removedExports":[],"renderedExports":[],"renderedLength":51},"/workspace/dist/angular-datepicker2/esm2022/angular-datepicker2.mjs":{"code":"/**\n * Generated bundle index. Do not edit.\n */","originalLength":532,"removedExports":[],"renderedExports":[],"renderedLength":47}},"referencedFiles":[],"code":"import * as i0 from '@angular/core';\nimport { Injectable, Directive, Input, ViewContainerRef, Component, ViewChild, Output, HostBinding, EventEmitter, ViewEncapsulation, ContentChildren, ViewChildren } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { BehaviorSubject, Subscription } from 'rxjs';\n\n/**\n * @publicApi\n */\nvar SelectMode;\n(function (SelectMode) {\n    SelectMode[\"Single\"] = \"single\";\n    SelectMode[\"Multiple\"] = \"multiple\";\n    SelectMode[\"Period\"] = \"period\";\n})(SelectMode || (SelectMode = {}));\nvar ViewMode;\n(function (ViewMode) {\n    ViewMode[\"Year\"] = \"year\";\n    ViewMode[\"Quarter\"] = \"quarter\";\n    ViewMode[\"Semester\"] = \"semester\";\n})(ViewMode || (ViewMode = {}));\n\n/**\n * Date utility functions for angular-datepicker2\n * Replaces Date prototype extensions for better compatibility\n */\nclass DateUtils {\n    static adjustDate(date, num = 0) {\n        const newDate = new Date(date);\n        newDate.setDate(newDate.getDate() + num);\n        return newDate;\n    }\n    /** Adjust month and set date to 1 */\n    static adjustMonth(date, num = 0) {\n        const newDate = new Date(date);\n        newDate.setDate(1);\n        newDate.setMonth(newDate.getMonth() + num);\n        return newDate;\n    }\n    /** Adjust year, set month to 0 and date to 1 */\n    static adjustYear(date, num = 0) {\n        const newDate = new Date(date);\n        newDate.setDate(1);\n        newDate.setMonth(0);\n        newDate.setFullYear(newDate.getFullYear() + num);\n        return newDate;\n    }\n    static getDayWithStart(date, start) {\n        const newDate = new Date(date.getTime());\n        let day = newDate.getDay();\n        day = day - start;\n        if (day < 0) {\n            day = 7 + day;\n        }\n        return day;\n    }\n    static getFirstDateDay(date, start) {\n        const newDate = new Date(date.getTime());\n        newDate.setDate(1);\n        return DateUtils.getDayWithStart(newDate, start);\n    }\n    static getYmd(date) {\n        return (date.getFullYear().toString() +\n            String(date.getMonth().toString()).padStart(2, \"0\") +\n            String(date.getDate().toString()).padStart(2, \"0\"));\n    }\n}\n\nclass CalendarService {\n    constructor() {\n        this.selectedDates = new BehaviorSubject([]);\n        this.disabledDates = new BehaviorSubject(null);\n        this.days = new BehaviorSubject([]);\n        this.animationStep = new BehaviorSubject(\"stop\");\n        this.recountWidth = new BehaviorSubject(1);\n        /** Needs for onClickDay detect change */\n        this.clickDayKey = new BehaviorSubject(null);\n        this.updateDate = new BehaviorSubject(new Date());\n    }\n    setSelectedDates(selectedDates) {\n        this.selectedDates.next(selectedDates);\n    }\n    setDisabledDates(disabledDates) {\n        this.disabledDates.next(disabledDates);\n    }\n    setDays(days) {\n        this.days.next(days);\n    }\n    setShownDate(date) {\n        this.shownDate = date;\n    }\n    addSelected(date) {\n        let selectedDates = this.selectedDates.value;\n        selectedDates.push(date);\n        this.selectedDates.next(selectedDates);\n    }\n    getCountMonths() {\n        let viewMode = this.viewMode;\n        if (typeof viewMode === \"number\") {\n            return viewMode;\n        }\n        else {\n            if (viewMode === ViewMode.Quarter) {\n                return 3;\n            }\n            else if (viewMode === ViewMode.Semester) {\n                return 6;\n            }\n        }\n        return 1;\n    }\n    getLastDate(date) {\n        //console.log(date, 'date getlasr')\n        let viewMode = this.viewMode;\n        let lastDate = this.shownDate\n            ? new Date(this.shownDate)\n            : this.selectedDates.value\n                ? new Date(this.selectedDates[this.selectedDates.value.length - 1])\n                : new Date();\n        lastDate = date ? new Date(date) : lastDate;\n        //if (typeof viewMode === \"ViewMode\") {\n        if (viewMode === ViewMode.Quarter) {\n            if (lastDate.getMonth() >= 0 && lastDate.getMonth() <= 2) {\n                lastDate.setMonth(2);\n            }\n            else if (lastDate.getMonth() >= 3 && lastDate.getMonth() <= 5) {\n                lastDate.setMonth(5);\n            }\n            else if (lastDate.getMonth() >= 6 && lastDate.getMonth() <= 8) {\n                lastDate.setMonth(8);\n            }\n            else if (lastDate.getMonth() >= 9 && lastDate.getMonth() <= 11) {\n                lastDate.setMonth(11);\n            }\n        }\n        else if (viewMode === ViewMode.Semester) {\n            if (lastDate.getMonth() >= 0 && lastDate.getMonth() <= 5) {\n                lastDate.setMonth(5);\n            }\n            else if (lastDate.getMonth() >= 6 && lastDate.getMonth() <= 11) {\n                lastDate.setMonth(11);\n            }\n        }\n        //}\n        return lastDate;\n    }\n    getShownYears(lastDateShown) {\n        let countMonths = 0;\n        const months = [];\n        countMonths = this.getCountMonths();\n        this.countMonths = countMonths;\n        for (let i = countMonths - 1; i >= 0; i--) {\n            months.push(DateUtils.adjustYear(new Date(lastDateShown), -i));\n        }\n        this.calendar = months;\n        this.viewSelectorMode = \"months\";\n    }\n    getShownMonths(date) {\n        let countMonths = 0;\n        const months = [];\n        let lastDate;\n        lastDate = this.getLastDate(date);\n        countMonths = this.getCountMonths();\n        this.countMonths = countMonths;\n        for (let i = countMonths - 1; i >= 0; i--) {\n            months.push(DateUtils.adjustMonth(new Date(lastDate), -i));\n        }\n        this.calendar = months;\n        this.viewSelectorMode = \"days\";\n    }\n    goPrev(firstDate) {\n        let prevDate = new Date(firstDate);\n        if (this.viewSelectorMode === \"days\") {\n            prevDate = DateUtils.adjustMonth(prevDate, -1);\n        }\n        else if (this.viewSelectorMode === \"months\") {\n            prevDate = DateUtils.adjustYear(prevDate, -1);\n        }\n        let dates = [...this.calendar];\n        dates.unshift(prevDate);\n        this.calendar = dates;\n        this.animationStep.next(\"left\");\n        setTimeout(() => {\n            dates = [...this.calendar];\n            dates.splice(dates.length - 1, 1);\n            this.calendar = dates;\n            this.animationStep.next(\"stop\");\n        }, 205);\n    }\n    goNext(lastDate) {\n        let nextDate = new Date(lastDate);\n        if (this.viewSelectorMode === \"days\") {\n            nextDate = DateUtils.adjustMonth(nextDate, 1);\n        }\n        else if (this.viewSelectorMode === \"months\") {\n            nextDate = DateUtils.adjustYear(nextDate, 1);\n        }\n        let dates = [...this.calendar];\n        //dates.splice(0, 1);\n        dates.push(nextDate);\n        this.calendar = dates;\n        this.animationStep.next(\"right\");\n        setTimeout(() => {\n            dates = [...this.calendar];\n            dates.splice(0, 1);\n            this.calendar = dates;\n            this.animationStep.next(\"stop\");\n            //this.recountWidth.next(this.recountWidth.value + 1);\n        }, 205);\n    }\n    /** @nocollapse */ static { this.ɵfac = function CalendarService_Factory(__ngFactoryType__) { return new (__ngFactoryType__ || CalendarService)(); }; }\n    /** @nocollapse */ static { this.ɵprov = /** @pureOrBreakMyCode */ i0.ɵɵdefineInjectable({ token: CalendarService, factory: CalendarService.ɵfac, providedIn: \"root\" }); }\n}\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CalendarService, [{\n        type: Injectable,\n        args: [{\n                providedIn: \"root\",\n            }]\n    }], () => [], null); })();\n\nclass DayDirective {\n    constructor(template, container) {\n        this.template = template;\n        this.container = container;\n        this.context = null;\n        this.__created = false;\n    }\n    set day(date) {\n        this.context = {\n            $implicit: date,\n        };\n    }\n    ngOnInit() {\n        this.context = {\n            $implicit: this.date,\n            date: this.date,\n        };\n    }\n    /** @nocollapse */ static { this.ɵfac = function DayDirective_Factory(__ngFactoryType__) { return new (__ngFactoryType__ || DayDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef)); }; }\n    /** @nocollapse */ static { this.ɵdir = /** @pureOrBreakMyCode */ i0.ɵɵdefineDirective({ type: DayDirective, selectors: [[\"\", \"ad2day\", \"\"]], inputs: { date: [0, \"ad2dayFrom\", \"date\"], day: \"day\" } }); }\n}\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DayDirective, [{\n        type: Directive,\n        args: [{\n                selector: \"[ad2day]\",\n                standalone: true,\n                //providers: [TemplateRef],\n            }]\n    }], () => [{ type: i0.TemplateRef }, { type: i0.ViewContainerRef }], { date: [{\n            type: Input,\n            args: [\"ad2dayFrom\"]\n        }], day: [{\n            type: Input\n        }] }); })();\n\nclass MonthService {\n    constructor(calendarService) {\n        this.calendarService = calendarService;\n    }\n    getMonth(date) {\n        const daysInMonth = new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n        let weekStart = this.calendarService.weekStart;\n        const countWeek = Math.ceil((daysInMonth + DateUtils.getFirstDateDay(date, weekStart)) / 7);\n        const weeks = [];\n        for (let i = 0; i < countWeek; i++) {\n            const startWeekDate = new Date(date);\n            startWeekDate.setDate(date.getDate() + i * 7 - DateUtils.getDayWithStart(date, weekStart));\n            weeks.push(startWeekDate);\n        }\n        return weeks;\n    }\n    /** @nocollapse */ static { this.ɵfac = function MonthService_Factory(__ngFactoryType__) { return new (__ngFactoryType__ || MonthService)(i0.ɵɵinject(CalendarService)); }; }\n    /** @nocollapse */ static { this.ɵprov = /** @pureOrBreakMyCode */ i0.ɵɵdefineInjectable({ token: MonthService, factory: MonthService.ɵfac, providedIn: \"root\" }); }\n}\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MonthService, [{\n        type: Injectable,\n        args: [{\n                providedIn: \"root\"\n            }]\n    }], () => [{ type: CalendarService }], null); })();\n\nclass WeekService {\n    constructor() { }\n    getWeek(date) {\n        const dayInWeek = 7;\n        const days = [];\n        for (let i = 0; i < dayInWeek; i++) {\n            const curDate = new Date(date);\n            curDate.setDate(curDate.getDate() + i);\n            days.push(curDate);\n        }\n        return days;\n    }\n    /** @nocollapse */ static { this.ɵfac = function WeekService_Factory(__ngFactoryType__) { return new (__ngFactoryType__ || WeekService)(); }; }\n    /** @nocollapse */ static { this.ɵprov = /** @pureOrBreakMyCode */ i0.ɵɵdefineInjectable({ token: WeekService, factory: WeekService.ɵfac, providedIn: \"root\" }); }\n}\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(WeekService, [{\n        type: Injectable,\n        args: [{\n                providedIn: \"root\"\n            }]\n    }], () => [], null); })();\n\nclass DayService {\n    constructor(calendarService) {\n        this.calendarService = calendarService;\n    }\n    getIsDisabled(date) {\n        const disabledDates = this.calendarService.disabledDates.value;\n        if (!disabledDates) {\n            return false;\n        }\n        if (disabledDates.dates &&\n            disabledDates.dates.length > 0 &&\n            disabledDates.dates.find((disableDate) => disableDate.getTime() === date.getTime())) {\n            return true;\n        }\n        if (disabledDates.after && disabledDates.after.getTime() < date.getTime()) {\n            return true;\n        }\n        if (disabledDates.before &&\n            disabledDates.before.getTime() > date.getTime()) {\n            return true;\n        }\n        return false;\n    }\n    createDay(date) {\n        this.day = {\n            isDisabled: this.getIsDisabled(date),\n            isWeekEnd: this.calendarService.weekends.includes(date.getDay()),\n            isSelected: false,\n            isHovered: false,\n            isInPeriod: this.getIsInPeriod(date),\n            date: date,\n        };\n        return this.day;\n    }\n    getIsInPeriod(date) {\n        if (this.calendarService.selectMode === \"period\" &&\n            this.calendarService.selectedDates.value.length == 2 &&\n            date.getTime() >= this.calendarService.selectedDates.value[0].getTime() &&\n            date.getTime() <= this.calendarService.selectedDates.value[1].getTime()) {\n            return true;\n        }\n        return false;\n    }\n    getDay() {\n        return this.day;\n    }\n    sortByDate(a, b) {\n        if (a.getTime() > b.getTime())\n            return 1;\n        if (a.getTime() == b.getTime())\n            return 0;\n        if (a.getTime() < b.getTime())\n            return -1;\n    }\n    toggleDate() {\n        console.log(\"clicked in service\");\n        this.calendarService.clickDayKey.next({\n            key: DateUtils.getYmd(new Date()) + \"\" + Math.random(),\n            day: this.day,\n        });\n        if (this.calendarService.selectMode === \"single\") {\n            if (this.calendarService.selectedDates.value.length > 0) {\n                this.calendarService.selectedDates.next([this.day.date]);\n            }\n        }\n        else if (this.calendarService.selectMode === \"multiple\") {\n            if (this.day.isSelected) {\n                let selectedDates = this.calendarService.selectedDates.value.filter((elem) => DateUtils.getYmd(elem) !== DateUtils.getYmd(this.day.date));\n                selectedDates.sort(this.sortByDate);\n                this.calendarService.selectedDates.next(selectedDates);\n            }\n            else {\n                let selectedDates = this.calendarService.selectedDates.value;\n                selectedDates.push(this.day.date);\n                this.calendarService.selectedDates.next(selectedDates);\n            }\n        }\n        else if (this.calendarService.selectMode === \"period\") {\n            if (this.day.isSelected) {\n                let selectedDates = this.calendarService.selectedDates.value.filter((elem) => DateUtils.getYmd(elem) !== DateUtils.getYmd(this.day.date));\n                this.calendarService.selectedDates.next(selectedDates);\n            }\n            else {\n                if (this.calendarService.selectedDates.value.length == 2) {\n                    this.calendarService.selectedDates.next([this.day.date]);\n                }\n                else if (this.calendarService.selectedDates.value.length < 2) {\n                    let selectedDates = this.calendarService.selectedDates.value;\n                    selectedDates.push(this.day.date);\n                    selectedDates.sort(this.sortByDate);\n                    //console.log(selectedDates)\n                    this.calendarService.selectedDates.next(selectedDates);\n                }\n            }\n        }\n    }\n    /** @nocollapse */ static { this.ɵfac = function DayService_Factory(__ngFactoryType__) { return new (__ngFactoryType__ || DayService)(i0.ɵɵinject(CalendarService)); }; }\n    /** @nocollapse */ static { this.ɵprov = /** @pureOrBreakMyCode */ i0.ɵɵdefineInjectable({ token: DayService, factory: DayService.ɵfac, providedIn: \"root\" }); }\n}\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DayService, [{\n        type: Injectable,\n        args: [{\n                providedIn: \"root\",\n            }]\n    }], () => [{ type: CalendarService }], null); })();\n\nconst _c0$3 = [\"tpl\"];\nconst _c1$2 = (a0, a1, a2, a3, a4, a5, a6) => ({ isDisabled: a0, isSelected: a1, isWeekEnd: a2, isInPeriod: a3, period: a4, end: a5, start: a6 });\nfunction DayViewComponent_div_1_span_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(2, 1, ctx_r1.dayService.day.date, \"d\"), \" \");\n} }\nfunction DayViewComponent_div_1_ng_template_3_Template(rf, ctx) { }\nfunction DayViewComponent_div_1_Template(rf, ctx) { if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵlistener(\"click\", function DayViewComponent_div_1_Template_div_click_0_listener() { i0.ɵɵrestoreView(_r1); const ctx_r1 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r1.onClick()); });\n    i0.ɵɵtemplate(1, DayViewComponent_div_1_span_1_Template, 3, 4, \"span\", 4);\n    i0.ɵɵelementStart(2, \"div\", 5);\n    i0.ɵɵtemplate(3, DayViewComponent_div_1_ng_template_3_Template, 0, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction7(2, _c1$2, ctx_r1.dayService.day.isDisabled, ctx_r1.dayService.day.isSelected, ctx_r1.dayService.day.isWeekEnd, ctx_r1.dayService.day.isInPeriod, ctx_r1.getSelectMode() === \"period\", ctx_r1.isStartOrEndDatePeriod() === \"end\", ctx_r1.isStartOrEndDatePeriod() === \"start\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.dayDirective);\n} }\nclass DayViewComponent {\n    constructor(dayService, calendarService) {\n        this.dayService = dayService;\n        this.calendarService = calendarService;\n    }\n    createChildComponent() {\n        let viewContainerRef = this.template;\n        viewContainerRef.clear();\n        viewContainerRef.createEmbeddedView(this.dayDirective.template, this.dayDirective.context);\n    }\n    isStartOrEndDatePeriod() {\n        if (this.getSelectMode() === \"period\") {\n            if (this.getSelectedDates().length == 2) {\n                if (DateUtils.getYmd(this.date) === DateUtils.getYmd(this.getSelectedDates()[0])) {\n                    return \"start\";\n                }\n                else if (DateUtils.getYmd(this.date) === DateUtils.getYmd(this.getSelectedDates()[1])) {\n                    return \"end\";\n                }\n            }\n        }\n        return false;\n    }\n    getSelectedDates() {\n        return this.calendarService.selectedDates.value;\n    }\n    getSelectMode() {\n        return this.calendarService.selectMode;\n    }\n    ngAfterViewInit() {\n        if (this.dayDirective && this.template) {\n            this.createChildComponent();\n        }\n    }\n    // bad idea, too mach subscribes for every day\n    ngOnInit() {\n        this.dayService.createDay(this.date);\n        this.sub = this.calendarService.selectedDates.subscribe((data) => {\n            const days = data.map((item) => DateUtils.getYmd(item));\n            this.dayService.day.isSelected = days.includes(DateUtils.getYmd(this.dayService.day.date));\n            this.dayService.day.isInPeriod = this.dayService.getIsInPeriod(this.dayService.day.date);\n        });\n    }\n    detectChanges() { }\n    ngOnChanges() {\n        if (this.dayDirective && this.template) {\n            this.createChildComponent();\n        }\n    }\n    onClick() {\n        !this.dayService.day.isDisabled ? this.dayService.toggleDate() : null;\n    }\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n    /** @nocollapse */ static { this.ɵfac = function DayViewComponent_Factory(__ngFactoryType__) { return new (__ngFactoryType__ || DayViewComponent)(i0.ɵɵdirectiveInject(DayService), i0.ɵɵdirectiveInject(CalendarService)); }; }\n    /** @nocollapse */ static { this.ɵcmp = /** @pureOrBreakMyCode */ i0.ɵɵdefineComponent({ type: DayViewComponent, selectors: [[\"app-day-view\"]], viewQuery: function DayViewComponent_Query(rf, ctx) { if (rf & 1) {\n            i0.ɵɵviewQuery(_c0$3, 5, ViewContainerRef);\n        } if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\n        } }, inputs: { date: \"date\", thisMonth: \"thisMonth\", dayDirective: \"dayDirective\" }, features: [i0.ɵɵProvidersFeature([DayService]), i0.ɵɵNgOnChangesFeature], decls: 2, vars: 1, consts: [[\"tpl\", \"\"], [1, \"dayWrap\"], [\"class\", \"styledDay\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [1, \"styledDay\", 3, \"click\", \"ngClass\"], [\"class\", \"day\", 4, \"ngIf\"], [1, \"dayDir\"], [1, \"day\"]], template: function DayViewComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 1);\n            i0.ɵɵtemplate(1, DayViewComponent_div_1_Template, 5, 10, \"div\", 2);\n            i0.ɵɵelementEnd();\n        } if (rf & 2) {\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.thisMonth);\n        } }, dependencies: [CommonModule, i2.NgClass, i2.NgIf, i2.DatePipe], encapsulation: 2 }); }\n}\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DayViewComponent, [{\n        type: Component,\n        args: [{ selector: \"app-day-view\", standalone: true, imports: [CommonModule], providers: [DayService], template: \"<div class=\\\"dayWrap\\\">\\n    <div class=\\\"styledDay\\\" *ngIf=\\\"thisMonth\\\" (click)=\\\"onClick()\\\" [ngClass]=\\\"{\\n        isDisabled : dayService.day.isDisabled,\\n        isSelected: dayService.day.isSelected,\\n        isWeekEnd: dayService.day.isWeekEnd,\\n        isInPeriod: dayService.day.isInPeriod,\\n        period: getSelectMode()==='period',\\n        end: isStartOrEndDatePeriod()==='end',\\n        start: isStartOrEndDatePeriod()==='start'\\n    }\\\">\\n        <span *ngIf=\\\"!dayDirective\\\" class=\\\"day\\\">\\n            {{dayService.day.date | date: \\\"d\\\"}}\\n        </span>\\n        <div class=\\\"dayDir\\\">\\n            <ng-template #tpl></ng-template>\\n        </div>\\n    </div>\\n</div>\" }]\n    }], () => [{ type: DayService }, { type: CalendarService }], { date: [{\n            type: Input\n        }], thisMonth: [{\n            type: Input\n        }], dayDirective: [{\n            type: Input\n        }], template: [{\n            type: ViewChild,\n            args: [\"tpl\", { static: false, read: ViewContainerRef }]\n        }] }); })();\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassDebugInfo(DayViewComponent, { className: \"DayViewComponent\", filePath: \"lib/day-view/day-view.component.ts\", lineNumber: 26 }); })();\n\nfunction WeekViewComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelement(1, \"app-day-view\", 2);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const date_r1 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"dayDirective\", ctx_r1.getDayDirective(date_r1))(\"date\", date_r1)(\"thisMonth\", date_r1.getMonth() === ctx_r1.firstMonthDate.getMonth() && date_r1.getFullYear() === ctx_r1.firstMonthDate.getFullYear());\n} }\nclass WeekViewComponent {\n    constructor(weekService) {\n        this.weekService = weekService;\n    }\n    ngOnInit() {\n        this.dates = this.weekService.getWeek(this.date);\n    }\n    getDayDirective(date) {\n        let day = this.dayDirectives.find((directive) => directive.date.getTime() === date.getTime());\n        return day;\n    }\n    /** @nocollapse */ static { this.ɵfac = function WeekViewComponent_Factory(__ngFactoryType__) { return new (__ngFactoryType__ || WeekViewComponent)(i0.ɵɵdirectiveInject(WeekService)); }; }\n    /** @nocollapse */ static { this.ɵcmp = /** @pureOrBreakMyCode */ i0.ɵɵdefineComponent({ type: WeekViewComponent, selectors: [[\"app-week-view\"]], inputs: { date: \"date\", firstMonthDate: \"firstMonthDate\", dayDirectives: \"dayDirectives\" }, features: [i0.ɵɵProvidersFeature([WeekService])], decls: 1, vars: 1, consts: [[\"class\", \"f1\", 4, \"ngFor\", \"ngForOf\"], [1, \"f1\"], [3, \"dayDirective\", \"date\", \"thisMonth\"]], template: function WeekViewComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵtemplate(0, WeekViewComponent_div_0_Template, 2, 3, \"div\", 0);\n        } if (rf & 2) {\n            i0.ɵɵproperty(\"ngForOf\", ctx.dates);\n        } }, dependencies: [CommonModule, i2.NgForOf, DayViewComponent], encapsulation: 2 }); }\n}\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(WeekViewComponent, [{\n        type: Component,\n        args: [{ selector: \"app-week-view\", standalone: true, imports: [CommonModule, DayViewComponent], providers: [WeekService], template: \"<div *ngFor=\\\"let date of dates\\\" class=\\\"f1\\\">\\n    <app-day-view [dayDirective]=\\\"getDayDirective(date)\\\" [date]=\\\"date\\\"\\n        [thisMonth]=\\\"date.getMonth()===firstMonthDate.getMonth()&&date.getFullYear()===firstMonthDate.getFullYear()\\\">\\n    </app-day-view>\\n</div>\" }]\n    }], () => [{ type: WeekService }], { date: [{\n            type: Input\n        }], firstMonthDate: [{\n            type: Input\n        }], dayDirectives: [{\n            type: Input\n        }] }); })();\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassDebugInfo(WeekViewComponent, { className: \"WeekViewComponent\", filePath: \"lib/week-view/week-view.component.ts\", lineNumber: 15 }); })();\n\nconst _c0$2 = [\"wrap\"];\nconst _c1$1 = a0 => ({ flexDirection: a0 });\nfunction MonthViewComponent_div_7_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const d_r2 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(2, 1, d_r2, \"EEEEEE\"));\n} }\nfunction MonthViewComponent_app_week_view_8_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"app-week-view\", 7);\n} if (rf & 2) {\n    const weekStartDate_r3 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"date\", weekStartDate_r3)(\"dayDirectives\", ctx_r3.getWeekDayDirectives(weekStartDate_r3))(\"firstMonthDate\", ctx_r3.date)(\"ngStyle\", i0.ɵɵpureFunction1(4, _c1$1, ctx_r3.vertical ? \"column\" : \"row\"));\n} }\nclass MonthViewComponent {\n    constructor(monthService, calendarService) {\n        this.monthService = monthService;\n        this.calendarService = calendarService;\n        this.sub = new Subscription();\n    }\n    showYears() {\n        this.calendarService.getShownYears(this.date);\n    }\n    ngOnInit() {\n        this.sub.add(this.calendarService.animationStep.subscribe((data) => {\n            this.animationStep = data;\n        }));\n        this.weeks = this.monthService.getMonth(this.date);\n        let weekDays = [];\n        for (let i = 0; i < 7; i++) {\n            weekDays.push(DateUtils.adjustDate(this.weeks[0], i));\n        }\n        this.weekDays = weekDays;\n    }\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n    getWeekDayDirectives(weekStartDate) {\n        weekStartDate.setHours(0, 0, 0, 0);\n        const weekEndDate = new Date(weekStartDate);\n        weekEndDate.setDate(weekStartDate.getDate() + 7);\n        weekEndDate.setHours(0, 0, 0, 0);\n        let directives = this.dayDirectives.filter((directive) => directive.date.getTime() >= weekStartDate.getTime() &&\n            directive.date.getTime() < weekEndDate.getTime());\n        return directives;\n    }\n    /** @nocollapse */ static { this.ɵfac = function MonthViewComponent_Factory(__ngFactoryType__) { return new (__ngFactoryType__ || MonthViewComponent)(i0.ɵɵdirectiveInject(MonthService), i0.ɵɵdirectiveInject(CalendarService)); }; }\n    /** @nocollapse */ static { this.ɵcmp = /** @pureOrBreakMyCode */ i0.ɵɵdefineComponent({ type: MonthViewComponent, selectors: [[\"app-month-view\"]], viewQuery: function MonthViewComponent_Query(rf, ctx) { if (rf & 1) {\n            i0.ɵɵviewQuery(_c0$2, 7);\n        } if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.elementView = _t.first);\n        } }, hostVars: 2, hostBindings: function MonthViewComponent_HostBindings(rf, ctx) { if (rf & 2) {\n            i0.ɵɵstyleMap(ctx.elWidth);\n        } }, inputs: { date: \"date\", updateDate: \"updateDate\", vertical: \"vertical\", dayDirectives: \"dayDirectives\" }, outputs: { elWidth: \"elWidth\" }, features: [i0.ɵɵProvidersFeature([MonthService])], decls: 9, vars: 15, consts: [[\"wrap\", \"\"], [1, \"monthHeader\", 3, \"click\"], [1, \"weekWrap\", 3, \"ngStyle\"], [2, \"display\", \"flex\", 3, \"ngStyle\"], [\"class\", \"dayWeekTitle\", 4, \"ngFor\", \"ngForOf\"], [3, \"date\", \"dayDirectives\", \"firstMonthDate\", \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [1, \"dayWeekTitle\"], [3, \"date\", \"dayDirectives\", \"firstMonthDate\", \"ngStyle\"]], template: function MonthViewComponent_Template(rf, ctx) { if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵelementStart(0, \"div\", null, 0)(2, \"div\", 1);\n            i0.ɵɵlistener(\"click\", function MonthViewComponent_Template_div_click_2_listener() { i0.ɵɵrestoreView(_r1); return i0.ɵɵresetView(ctx.showYears()); });\n            i0.ɵɵtext(3);\n            i0.ɵɵpipe(4, \"date\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"div\", 2)(6, \"div\", 3);\n            i0.ɵɵtemplate(7, MonthViewComponent_div_7_Template, 3, 4, \"div\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(8, MonthViewComponent_app_week_view_8_Template, 1, 6, \"app-week-view\", 5);\n            i0.ɵɵelementEnd()();\n        } if (rf & 2) {\n            i0.ɵɵclassMapInterpolate1(\"monthWrap monthOne \", ctx.animationStep, \"\");\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(4, 8, ctx.date, \"LLLL yyyy\"), \" \");\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(11, _c1$1, ctx.vertical ? \"row\" : \"column\"));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(13, _c1$1, ctx.vertical ? \"column\" : \"row\"));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngForOf\", ctx.weekDays);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngForOf\", ctx.weeks);\n        } }, dependencies: [CommonModule, i2.NgForOf, i2.NgStyle, i2.DatePipe, WeekViewComponent], encapsulation: 2 }); }\n}\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MonthViewComponent, [{\n        type: Component,\n        args: [{ selector: \"app-month-view\", standalone: true, imports: [CommonModule, WeekViewComponent], providers: [MonthService], template: \"<div #wrap class=\\\"monthWrap monthOne {{animationStep}}\\\">\\n    <div class=\\\"monthHeader\\\" (click)=\\\"showYears()\\\">\\n        {{date | date: \\\"LLLL yyyy\\\"}}\\n    </div>\\n    <div class=\\\"weekWrap\\\" [ngStyle]=\\\"{flexDirection: (vertical)?'row':'column'}\\\">\\n        <div [ngStyle]=\\\"{flexDirection: ((vertical)?'column':'row')}\\\" style=\\\"display: flex;\\\">\\n            <div *ngFor=\\\"let d of weekDays\\\" class=\\\"dayWeekTitle\\\">{{ d | date: 'EEEEEE' }}</div>\\n        </div>\\n        <app-week-view *ngFor=\\\"let weekStartDate of weeks\\\" [date]=\\\"weekStartDate\\\"\\n            [dayDirectives]=\\\"getWeekDayDirectives(weekStartDate)\\\" [firstMonthDate]=\\\"date\\\"\\n            [ngStyle]=\\\"{flexDirection: (vertical)?'column':'row'}\\\">\\n        </app-week-view>\\n    </div>\\n</div>\" }]\n    }], () => [{ type: MonthService }, { type: CalendarService }], { date: [{\n            type: Input\n        }], updateDate: [{\n            type: Input\n        }], vertical: [{\n            type: Input\n        }], dayDirectives: [{\n            type: Input\n        }], elWidth: [{\n            type: Output\n        }, {\n            type: HostBinding,\n            args: [\"style\"]\n        }], elementView: [{\n            type: ViewChild,\n            args: [\"wrap\", { static: true }]\n        }] }); })();\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassDebugInfo(MonthViewComponent, { className: \"MonthViewComponent\", filePath: \"lib/month-view/month-view.component.ts\", lineNumber: 27 }); })();\n\nconst _c0$1 = [\"wrap\"];\nfunction MonthSelectComponent_ng_container_6_div_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 7);\n} }\nfunction MonthSelectComponent_ng_container_6_Template(rf, ctx) { if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 5);\n    i0.ɵɵlistener(\"click\", function MonthSelectComponent_ng_container_6_Template_div_click_1_listener() { const month_r2 = i0.ɵɵrestoreView(_r1).$implicit; const ctx_r2 = i0.ɵɵnextContext(); return i0.ɵɵresetView(ctx_r2.setMonth(month_r2)); });\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, MonthSelectComponent_ng_container_6_div_4_Template, 1, 0, \"div\", 6);\n    i0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const month_r2 = ctx.$implicit;\n    const i_r4 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(3, 2, month_r2, \"LLL\"), \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (i_r4 + 1) % 3 === 0 && i_r4 != 0 && i_r4 != 11);\n} }\nclass MonthSelectComponent {\n    constructor(calendarService) {\n        this.calendarService = calendarService;\n        this.months = [];\n    }\n    ngOnInit() {\n        for (let i = 0; i < 12; i++) {\n            let date = new Date(this.date);\n            date.setMonth(0);\n            date = DateUtils.adjustMonth(date, i);\n            this.months.push(date);\n        }\n        this.calendarService.animationStep.subscribe(data => {\n            this.animationStep = data;\n        });\n    }\n    setMonth(month) {\n        this.calendarService.getShownMonths(month);\n    }\n    /** @nocollapse */ static { this.ɵfac = function MonthSelectComponent_Factory(__ngFactoryType__) { return new (__ngFactoryType__ || MonthSelectComponent)(i0.ɵɵdirectiveInject(CalendarService)); }; }\n    /** @nocollapse */ static { this.ɵcmp = /** @pureOrBreakMyCode */ i0.ɵɵdefineComponent({ type: MonthSelectComponent, selectors: [[\"app-month-select\"]], viewQuery: function MonthSelectComponent_Query(rf, ctx) { if (rf & 1) {\n            i0.ɵɵviewQuery(_c0$1, 7);\n        } if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.elementView = _t.first);\n        } }, inputs: { date: \"date\" }, decls: 7, vars: 8, consts: [[\"wrap\", \"\"], [2, \"display\", \"flex\", \"flex-direction\", \"column\", \"flex\", \"1\", \"width\", \"100%\"], [1, \"monthHeader\"], [2, \"display\", \"flex\", \"flex-direction\", \"row\", \"flex\", \"1\", \"flex-wrap\", \"wrap\"], [4, \"ngFor\", \"ngForOf\"], [1, \"monthItem\", 3, \"click\"], [\"style\", \"width:100%; height:1px; \", 4, \"ngIf\"], [2, \"width\", \"100%\", \"height\", \"1px\"]], template: function MonthSelectComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 1, 0)(2, \"div\", 2);\n            i0.ɵɵtext(3);\n            i0.ɵɵpipe(4, \"date\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"div\", 3);\n            i0.ɵɵtemplate(6, MonthSelectComponent_ng_container_6_Template, 5, 5, \"ng-container\", 4);\n            i0.ɵɵelementEnd()();\n        } if (rf & 2) {\n            i0.ɵɵclassMapInterpolate1(\"monthWrap monthOne \", ctx.animationStep, \"\");\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(4, 5, ctx.date, \"yyyy\"), \" \");\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngForOf\", ctx.months);\n        } }, dependencies: [CommonModule, i2.NgForOf, i2.NgIf, i2.DatePipe], encapsulation: 2 }); }\n}\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MonthSelectComponent, [{\n        type: Component,\n        args: [{ selector: \"app-month-select\", standalone: true, imports: [CommonModule], template: \"<div #wrap style=\\\"display: flex;flex-direction:column; flex:1; width: 100%;\\\"\\n    class=\\\"monthWrap monthOne {{animationStep}}\\\">\\n    <div class=\\\"monthHeader\\\">\\n        {{date | date: \\\"yyyy\\\"}}\\n    </div>\\n    <div style=\\\" display: flex;flex-direction:row; flex:1; flex-wrap: wrap;\\\">\\n\\n        <ng-container *ngFor=\\\"let month of months; let i = index\\\">\\n            <div class=\\\"monthItem\\\" (click)=\\\"setMonth(month)\\\">\\n                {{ month | date:'LLL' }}</div>\\n            <div *ngIf=\\\" (i+1)%3===0&&i!=0&&i!=11\\\" style=\\\"width:100%; height:1px; \\\"></div>\\n        </ng-container>\\n\\n    </div>\\n</div>\" }]\n    }], () => [{ type: CalendarService }], { date: [{\n            type: Input\n        }], elementView: [{\n            type: ViewChild,\n            args: [\"wrap\", { static: true }]\n        }] }); })();\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassDebugInfo(MonthSelectComponent, { className: \"MonthSelectComponent\", filePath: \"lib/month-select/month-select.component.ts\", lineNumber: 13 }); })();\n\nclass YearSelectComponent {\n    constructor() { }\n    ngOnInit() {\n    }\n    /** @nocollapse */ static { this.ɵfac = function YearSelectComponent_Factory(__ngFactoryType__) { return new (__ngFactoryType__ || YearSelectComponent)(); }; }\n    /** @nocollapse */ static { this.ɵcmp = /** @pureOrBreakMyCode */ i0.ɵɵdefineComponent({ type: YearSelectComponent, selectors: [[\"app-year-select\"]], decls: 2, vars: 0, template: function YearSelectComponent_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵelementStart(0, \"p\");\n            i0.ɵɵtext(1, \"year-select works!\");\n            i0.ɵɵelementEnd();\n        } }, dependencies: [CommonModule], encapsulation: 2 }); }\n}\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(YearSelectComponent, [{\n        type: Component,\n        args: [{ selector: 'app-year-select', standalone: true, imports: [CommonModule], template: \"<p>year-select works!</p>\\n\" }]\n    }], () => [], null); })();\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassDebugInfo(YearSelectComponent, { className: \"YearSelectComponent\", filePath: \"lib/year-select/year-select.component.ts\", lineNumber: 11 }); })();\n\nconst _c0 = [\"column\"];\nconst _c1 = a0 => ({ width: a0 });\nfunction AngularDatepicker2_div_2_div_1_Template(rf, ctx) { if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵlistener(\"click\", function AngularDatepicker2_div_2_div_1_Template_div_click_0_listener() { const item_r2 = i0.ɵɵrestoreView(_r1).$implicit; const ctx_r2 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r2.clickSuggest(item_r2)); });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", item_r2.title, \"\");\n} }\nfunction AngularDatepicker2_div_2_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtemplate(1, AngularDatepicker2_div_2_div_1_Template, 2, 1, \"div\", 11);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.suggest);\n} }\nfunction AngularDatepicker2_div_7_app_month_view_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"app-month-view\", 15, 0);\n} if (rf & 2) {\n    const date_r4 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"date\", date_r4)(\"vertical\", ctx_r2.vertical)(\"dayDirectives\", ctx_r2.getMonthDayDirectives(date_r4));\n} }\nfunction AngularDatepicker2_div_7_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtemplate(1, AngularDatepicker2_div_7_app_month_view_1_Template, 2, 3, \"app-month-view\", 14);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.getCalendar());\n} }\nfunction AngularDatepicker2_div_8_app_month_select_1_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"app-month-select\", 18, 0);\n} if (rf & 2) {\n    const date_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"date\", date_r5);\n} }\nfunction AngularDatepicker2_div_8_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtemplate(1, AngularDatepicker2_div_8_app_month_select_1_Template, 2, 1, \"app-month-select\", 17);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.getCalendar());\n} }\nclass AngularDatepicker2 {\n    constructor(calendarService, cdr) {\n        this.calendarService = calendarService;\n        this.cdr = cdr;\n        /**\n         * @description\n         *  Array of selected dates.\n         * */\n        this.selectedDates = [];\n        this.selectedDatesChange = new EventEmitter();\n        /**\n         * @description\n         *  Callback event when click on day\n         */\n        this.onDayClick = new EventEmitter();\n        /**\n         * @description\n         * Start week day, default 0\n         */\n        this.weekStart = 0;\n        /**\n         * @description\n         * Weekends, default [0,6], set Day.isWeekend true\n         */\n        this.weekends = [0, 6];\n        this.dayDirectives = [];\n    }\n    __getDirectives() {\n        if (this.dayDirectivesQueryList) {\n            this.dayDirectives = this.dayDirectivesQueryList.toArray();\n            this.dayDirectivesQueryList.changes.subscribe((data) => {\n                this.dayDirectives = data.toArray();\n            });\n        }\n    }\n    ngAfterContentInit() {\n        // this.__getDirectives();\n    }\n    ngAfterViewInit() {\n        this.__getDirectives();\n    }\n    getMonthDayDirectives(date) {\n        return this.dayDirectives.filter((directive) => directive.date.getMonth() === date.getMonth() &&\n            directive.date.getFullYear() === date.getFullYear());\n    }\n    clickSuggest(suggest) {\n        this.calendarService.selectMode = this.selectMode = suggest.selectMode;\n        this.calendarService.selectedDates.next(suggest.selectedDates);\n    }\n    recountWidth() {\n        let width = 0;\n        this.columns\n            ? this.columns\n                .toArray()\n                .map((item) => (width += item.elementView.nativeElement.clientWidth))\n            : null;\n        this.calendarService.animationStep.value === \"stop\" &&\n            this.calendarService.viewSelectorMode === \"days\"\n            ? (this.width = width)\n            : null;\n        this.cdr.detectChanges();\n    }\n    ngAfterViewChecked() {\n        this.recountWidth();\n    }\n    ngOnInit() {\n        if (!this.shownDate) {\n            this.shownDate = new Date();\n        }\n        this.calendarService.animationStep.subscribe((data) => {\n            if (data === \"stop\") {\n                setTimeout(() => this.recountWidth(), 10);\n            }\n        });\n        this.calendarService.selectedDates.subscribe((data) => {\n            this.selectedDatesChange.emit(data);\n        });\n        this.calendarService.clickDayKey.subscribe((data) => {\n            data ? this.onDayClick.emit(data.day) : null;\n        });\n        this.calendarService.days.next(this.days);\n        this.calendarService.weekStart = this.weekStart;\n        this.calendarService.weekends = this.weekends;\n        this.calendarService.viewMode = this.viewMode;\n        this.calendarService.viewSelectorMode = \"days\";\n        this.calendarService.selectMode = this.selectMode;\n        this.calendarService.shownDate = this.shownDate;\n        this.calendarService.setSelectedDates(this.selectedDates);\n        this.calendarService.setDays(this.days);\n        this.calendarService.getShownMonths(this.shownDate);\n        this.calendarService.setDisabledDates(this.disabledDates);\n    }\n    getCalendar() {\n        return this.calendarService.calendar;\n    }\n    getViewSelectorMode() {\n        return this.calendarService.viewSelectorMode;\n    }\n    calculate() {\n        let date = this.shownDate;\n        let countMonths = 0;\n        const months = [];\n        let lastDate;\n        lastDate = date ? date : this.calendarService.getLastDate();\n        countMonths = this.calendarService.getCountMonths();\n        for (let i = countMonths - 1; i >= 0; i--) {\n            months.push(DateUtils.adjustMonth(new Date(lastDate), -i));\n        }\n        return months;\n    }\n    isEqual(array, array1) {\n        console.log(array, array1);\n        let a = array.filter((item) => array1.includes(item));\n        return a.length === 0 && array.length === array1.length;\n    }\n    _viewMode(simpleChange) {\n        if (simpleChange.viewMode.currentValue !== simpleChange.viewMode.previousValue) {\n            this.calendarService.viewMode = simpleChange.viewMode.currentValue;\n            this.calendarService.getShownMonths(this.shownDate);\n            setTimeout(() => this.recountWidth(), 10);\n        }\n    }\n    _selectMode(simpleChange) {\n        if (simpleChange.selectMode.currentValue !==\n            simpleChange.selectMode.previousValue) {\n            this.calendarService.selectMode = simpleChange.selectMode.currentValue;\n            this.calendarService.getShownMonths(this.shownDate);\n            setTimeout(() => this.recountWidth(), 10);\n        }\n    }\n    _shownDate(simpleChange) {\n        if (simpleChange.shownDate.currentValue !==\n            simpleChange.shownDate.previousValue) {\n            this.calendarService.shownDate = simpleChange.shownDate.currentValue;\n            this.calendarService.getShownMonths(this.shownDate);\n            setTimeout(() => this.recountWidth(), 10);\n        }\n    }\n    ngOnChanges(simpleChange) {\n        simpleChange.viewMode && this._viewMode(simpleChange);\n        simpleChange.selectMode && this._selectMode(simpleChange);\n        simpleChange.shownDate && this._shownDate(simpleChange);\n        simpleChange.days && this.calendarService.days.next(this.days);\n        simpleChange.selectedDates &&\n            this.calendarService.setSelectedDates(this.selectedDates);\n    }\n    /** Set custom Day[] */\n    setDays() { }\n    goNext() {\n        let lastDate = this.calendarService.calendar[this.calendarService.calendar.length - 1];\n        this.calendarService.goNext(lastDate);\n    }\n    goPrev() {\n        let firstDate = this.calendarService.calendar[0];\n        this.calendarService.goPrev(firstDate);\n    }\n    /** @nocollapse */ static { this.ɵfac = function AngularDatepicker2_Factory(__ngFactoryType__) { return new (__ngFactoryType__ || AngularDatepicker2)(i0.ɵɵdirectiveInject(CalendarService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); }; }\n    /** @nocollapse */ static { this.ɵcmp = /** @pureOrBreakMyCode */ i0.ɵɵdefineComponent({ type: AngularDatepicker2, selectors: [[\"angular-datepicker2\"]], contentQueries: function AngularDatepicker2_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, DayDirective, 4);\n        } if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dayDirectivesQueryList = _t);\n        } }, viewQuery: function AngularDatepicker2_Query(rf, ctx) { if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 5);\n        } if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.columns = _t);\n        } }, inputs: { selectedDates: \"selectedDates\", suggest: \"suggest\", days: \"days\", shownDate: \"shownDate\", vertical: \"vertical\", viewMode: \"viewMode\", weekStart: \"weekStart\", weekends: \"weekends\", selectMode: \"selectMode\", nowDate: \"nowDate\", disabledDates: \"disabledDates\" }, outputs: { selectedDatesChange: \"selectedDatesChange\", onDayClick: \"onDayClick\" }, features: [i0.ɵɵProvidersFeature([CalendarService]), i0.ɵɵNgOnChangesFeature], decls: 11, vars: 8, consts: [[\"column\", \"\"], [1, \"calendarWrap\"], [1, \"headerCalendar\"], [\"class\", \"suggests\", 4, \"ngIf\"], [1, \"dateSelector\"], [1, \"nextPrevBtn\", 2, \"left\", \"0\", 3, \"click\"], [1, \"wrapMonths\", 3, \"ngStyle\"], [\"class\", \"months\", 4, \"ngIf\"], [\"class\", \"\", \"style\", \"width: 100%; display:flex; flex:1;\", 4, \"ngIf\"], [1, \"nextPrevBtn\", 2, \"right\", \"0\", 3, \"click\"], [1, \"suggests\"], [\"class\", \"suggest\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"suggest\", 3, \"click\"], [1, \"months\"], [3, \"date\", \"vertical\", \"dayDirectives\", 4, \"ngFor\", \"ngForOf\"], [3, \"date\", \"vertical\", \"dayDirectives\"], [1, \"\", 2, \"width\", \"100%\", \"display\", \"flex\", \"flex\", \"1\"], [3, \"date\", 4, \"ngFor\", \"ngForOf\"], [3, \"date\"]], template: function AngularDatepicker2_Template(rf, ctx) { if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2);\n            i0.ɵɵtemplate(2, AngularDatepicker2_div_2_Template, 2, 1, \"div\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"div\", 4)(4, \"div\", 5);\n            i0.ɵɵlistener(\"click\", function AngularDatepicker2_Template_div_click_4_listener() { return ctx.goPrev(); });\n            i0.ɵɵtext(5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(6, \"div\", 6);\n            i0.ɵɵtemplate(7, AngularDatepicker2_div_7_Template, 2, 1, \"div\", 7)(8, AngularDatepicker2_div_8_Template, 2, 1, \"div\", 8);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(9, \"div\", 9);\n            i0.ɵɵlistener(\"click\", function AngularDatepicker2_Template_div_click_9_listener() { return ctx.goNext(); });\n            i0.ɵɵtext(10);\n            i0.ɵɵelementEnd()()();\n        } if (rf & 2) {\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.suggest && ctx.suggest.length > 0);\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate(\"<\");\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(6, _c1, ctx.width + \"px\"));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.getViewSelectorMode() === \"days\");\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.getViewSelectorMode() === \"months\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate(\">\");\n        } }, dependencies: [CommonModule, i2.NgForOf, i2.NgIf, i2.NgStyle, MonthViewComponent,\n            MonthSelectComponent], styles: [\".suggest{background:#e0f5f5;width:auto;display:block;float:left;color:#26b1b1;border-radius:2px;padding:4px 8px;margin-right:2px;margin-bottom:2px;font-size:13px;transition:all .2s;cursor:pointer}.suggest:hover{background:#82dcdc;color:#148a8a}app-calendar{display:block;float:left;width:100%}.nextPrevBtn{display:flex;flex-direction:column;justify-content:center;align-items:center;-webkit-user-select:none;user-select:none;position:absolute;cursor:pointer;padding:8px 16px;transition:all .2s;font-size:.9em;color:#26b1b1;z-index:1;background:#fff}.nextPrevBtn:hover{background:#eee}app-week-view{width:100%;display:flex;flex-direction:row}.dayWeekTitle{flex:1;color:#a9a9a9;justify-content:center;align-items:center;display:flex;font-size:.8em;padding:4px}.styledDay.isWeekEnd{color:#c53c3c}.weekWrap{display:flex;flex-direction:column}app-month-select{display:flex;float:left;min-width:200px;animation:appear .2s ease-in-out}.monthItem{width:33%;font-size:.8em;text-align:center;padding:9px 0;box-shadow:0 0 0 1px #f4f3f3;color:#313131}.monthItem:hover{-webkit-user-select:none;user-select:none;cursor:pointer;background:#eee;transition:.2s}app-month-view{display:flex;float:left;min-width:200px;animation:appear .2s ease-in-out;height:100%}@keyframes appear{0%{transform:scale(.6);opacity:.6}50%{transform:opacity(0);transform:scale(.8)}to{opacity:1;transform:scale(1)}}.months{display:flex;flex-direction:row;position:relative;overflow:hidden;height:100%}.wrapMonths{display:block;float:left;overflow:hidden;width:477px}.monthOne{position:relative}.monthOne.right{animation:right .2s ease-in-out}.monthOne.left{animation:left .2s ease-in-out}@keyframes left{0%{transform:translate(-100%)}to{transform:translate(0)}}@keyframes right{0%{transform:translate(0)}to{transform:translate(-100%)}}.suggests{padding:8px 8px 0;display:block;float:left;width:100%;box-sizing:border-box}.monthSelectBtn{display:flex;flex-direction:row;flex:1;padding:4px 8px}app-day-view{display:block;float:left;width:100%}.styledDay.isDisabled{color:#a7a7a7}.styledDay.isInPeriod{background:#26b1b12b!important}.styledDay.isSelected{background:#26b1b180!important}.styledDay.isSelected.period.end{background:linear-gradient(120deg,#26b1b12b 45%,#26b1b180 113%)!important;animation:appear .2s ease-in-out}.styledDay.isSelected.period.start{background:linear-gradient(-50deg,#26b1b12b 45%,#26b1b180 113%)!important;animation:appear .2s ease-in-out}.day{display:flex;flex:1;font-size:.8em;padding:6px}.dayDir{display:block;float:left;width:100%;height:100%}.styledDay{display:flex;flex:1;flex-direction:column;justify-content:center;align-items:center;color:#313131;transition:all .2s}.styledDay:hover{background:#eee;cursor:pointer;color:#313131;-webkit-user-select:none;user-select:none}.dayWrap{display:flex;flex:1;height:100%;width:100%}.calendarWrap{float:left;display:flex;background:#fff;flex-direction:column;border-radius:4px;transition:all .2s;width:min-content}.dateSelector{float:left;width:auto;display:flex;position:relative;flex-direction:row;transition:all .2s}.monthWrap{padding:0 8px;display:block;float:left;width:100%}.f1{display:flex;flex:1}.monthHeader{text-align:center;padding:8px 16px;font-size:15px;color:#2b2b2b}.monthHeader:first-letter{text-transform:uppercase}.monthHeader:hover{cursor:pointer;-webkit-user-select:none;user-select:none;background:#eee}\\n\"], encapsulation: 2 }); }\n}\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AngularDatepicker2, [{\n        type: Component,\n        args: [{ selector: \"angular-datepicker2\", standalone: true, imports: [\n                    CommonModule,\n                    MonthViewComponent,\n                    MonthSelectComponent,\n                    YearSelectComponent,\n                    DayDirective,\n                ], providers: [CalendarService], encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"calendarWrap\\\">\\n    <div class=\\\"headerCalendar\\\">\\n        <div *ngIf=\\\"suggest&&suggest.length>0\\\" class=\\\"suggests\\\">\\n            <div *ngFor=\\\"let item of suggest ; let i = index\\\" class=\\\"suggest\\\" (click)=\\\"clickSuggest(item)\\\">\\n                {{item.title}}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"dateSelector\\\">\\n        <div (click)=\\\"goPrev()\\\" class=\\\"nextPrevBtn\\\" style=\\\"left:0;\\\">{{'<'}}</div>\\n        <div class=\\\"wrapMonths\\\" [ngStyle]=\\\"{width: width+'px'}\\\">\\n            <div class=\\\"months\\\" *ngIf=\\\"getViewSelectorMode()==='days'\\\">\\n                <app-month-view *ngFor=\\\"let date of  getCalendar()\\\" #column [date]=\\\"date\\\" [vertical]=\\\"vertical\\\"\\n                    [dayDirectives]=\\\"getMonthDayDirectives(date)\\\">\\n                </app-month-view>\\n            </div>\\n\\n            <div class=\\\"\\\" *ngIf=\\\"getViewSelectorMode()==='months'\\\" style=\\\"width: 100%; display:flex; flex:1;\\\">\\n                <app-month-select *ngFor=\\\"let date of  getCalendar()\\\" #column [date]=\\\"date\\\">\\n                </app-month-select>\\n            </div>\\n        </div>\\n        <div (click)=\\\"goNext()\\\" class=\\\"nextPrevBtn\\\" style=\\\"right:0;\\\">{{\\\">\\\"}}</div>\\n    </div>\\n</div>\", styles: [\".suggest{background:#e0f5f5;width:auto;display:block;float:left;color:#26b1b1;border-radius:2px;padding:4px 8px;margin-right:2px;margin-bottom:2px;font-size:13px;transition:all .2s;cursor:pointer}.suggest:hover{background:#82dcdc;color:#148a8a}app-calendar{display:block;float:left;width:100%}.nextPrevBtn{display:flex;flex-direction:column;justify-content:center;align-items:center;-webkit-user-select:none;user-select:none;position:absolute;cursor:pointer;padding:8px 16px;transition:all .2s;font-size:.9em;color:#26b1b1;z-index:1;background:#fff}.nextPrevBtn:hover{background:#eee}app-week-view{width:100%;display:flex;flex-direction:row}.dayWeekTitle{flex:1;color:#a9a9a9;justify-content:center;align-items:center;display:flex;font-size:.8em;padding:4px}.styledDay.isWeekEnd{color:#c53c3c}.weekWrap{display:flex;flex-direction:column}app-month-select{display:flex;float:left;min-width:200px;animation:appear .2s ease-in-out}.monthItem{width:33%;font-size:.8em;text-align:center;padding:9px 0;box-shadow:0 0 0 1px #f4f3f3;color:#313131}.monthItem:hover{-webkit-user-select:none;user-select:none;cursor:pointer;background:#eee;transition:.2s}app-month-view{display:flex;float:left;min-width:200px;animation:appear .2s ease-in-out;height:100%}@keyframes appear{0%{transform:scale(.6);opacity:.6}50%{transform:opacity(0);transform:scale(.8)}to{opacity:1;transform:scale(1)}}.months{display:flex;flex-direction:row;position:relative;overflow:hidden;height:100%}.wrapMonths{display:block;float:left;overflow:hidden;width:477px}.monthOne{position:relative}.monthOne.right{animation:right .2s ease-in-out}.monthOne.left{animation:left .2s ease-in-out}@keyframes left{0%{transform:translate(-100%)}to{transform:translate(0)}}@keyframes right{0%{transform:translate(0)}to{transform:translate(-100%)}}.suggests{padding:8px 8px 0;display:block;float:left;width:100%;box-sizing:border-box}.monthSelectBtn{display:flex;flex-direction:row;flex:1;padding:4px 8px}app-day-view{display:block;float:left;width:100%}.styledDay.isDisabled{color:#a7a7a7}.styledDay.isInPeriod{background:#26b1b12b!important}.styledDay.isSelected{background:#26b1b180!important}.styledDay.isSelected.period.end{background:linear-gradient(120deg,#26b1b12b 45%,#26b1b180 113%)!important;animation:appear .2s ease-in-out}.styledDay.isSelected.period.start{background:linear-gradient(-50deg,#26b1b12b 45%,#26b1b180 113%)!important;animation:appear .2s ease-in-out}.day{display:flex;flex:1;font-size:.8em;padding:6px}.dayDir{display:block;float:left;width:100%;height:100%}.styledDay{display:flex;flex:1;flex-direction:column;justify-content:center;align-items:center;color:#313131;transition:all .2s}.styledDay:hover{background:#eee;cursor:pointer;color:#313131;-webkit-user-select:none;user-select:none}.dayWrap{display:flex;flex:1;height:100%;width:100%}.calendarWrap{float:left;display:flex;background:#fff;flex-direction:column;border-radius:4px;transition:all .2s;width:min-content}.dateSelector{float:left;width:auto;display:flex;position:relative;flex-direction:row;transition:all .2s}.monthWrap{padding:0 8px;display:block;float:left;width:100%}.f1{display:flex;flex:1}.monthHeader{text-align:center;padding:8px 16px;font-size:15px;color:#2b2b2b}.monthHeader:first-letter{text-transform:uppercase}.monthHeader:hover{cursor:pointer;-webkit-user-select:none;user-select:none;background:#eee}\\n\"] }]\n    }], () => [{ type: CalendarService }, { type: i0.ChangeDetectorRef }], { selectedDates: [{\n            type: Input\n        }], selectedDatesChange: [{\n            type: Output\n        }], onDayClick: [{\n            type: Output\n        }], suggest: [{\n            type: Input\n        }], days: [{\n            type: Input\n        }], shownDate: [{\n            type: Input\n        }], vertical: [{\n            type: Input\n        }], viewMode: [{\n            type: Input\n        }], weekStart: [{\n            type: Input\n        }], weekends: [{\n            type: Input\n        }], selectMode: [{\n            type: Input\n        }], nowDate: [{\n            type: Input\n        }], disabledDates: [{\n            type: Input\n        }], columns: [{\n            type: ViewChildren,\n            args: [\"column\"]\n        }], dayDirectivesQueryList: [{\n            type: ContentChildren,\n            args: [DayDirective]\n        }] }); })();\n(() => { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassDebugInfo(AngularDatepicker2, { className: \"AngularDatepicker2\", filePath: \"lib/calendar/angular-datepicker2.component.ts\", lineNumber: 48 }); })();\n\n/*\n * Public API Surface of angular-datepicker2\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngularDatepicker2, CalendarService, DateUtils, DayDirective, DayService, DayViewComponent, MonthSelectComponent, MonthService, MonthViewComponent, SelectMode, ViewMode, WeekService, WeekViewComponent, YearSelectComponent };\n//# sourceMappingURL=angular-datepicker2.mjs.map\n","map":null,"preliminaryFileName":"angular-datepicker2.mjs","sourcemapFileName":"angular-datepicker2.mjs.map"},{"fileName":"angular-datepicker2.mjs.map","names":[],"needsCodeReference":false,"originalFileName":null,"originalFileNames":[],"source":"{\"version\":3,\"file\":\"angular-datepicker2.mjs\",\"sources\":[\"../../../projects/angular-datepicker2/src/lib/interfaces.ts\",\"../../../projects/angular-datepicker2/src/lib/_utils/date.utils.ts\",\"../../../projects/angular-datepicker2/src/lib/_service/calendar.service.ts\",\"../../../projects/angular-datepicker2/src/lib/day.directive.ts\",\"../../../projects/angular-datepicker2/src/lib/_service/month.service.ts\",\"../../../projects/angular-datepicker2/src/lib/_service/week.service.ts\",\"../../../projects/angular-datepicker2/src/lib/_service/day.service.ts\",\"../../../projects/angular-datepicker2/src/lib/day-view/day-view.component.html\",\"../../../projects/angular-datepicker2/src/lib/day-view/day-view.component.ts\",\"../../../projects/angular-datepicker2/src/lib/week-view/week-view.component.html\",\"../../../projects/angular-datepicker2/src/lib/week-view/week-view.component.ts\",\"../../../projects/angular-datepicker2/src/lib/month-view/month-view.component.html\",\"../../../projects/angular-datepicker2/src/lib/month-view/month-view.component.ts\",\"../../../projects/angular-datepicker2/src/lib/month-select/month-select.component.html\",\"../../../projects/angular-datepicker2/src/lib/month-select/month-select.component.ts\",\"../../../projects/angular-datepicker2/src/lib/year-select/year-select.component.ts\",\"../../../projects/angular-datepicker2/src/lib/year-select/year-select.component.html\",\"../../../projects/angular-datepicker2/src/lib/calendar/angular-datepicker2.component.html\",\"../../../projects/angular-datepicker2/src/lib/calendar/angular-datepicker2.component.ts\",\"../../../projects/angular-datepicker2/src/public-api.ts\",\"../../../projects/angular-datepicker2/src/angular-datepicker2.ts\"],\"sourcesContent\":[\"import { Type } from \\\"@angular/core\\\";\\n\\nexport interface Day {\\n  isDisabled: boolean;\\n  isWeekEnd: boolean;\\n  isSelected: boolean;\\n  isHovered: boolean;\\n  isInPeriod?: boolean;\\n  date?: Date;\\n}\\n\\nexport interface Suggest {\\n  selectMode: SelectMode;\\n  selectedDates: Date[];\\n  title: string;\\n}\\n\\nexport interface Week {\\n  id: number;\\n  days: Day[] | null;\\n}\\n\\nexport interface Month {\\n  id: number;\\n  date: Date;\\n  weeks: Week[] | null;\\n}\\n\\nexport interface Calendar {\\n  id?: number;\\n  months?: Month[] | null;\\n}\\n\\nexport interface DisabledDates {\\n  dates?: Date[];\\n  before?: Date;\\n  after?: Date;\\n}\\n\\n/**\\n * @publicApi\\n */\\nexport enum SelectMode {\\n  Single = \\\"single\\\",\\n  Multiple = \\\"multiple\\\",\\n  Period = \\\"period\\\",\\n}\\n\\nexport enum ViewMode {\\n  Year = \\\"year\\\",\\n  Quarter = \\\"quarter\\\",\\n  Semester = \\\"semester\\\",\\n}\\n\",\"/**\\n * Date utility functions for angular-datepicker2\\n * Replaces Date prototype extensions for better compatibility\\n */\\nexport class DateUtils {\\n  \\n  static adjustDate(date: Date, num: number = 0): Date {\\n    const newDate = new Date(date);\\n    newDate.setDate(newDate.getDate() + num);\\n    return newDate;\\n  }\\n\\n  /** Adjust month and set date to 1 */\\n  static adjustMonth(date: Date, num: number = 0): Date {\\n    const newDate = new Date(date);\\n    newDate.setDate(1);\\n    newDate.setMonth(newDate.getMonth() + num);\\n    return newDate;\\n  }\\n\\n  /** Adjust year, set month to 0 and date to 1 */\\n  static adjustYear(date: Date, num: number = 0): Date {\\n    const newDate = new Date(date);\\n    newDate.setDate(1);\\n    newDate.setMonth(0);\\n    newDate.setFullYear(newDate.getFullYear() + num);\\n    return newDate;\\n  }\\n\\n  static getDayWithStart(date: Date, start: number): number {\\n    const newDate = new Date(date.getTime());\\n    let day = newDate.getDay();\\n    day = day - start;\\n    if (day < 0) {\\n      day = 7 + day;\\n    }\\n    return day;\\n  }\\n\\n  static getFirstDateDay(date: Date, start: number): number {\\n    const newDate = new Date(date.getTime());\\n    newDate.setDate(1);\\n    return DateUtils.getDayWithStart(newDate, start);\\n  }\\n\\n  static getYmd(date: Date): string {\\n    return (\\n      date.getFullYear().toString() +\\n      String(date.getMonth().toString()).padStart(2, \\\"0\\\") +\\n      String(date.getDate().toString()).padStart(2, \\\"0\\\")\\n    );\\n  }\\n}\",\"import { Injectable } from \\\"@angular/core\\\";\\nimport { BehaviorSubject, Subject } from \\\"rxjs\\\";\\nimport { Day, DisabledDates, ViewMode } from \\\"../interfaces\\\";\\nimport { DateUtils } from \\\"../_utils/date.utils\\\";\\n\\n@Injectable({\\n  providedIn: \\\"root\\\",\\n})\\nexport class CalendarService {\\n  //calendar: BehaviorSubject<any[]> = new BehaviorSubject([]);\\n  calendar: Date[];\\n  shownDate: Date;\\n  viewMode;\\n  viewSelectorMode;\\n  selectMode;\\n\\n  selectedDates: BehaviorSubject<Date[]> = new BehaviorSubject([]);\\n  disabledDates: BehaviorSubject<DisabledDates> = new BehaviorSubject(null);\\n  days: BehaviorSubject<Day[]> = new BehaviorSubject([]);\\n\\n  countMonths: number;\\n  weekStart: number;\\n  weekends: number[];\\n\\n  animationStep = new BehaviorSubject(\\\"stop\\\");\\n\\n  recountWidth = new BehaviorSubject(1);\\n\\n  /** Needs for onClickDay detect change */\\n  clickDayKey: BehaviorSubject<{\\n    day: Day;\\n    key: string;\\n  } | null> = new BehaviorSubject(null);\\n\\n  updateDate = new BehaviorSubject(new Date());\\n\\n  constructor() {}\\n\\n  setSelectedDates(selectedDates: Date[]) {\\n    this.selectedDates.next(selectedDates);\\n  }\\n\\n  setDisabledDates(disabledDates: DisabledDates) {\\n    this.disabledDates.next(disabledDates);\\n  }\\n\\n  setDays(days: Day[]) {\\n    this.days.next(days);\\n  }\\n\\n  setShownDate(date: Date) {\\n    this.shownDate = date;\\n  }\\n\\n  addSelected(date: Date) {\\n    let selectedDates = this.selectedDates.value;\\n    selectedDates.push(date);\\n    this.selectedDates.next(selectedDates);\\n  }\\n\\n  public getCountMonths(): number {\\n    let viewMode = this.viewMode;\\n    if (typeof viewMode === \\\"number\\\") {\\n      return viewMode;\\n    } else {\\n      if (viewMode === ViewMode.Quarter) {\\n        return 3;\\n      } else if (viewMode === ViewMode.Semester) {\\n        return 6;\\n      }\\n    }\\n    return 1;\\n  }\\n\\n  public getLastDate(date?: Date): Date {\\n    //console.log(date, 'date getlasr')\\n    let viewMode = this.viewMode;\\n    let lastDate = this.shownDate\\n      ? new Date(this.shownDate)\\n      : this.selectedDates.value\\n      ? new Date(this.selectedDates[this.selectedDates.value.length - 1])\\n      : new Date();\\n\\n    lastDate = date ? new Date(date) : lastDate;\\n\\n    //if (typeof viewMode === \\\"ViewMode\\\") {\\n    if (viewMode === ViewMode.Quarter) {\\n      if (lastDate.getMonth() >= 0 && lastDate.getMonth() <= 2) {\\n        lastDate.setMonth(2);\\n      } else if (lastDate.getMonth() >= 3 && lastDate.getMonth() <= 5) {\\n        lastDate.setMonth(5);\\n      } else if (lastDate.getMonth() >= 6 && lastDate.getMonth() <= 8) {\\n        lastDate.setMonth(8);\\n      } else if (lastDate.getMonth() >= 9 && lastDate.getMonth() <= 11) {\\n        lastDate.setMonth(11);\\n      }\\n    } else if (viewMode === ViewMode.Semester) {\\n      if (lastDate.getMonth() >= 0 && lastDate.getMonth() <= 5) {\\n        lastDate.setMonth(5);\\n      } else if (lastDate.getMonth() >= 6 && lastDate.getMonth() <= 11) {\\n        lastDate.setMonth(11);\\n      }\\n    }\\n    //}\\n\\n    return lastDate;\\n  }\\n\\n  getShownYears(lastDateShown: Date) {\\n    let countMonths = 0;\\n    const months = [];\\n\\n    countMonths = this.getCountMonths();\\n    this.countMonths = countMonths;\\n\\n    for (let i = countMonths - 1; i >= 0; i--) {\\n      months.push(DateUtils.adjustYear(new Date(lastDateShown), -i));\\n    }\\n    this.calendar = months;\\n    this.viewSelectorMode = \\\"months\\\";\\n  }\\n\\n  getShownMonths(date?: Date) {\\n    let countMonths = 0;\\n    const months = [];\\n    let lastDate: Date;\\n\\n    lastDate = this.getLastDate(date);\\n    countMonths = this.getCountMonths();\\n    this.countMonths = countMonths;\\n\\n    for (let i = countMonths - 1; i >= 0; i--) {\\n      months.push(DateUtils.adjustMonth(new Date(lastDate), -i));\\n    }\\n\\n    this.calendar = months;\\n    this.viewSelectorMode = \\\"days\\\";\\n  }\\n\\n  goPrev(firstDate: Date) {\\n    let prevDate = new Date(firstDate);\\n\\n    if (this.viewSelectorMode === \\\"days\\\") {\\n      prevDate = DateUtils.adjustMonth(prevDate, -1);\\n    } else if (this.viewSelectorMode === \\\"months\\\") {\\n      prevDate = DateUtils.adjustYear(prevDate, -1);\\n    }\\n\\n    let dates = [...this.calendar];\\n    dates.unshift(prevDate);\\n    this.calendar = dates;\\n    this.animationStep.next(\\\"left\\\");\\n\\n    setTimeout(() => {\\n      dates = [...this.calendar];\\n      dates.splice(dates.length - 1, 1);\\n      this.calendar = dates;\\n      this.animationStep.next(\\\"stop\\\");\\n    }, 205);\\n  }\\n\\n  goNext(lastDate: Date) {\\n    let nextDate = new Date(lastDate);\\n\\n    if (this.viewSelectorMode === \\\"days\\\") {\\n      nextDate = DateUtils.adjustMonth(nextDate, 1);\\n    } else if (this.viewSelectorMode === \\\"months\\\") {\\n      nextDate = DateUtils.adjustYear(nextDate, 1);\\n    }\\n\\n    let dates = [...this.calendar];\\n    //dates.splice(0, 1);\\n    dates.push(nextDate);\\n    this.calendar = dates;\\n    this.animationStep.next(\\\"right\\\");\\n\\n    setTimeout(() => {\\n      dates = [...this.calendar];\\n\\n      dates.splice(0, 1);\\n      this.calendar = dates;\\n      this.animationStep.next(\\\"stop\\\");\\n      //this.recountWidth.next(this.recountWidth.value + 1);\\n    }, 205);\\n  }\\n}\\n\",\"import { ViewContainerRef, Directive, Input, TemplateRef, OnInit } from \\\"@angular/core\\\";\\n\\n@Directive({\\n  selector: \\\"[ad2day]\\\",\\n  standalone: true,\\n  //providers: [TemplateRef],\\n})\\nexport class DayDirective implements OnInit {\\n  context: any | null = null;\\n  __created = false;\\n\\n  constructor(\\n    private template: TemplateRef<any>,\\n    private container: ViewContainerRef\\n  ) {}\\n\\n  @Input(\\\"ad2dayFrom\\\") date: Date;\\n\\n  @Input() set day(date: Date) {\\n    this.context = {\\n      $implicit: date,\\n    };\\n  }\\n\\n  ngOnInit() {\\n    this.context = {\\n      $implicit: this.date,\\n      date: this.date,\\n    };\\n  }\\n}\\n\",\"import { Injectable } from \\\"@angular/core\\\";\\nimport { BehaviorSubject } from \\\"rxjs\\\";\\nimport { DateUtils } from \\\"../_utils/date.utils\\\";\\nimport { CalendarService } from \\\"./calendar.service\\\";\\n\\n@Injectable({\\n  providedIn: \\\"root\\\"\\n})\\nexport class MonthService {\\n\\n  constructor(private calendarService: CalendarService) { }\\n\\n  getMonth(date: Date) {\\n    const daysInMonth = new Date(\\n      date.getFullYear(),\\n      date.getMonth() + 1,\\n      0\\n    ).getDate();\\n\\n    let weekStart = this.calendarService.weekStart;\\n\\n    const countWeek = Math.ceil(\\n      (daysInMonth + DateUtils.getFirstDateDay(date, weekStart)) / 7\\n    );\\n\\n    const weeks = [];\\n    for (let i = 0; i < countWeek; i++) {\\n      const startWeekDate = new Date(date);\\n      startWeekDate.setDate(\\n        date.getDate() + i * 7 - DateUtils.getDayWithStart(date, weekStart)\\n      );\\n      weeks.push(startWeekDate);\\n    }\\n\\n    return weeks;\\n  }\\n}\\n\",\"import { Injectable } from \\\"@angular/core\\\";\\nimport { BehaviorSubject } from \\\"rxjs\\\";\\n\\n@Injectable({\\n  providedIn: \\\"root\\\"\\n})\\nexport class WeekService {\\n\\n  constructor() { }\\n\\n  getWeek(date: Date) {\\n    const dayInWeek = 7;\\n    const days = [];\\n\\n    for (let i = 0; i < dayInWeek; i++) {\\n      const curDate = new Date(date);\\n      curDate.setDate(curDate.getDate() + i);\\n      days.push(curDate);\\n    }\\n\\n    return days;\\n  }\\n}\\n\",\"import { Injectable } from \\\"@angular/core\\\";\\nimport { CalendarService } from \\\"./calendar.service\\\";\\nimport { Day } from \\\"../interfaces\\\";\\nimport { DateUtils } from \\\"../_utils/date.utils\\\";\\n\\n@Injectable({\\n  providedIn: \\\"root\\\",\\n})\\nexport class DayService {\\n  day: Day;\\n  constructor(private calendarService: CalendarService) {}\\n\\n  private getIsDisabled(date: Date): boolean {\\n    const disabledDates = this.calendarService.disabledDates.value;\\n    if (!disabledDates) {\\n      return false;\\n    }\\n    if (\\n      disabledDates.dates &&\\n      disabledDates.dates.length > 0 &&\\n      disabledDates.dates.find(\\n        (disableDate) => disableDate.getTime() === date.getTime()\\n      )\\n    ) {\\n      return true;\\n    }\\n    if (disabledDates.after && disabledDates.after.getTime() < date.getTime()) {\\n      return true;\\n    }\\n    if (\\n      disabledDates.before &&\\n      disabledDates.before.getTime() > date.getTime()\\n    ) {\\n      return true;\\n    }\\n    return false;\\n  }\\n\\n  createDay(date: Date): Day {\\n    this.day = {\\n      isDisabled: this.getIsDisabled(date),\\n      isWeekEnd: this.calendarService.weekends.includes(date.getDay()),\\n      isSelected: false,\\n      isHovered: false,\\n      isInPeriod: this.getIsInPeriod(date),\\n      date: date,\\n    };\\n\\n    return this.day;\\n  }\\n\\n  getIsInPeriod(date: Date): boolean {\\n    if (\\n      this.calendarService.selectMode === \\\"period\\\" &&\\n      this.calendarService.selectedDates.value.length == 2 &&\\n      date.getTime() >= this.calendarService.selectedDates.value[0].getTime() &&\\n      date.getTime() <= this.calendarService.selectedDates.value[1].getTime()\\n    ) {\\n      return true;\\n    }\\n    return false;\\n  }\\n\\n  getDay() {\\n    return this.day;\\n  }\\n\\n  sortByDate(a, b) {\\n    if (a.getTime() > b.getTime()) return 1;\\n    if (a.getTime() == b.getTime()) return 0;\\n    if (a.getTime() < b.getTime()) return -1;\\n  }\\n\\n  toggleDate() {\\n    console.log(\\\"clicked in service\\\");\\n\\n    this.calendarService.clickDayKey.next({\\n      key: DateUtils.getYmd(new Date()) + \\\"\\\" + Math.random(),\\n      day: this.day,\\n    });\\n\\n    if (this.calendarService.selectMode === \\\"single\\\") {\\n      if (this.calendarService.selectedDates.value.length > 0) {\\n        this.calendarService.selectedDates.next([this.day.date]);\\n      }\\n    } else if (this.calendarService.selectMode === \\\"multiple\\\") {\\n      if (this.day.isSelected) {\\n        let selectedDates = this.calendarService.selectedDates.value.filter(\\n          (elem) => DateUtils.getYmd(elem) !== DateUtils.getYmd(this.day.date)\\n        );\\n        selectedDates.sort(this.sortByDate);\\n        this.calendarService.selectedDates.next(selectedDates);\\n      } else {\\n        let selectedDates = this.calendarService.selectedDates.value;\\n        selectedDates.push(this.day.date);\\n        this.calendarService.selectedDates.next(selectedDates);\\n      }\\n    } else if (this.calendarService.selectMode === \\\"period\\\") {\\n      if (this.day.isSelected) {\\n        let selectedDates = this.calendarService.selectedDates.value.filter(\\n          (elem) => DateUtils.getYmd(elem) !== DateUtils.getYmd(this.day.date)\\n        );\\n        this.calendarService.selectedDates.next(selectedDates);\\n      } else {\\n        if (this.calendarService.selectedDates.value.length == 2) {\\n          this.calendarService.selectedDates.next([this.day.date]);\\n        } else if (this.calendarService.selectedDates.value.length < 2) {\\n          let selectedDates = this.calendarService.selectedDates.value;\\n          selectedDates.push(this.day.date);\\n\\n          selectedDates.sort(this.sortByDate);\\n          //console.log(selectedDates)\\n\\n          this.calendarService.selectedDates.next(selectedDates);\\n        }\\n      }\\n    }\\n  }\\n}\\n\",\"<div class=\\\"dayWrap\\\">\\n    <div class=\\\"styledDay\\\" *ngIf=\\\"thisMonth\\\" (click)=\\\"onClick()\\\" [ngClass]=\\\"{\\n        isDisabled : dayService.day.isDisabled,\\n        isSelected: dayService.day.isSelected,\\n        isWeekEnd: dayService.day.isWeekEnd,\\n        isInPeriod: dayService.day.isInPeriod,\\n        period: getSelectMode()==='period',\\n        end: isStartOrEndDatePeriod()==='end',\\n        start: isStartOrEndDatePeriod()==='start'\\n    }\\\">\\n        <span *ngIf=\\\"!dayDirective\\\" class=\\\"day\\\">\\n            {{dayService.day.date | date: \\\"d\\\"}}\\n        </span>\\n        <div class=\\\"dayDir\\\">\\n            <ng-template #tpl></ng-template>\\n        </div>\\n    </div>\\n</div>\",\"import {\\n  Component,\\n  OnInit,\\n  Input,\\n  OnChanges,\\n  OnDestroy,\\n  ViewChild,\\n  ViewContainerRef,\\n  AfterViewInit,\\n} from \\\"@angular/core\\\";\\nimport { CommonModule } from \\\"@angular/common\\\";\\nimport { CalendarService } from \\\"../_service/calendar.service\\\";\\nimport { DayService } from \\\"../_service/day.service\\\";\\nimport { Subscription } from \\\"rxjs\\\";\\nimport { DayDirective } from \\\"../day.directive\\\";\\nimport { DateUtils } from \\\"../_utils/date.utils\\\";\\n\\n@Component({\\n  selector: \\\"app-day-view\\\",\\n  standalone: true,\\n  imports: [CommonModule],\\n  templateUrl: \\\"./day-view.component.html\\\",\\n  styleUrls: [\\\"./day-view.component.scss\\\"],\\n  providers: [DayService],\\n})\\nexport class DayViewComponent implements OnInit, OnChanges, OnDestroy, AfterViewInit {\\n  @Input() date: Date;\\n  @Input() thisMonth: boolean;\\n  @Input() dayDirective: DayDirective;\\n  @ViewChild(\\\"tpl\\\", { static: false, read: ViewContainerRef })\\n  template: ViewContainerRef;\\n  sub: Subscription;\\n  sub1: Subscription;\\n\\n  constructor(\\n    public dayService: DayService,\\n    private calendarService: CalendarService\\n  ) {}\\n\\n  createChildComponent() {\\n    let viewContainerRef = this.template;\\n    viewContainerRef.clear();\\n    viewContainerRef.createEmbeddedView(\\n      (this.dayDirective as any).template,\\n      (this.dayDirective as any).context\\n    );\\n  }\\n\\n  isStartOrEndDatePeriod() {\\n    if (this.getSelectMode() === \\\"period\\\") {\\n      if (this.getSelectedDates().length == 2) {\\n        if (DateUtils.getYmd(this.date) === DateUtils.getYmd(this.getSelectedDates()[0])) {\\n          return \\\"start\\\";\\n        } else if (DateUtils.getYmd(this.date) === DateUtils.getYmd(this.getSelectedDates()[1])) {\\n          return \\\"end\\\";\\n        }\\n      }\\n    }\\n    return false;\\n  }\\n\\n  getSelectedDates() {\\n    return this.calendarService.selectedDates.value;\\n  }\\n\\n  getSelectMode() {\\n    return this.calendarService.selectMode;\\n  }\\n\\n  ngAfterViewInit() {\\n    if (this.dayDirective && this.template) {\\n      this.createChildComponent();\\n    }\\n  }\\n\\n  // bad idea, too mach subscribes for every day\\n  ngOnInit() {\\n    this.dayService.createDay(this.date);\\n    this.sub = this.calendarService.selectedDates.subscribe((data) => {\\n      const days = data.map((item) => DateUtils.getYmd(item));\\n      this.dayService.day.isSelected = days.includes(\\n        DateUtils.getYmd(this.dayService.day.date)\\n      );\\n      this.dayService.day.isInPeriod = this.dayService.getIsInPeriod(\\n        this.dayService.day.date\\n      );\\n    });\\n  }\\n\\n  detectChanges() {}\\n\\n  ngOnChanges() {\\n    if (this.dayDirective && this.template) {\\n      this.createChildComponent();\\n    }\\n  }\\n\\n  onClick() {\\n    !this.dayService.day.isDisabled ? this.dayService.toggleDate() : null;\\n  }\\n  ngOnDestroy() {\\n    this.sub.unsubscribe();\\n  }\\n}\\n\",\"<div *ngFor=\\\"let date of dates\\\" class=\\\"f1\\\">\\n    <app-day-view [dayDirective]=\\\"getDayDirective(date)\\\" [date]=\\\"date\\\"\\n        [thisMonth]=\\\"date.getMonth()===firstMonthDate.getMonth()&&date.getFullYear()===firstMonthDate.getFullYear()\\\">\\n    </app-day-view>\\n</div>\",\"import { Component, OnInit, Input } from \\\"@angular/core\\\";\\nimport { CommonModule } from \\\"@angular/common\\\";\\nimport { DayDirective } from \\\"../day.directive\\\";\\nimport { WeekService } from \\\"../_service/week.service\\\";\\nimport { DayViewComponent } from \\\"../day-view/day-view.component\\\";\\n\\n@Component({\\n  selector: \\\"app-week-view\\\",\\n  standalone: true,\\n  imports: [CommonModule, DayViewComponent],\\n  templateUrl: \\\"./week-view.component.html\\\",\\n  styleUrls: [\\\"./week-view.component.scss\\\"],\\n  providers: [WeekService],\\n})\\nexport class WeekViewComponent implements OnInit {\\n  @Input() date: Date;\\n  @Input() firstMonthDate: Date;\\n  @Input() dayDirectives: DayDirective[];\\n  dates: Date[] | null[];\\n  constructor(private weekService: WeekService) {}\\n\\n  ngOnInit() {\\n    this.dates = this.weekService.getWeek(this.date);\\n  }\\n\\n  getDayDirective(date: Date): DayDirective {\\n    let day = this.dayDirectives.find(\\n      (directive: DayDirective) => directive.date.getTime() === date.getTime()\\n    );\\n    return day;\\n  }\\n}\\n\",\"<div #wrap class=\\\"monthWrap monthOne {{animationStep}}\\\">\\n    <div class=\\\"monthHeader\\\" (click)=\\\"showYears()\\\">\\n        {{date | date: \\\"LLLL yyyy\\\"}}\\n    </div>\\n    <div class=\\\"weekWrap\\\" [ngStyle]=\\\"{flexDirection: (vertical)?'row':'column'}\\\">\\n        <div [ngStyle]=\\\"{flexDirection: ((vertical)?'column':'row')}\\\" style=\\\"display: flex;\\\">\\n            <div *ngFor=\\\"let d of weekDays\\\" class=\\\"dayWeekTitle\\\">{{ d | date: 'EEEEEE' }}</div>\\n        </div>\\n        <app-week-view *ngFor=\\\"let weekStartDate of weeks\\\" [date]=\\\"weekStartDate\\\"\\n            [dayDirectives]=\\\"getWeekDayDirectives(weekStartDate)\\\" [firstMonthDate]=\\\"date\\\"\\n            [ngStyle]=\\\"{flexDirection: (vertical)?'column':'row'}\\\">\\n        </app-week-view>\\n    </div>\\n</div>\",\"import {\\n  Component,\\n  OnInit,\\n  Input,\\n  HostBinding,\\n  Output,\\n  ViewChild,\\n  ElementRef,\\n  OnDestroy,\\n} from \\\"@angular/core\\\";\\nimport { CommonModule } from \\\"@angular/common\\\";\\nimport { CalendarService } from \\\"../_service/calendar.service\\\";\\nimport { MonthService } from \\\"../_service/month.service\\\";\\nimport { Subscription } from \\\"rxjs\\\";\\nimport { DayDirective } from \\\"../day.directive\\\";\\nimport { WeekViewComponent } from \\\"../week-view/week-view.component\\\";\\nimport { DateUtils } from \\\"../_utils/date.utils\\\";\\n\\n@Component({\\n  selector: \\\"app-month-view\\\",\\n  standalone: true,\\n  imports: [CommonModule, WeekViewComponent],\\n  templateUrl: \\\"./month-view.component.html\\\",\\n  styleUrls: [\\\"./month-view.component.scss\\\"],\\n  providers: [MonthService],\\n})\\nexport class MonthViewComponent implements OnInit, OnDestroy {\\n  @Input() date: Date;\\n  @Input() updateDate;\\n  @Input() vertical: boolean;\\n  @Input() dayDirectives: DayDirective[];\\n\\n  @Output() @HostBinding(\\\"style\\\") elWidth: number;\\n  @ViewChild(\\\"wrap\\\", { static: true }) elementView: ElementRef;\\n\\n  weeks: Date[] | null[];\\n  animationStep;\\n  weekDays: Date[];\\n  sub: Subscription = new Subscription();\\n\\n  constructor(\\n    private monthService: MonthService,\\n    private calendarService: CalendarService\\n  ) {}\\n\\n  showYears() {\\n    this.calendarService.getShownYears(this.date);\\n  }\\n\\n  ngOnInit() {\\n    this.sub.add(\\n      this.calendarService.animationStep.subscribe((data) => {\\n        this.animationStep = data;\\n      })\\n    );\\n    this.weeks = this.monthService.getMonth(this.date);\\n\\n    let weekDays = [];\\n    for (let i = 0; i < 7; i++) {\\n      weekDays.push(DateUtils.adjustDate(this.weeks[0] as Date, i));\\n    }\\n    this.weekDays = weekDays;\\n  }\\n\\n  ngOnDestroy() {\\n    this.sub.unsubscribe();\\n  }\\n\\n  getWeekDayDirectives(weekStartDate: Date): DayDirective[] {\\n    weekStartDate.setHours(0, 0, 0, 0);\\n    const weekEndDate = new Date(weekStartDate);\\n    weekEndDate.setDate(weekStartDate.getDate() + 7);\\n    weekEndDate.setHours(0, 0, 0, 0);\\n    let directives = this.dayDirectives.filter(\\n      (directive) =>\\n        directive.date.getTime() >= weekStartDate.getTime() &&\\n        directive.date.getTime() < weekEndDate.getTime()\\n    );\\n    return directives;\\n  }\\n}\\n\",\"<div #wrap style=\\\"display: flex;flex-direction:column; flex:1; width: 100%;\\\"\\n    class=\\\"monthWrap monthOne {{animationStep}}\\\">\\n    <div class=\\\"monthHeader\\\">\\n        {{date | date: \\\"yyyy\\\"}}\\n    </div>\\n    <div style=\\\" display: flex;flex-direction:row; flex:1; flex-wrap: wrap;\\\">\\n\\n        <ng-container *ngFor=\\\"let month of months; let i = index\\\">\\n            <div class=\\\"monthItem\\\" (click)=\\\"setMonth(month)\\\">\\n                {{ month | date:'LLL' }}</div>\\n            <div *ngIf=\\\" (i+1)%3===0&&i!=0&&i!=11\\\" style=\\\"width:100%; height:1px; \\\"></div>\\n        </ng-container>\\n\\n    </div>\\n</div>\",\"import { Component, OnInit, Input, ViewChild, ElementRef } from \\\"@angular/core\\\";\\nimport { CommonModule } from \\\"@angular/common\\\";\\nimport { CalendarService } from \\\"../_service/calendar.service\\\";\\nimport { DateUtils } from \\\"../_utils/date.utils\\\";\\n\\n@Component({\\n  selector: \\\"app-month-select\\\",\\n  standalone: true,\\n  imports: [CommonModule],\\n  templateUrl: \\\"./month-select.component.html\\\",\\n  styleUrls: [\\\"./month-select.component.scss\\\"]\\n})\\nexport class MonthSelectComponent implements OnInit {\\n  constructor(private calendarService: CalendarService) { }\\n\\n  @Input() date: Date;\\n  @ViewChild(\\\"wrap\\\", { static: true }) elementView: ElementRef;\\n  months = [];\\n  animationStep;\\n\\n  ngOnInit() {\\n    for (let i = 0; i < 12; i++) {\\n      let date = new Date(this.date);\\n      date.setMonth(0);\\n      date = DateUtils.adjustMonth(date, i);\\n      this.months.push(date);\\n    }\\n\\n    this.calendarService.animationStep.subscribe(data => {\\n      this.animationStep = data;\\n    });\\n  }\\n\\n  setMonth(month: Date) {\\n    this.calendarService.getShownMonths(month);\\n  }\\n}\\n\",\"import { Component, OnInit } from '@angular/core';\\nimport { CommonModule } from '@angular/common';\\n\\n@Component({\\n  selector: 'app-year-select',\\n  standalone: true,\\n  imports: [CommonModule],\\n  templateUrl: './year-select.component.html',\\n  styleUrls: ['./year-select.component.scss']\\n})\\nexport class YearSelectComponent implements OnInit {\\n\\n  constructor() { }\\n\\n  ngOnInit() {\\n  }\\n\\n}\\n\",\"<p>year-select works!</p>\\n\",\"<div class=\\\"calendarWrap\\\">\\n    <div class=\\\"headerCalendar\\\">\\n        <div *ngIf=\\\"suggest&&suggest.length>0\\\" class=\\\"suggests\\\">\\n            <div *ngFor=\\\"let item of suggest ; let i = index\\\" class=\\\"suggest\\\" (click)=\\\"clickSuggest(item)\\\">\\n                {{item.title}}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"dateSelector\\\">\\n        <div (click)=\\\"goPrev()\\\" class=\\\"nextPrevBtn\\\" style=\\\"left:0;\\\">{{'<'}}</div>\\n        <div class=\\\"wrapMonths\\\" [ngStyle]=\\\"{width: width+'px'}\\\">\\n            <div class=\\\"months\\\" *ngIf=\\\"getViewSelectorMode()==='days'\\\">\\n                <app-month-view *ngFor=\\\"let date of  getCalendar()\\\" #column [date]=\\\"date\\\" [vertical]=\\\"vertical\\\"\\n                    [dayDirectives]=\\\"getMonthDayDirectives(date)\\\">\\n                </app-month-view>\\n            </div>\\n\\n            <div class=\\\"\\\" *ngIf=\\\"getViewSelectorMode()==='months'\\\" style=\\\"width: 100%; display:flex; flex:1;\\\">\\n                <app-month-select *ngFor=\\\"let date of  getCalendar()\\\" #column [date]=\\\"date\\\">\\n                </app-month-select>\\n            </div>\\n        </div>\\n        <div (click)=\\\"goNext()\\\" class=\\\"nextPrevBtn\\\" style=\\\"right:0;\\\">{{\\\">\\\"}}</div>\\n    </div>\\n</div>\",\"import {\\n  Component,\\n  OnInit,\\n  Input,\\n  OnChanges,\\n  ViewChildren,\\n  AfterViewChecked,\\n  EventEmitter,\\n  Output,\\n  ChangeDetectorRef,\\n  ViewEncapsulation,\\n  AfterViewInit,\\n  ContentChildren,\\n  AfterContentInit,\\n  QueryList,\\n  ViewContainerRef,\\n} from \\\"@angular/core\\\";\\nimport { CommonModule } from \\\"@angular/common\\\";\\nimport { CalendarService } from \\\"../_service/calendar.service\\\";\\nimport { DateUtils } from \\\"../_utils/date.utils\\\";\\nimport {\\n  Day,\\n  SelectMode,\\n  ViewMode,\\n  Suggest,\\n  DisabledDates,\\n} from \\\"../interfaces\\\";\\nimport { DayDirective } from \\\"../day.directive\\\";\\nimport { MonthViewComponent } from \\\"../month-view/month-view.component\\\";\\nimport { MonthSelectComponent } from \\\"../month-select/month-select.component\\\";\\nimport { YearSelectComponent } from \\\"../year-select/year-select.component\\\";\\n\\n@Component({\\n  selector: \\\"angular-datepicker2\\\",\\n  standalone: true,\\n  imports: [\\n    CommonModule,\\n    MonthViewComponent,\\n    MonthSelectComponent,\\n    YearSelectComponent,\\n    DayDirective,\\n  ],\\n  templateUrl: \\\"./angular-datepicker2.component.html\\\",\\n  styleUrls: [\\\"./angular-datepicker2.component.scss\\\"],\\n  providers: [CalendarService],\\n  encapsulation: ViewEncapsulation.None,\\n})\\nexport class AngularDatepicker2\\n  implements\\n    OnInit,\\n    OnChanges,\\n    AfterViewChecked,\\n    AfterViewInit,\\n    AfterContentInit {\\n  /**\\n   * @description\\n   *  Array of selected dates.\\n   * */\\n  @Input() selectedDates: Date[] = [];\\n  @Output() selectedDatesChange = new EventEmitter<Date[]>();\\n\\n  /**\\n   * @description\\n   *  Callback event when click on day\\n   */\\n  @Output() onDayClick = new EventEmitter<Day>();\\n\\n  /**\\n   * @description\\n   *  Array custom definitions of suggestions\\n   * @see `Suggest`\\n   * */\\n  @Input() suggest: Suggest[];\\n\\n  /**\\n   * @description\\n   *  Array custom definitions of days. Subscribable\\n   * @see `Day`\\n   * */\\n  @Input() days: Day[];\\n\\n  /**\\n   * @description\\n   *  Date whould be render for default calendar .\\n   * */\\n  @Input() shownDate: Date;\\n\\n  /**\\n   * @description\\n   *  Alignment of days in a week. Default horizontal.\\n   * */\\n  @Input() vertical: boolean;\\n\\n  /**\\n   * @description\\n   * Present mode of calendar. Year, quarter, semester or qty months. Default 1.\\n   * */\\n  @Input() viewMode: ViewMode | number;\\n\\n  /**\\n   * @description\\n   * Start week day, default 0\\n   */\\n  @Input() weekStart: number = 0;\\n\\n  /**\\n   * @description\\n   * Weekends, default [0,6], set Day.isWeekend true\\n   */\\n  @Input() weekends: number[] = [0, 6];\\n\\n  /**\\n   * @description\\n   * Single, Multiple, Period\\n   * @See `SelectMode`\\n   */\\n  @Input() selectMode: SelectMode;\\n\\n  /**\\n   * @description\\n   * Date\\n   * @See `SelectMode`\\n   */\\n  @Input() nowDate: Date;\\n\\n  /**\\n   * @description\\n   * Disable select dates. Before after date or array\\n   * @See `DisabledDates`\\n   */\\n  @Input() disabledDates: DisabledDates;\\n\\n  @ViewChildren(\\\"column\\\") columns;\\n\\n  width: number | null;\\n\\n  @ContentChildren(DayDirective)\\n  dayDirectivesQueryList: QueryList<DayDirective>;\\n  dayDirectives: DayDirective[] = [];\\n\\n  constructor(\\n    private calendarService: CalendarService,\\n    private cdr: ChangeDetectorRef\\n  ) {}\\n\\n  private __getDirectives() {\\n    if (this.dayDirectivesQueryList) {\\n      this.dayDirectives = this.dayDirectivesQueryList.toArray();\\n      this.dayDirectivesQueryList.changes.subscribe((data) => {\\n        this.dayDirectives = data.toArray();\\n      });\\n    }\\n  }\\n\\n  ngAfterContentInit() {\\n    // this.__getDirectives();\\n  }\\n\\n  ngAfterViewInit() {\\n    this.__getDirectives();\\n  }\\n\\n  getMonthDayDirectives(date: Date): DayDirective[] {\\n    return this.dayDirectives.filter(\\n      (directive: DayDirective) =>\\n        directive.date.getMonth() === date.getMonth() &&\\n        directive.date.getFullYear() === date.getFullYear()\\n    );\\n  }\\n\\n  clickSuggest(suggest: Suggest) {\\n    this.calendarService.selectMode = this.selectMode = suggest.selectMode;\\n    this.calendarService.selectedDates.next(suggest.selectedDates);\\n  }\\n\\n  recountWidth() {\\n    let width = 0;\\n    this.columns\\n      ? this.columns\\n          .toArray()\\n          .map((item) => (width += item.elementView.nativeElement.clientWidth))\\n      : null;\\n    this.calendarService.animationStep.value === \\\"stop\\\" &&\\n    this.calendarService.viewSelectorMode === \\\"days\\\"\\n      ? (this.width = width)\\n      : null;\\n\\n    this.cdr.detectChanges();\\n  }\\n\\n  ngAfterViewChecked() {\\n    this.recountWidth();\\n  }\\n\\n  ngOnInit() {\\n    if (!this.shownDate) {\\n      this.shownDate = new Date();\\n    }\\n\\n    this.calendarService.animationStep.subscribe((data) => {\\n      if (data === \\\"stop\\\") {\\n        setTimeout(() => this.recountWidth(), 10);\\n      }\\n    });\\n\\n    this.calendarService.selectedDates.subscribe((data) => {\\n      this.selectedDatesChange.emit(data);\\n    });\\n\\n    this.calendarService.clickDayKey.subscribe((data) => {\\n      data ? this.onDayClick.emit(data.day) : null;\\n    });\\n\\n    this.calendarService.days.next(this.days);\\n    this.calendarService.weekStart = this.weekStart;\\n    this.calendarService.weekends = this.weekends;\\n    this.calendarService.viewMode = this.viewMode;\\n    this.calendarService.viewSelectorMode = \\\"days\\\";\\n    this.calendarService.selectMode = this.selectMode;\\n    this.calendarService.shownDate = this.shownDate;\\n    this.calendarService.setSelectedDates(this.selectedDates);\\n    this.calendarService.setDays(this.days);\\n    this.calendarService.getShownMonths(this.shownDate);\\n    this.calendarService.setDisabledDates(this.disabledDates);\\n  }\\n\\n  getCalendar() {\\n    return this.calendarService.calendar;\\n  }\\n\\n  getViewSelectorMode() {\\n    return this.calendarService.viewSelectorMode;\\n  }\\n\\n  calculate() {\\n    let date = this.shownDate;\\n    let countMonths = 0;\\n    const months = [];\\n    let lastDate: Date;\\n    lastDate = date ? date : this.calendarService.getLastDate();\\n    countMonths = this.calendarService.getCountMonths();\\n\\n    for (let i = countMonths - 1; i >= 0; i--) {\\n      months.push(DateUtils.adjustMonth(new Date(lastDate), -i));\\n    }\\n    return months;\\n  }\\n\\n  isEqual(array, array1) {\\n    console.log(array, array1);\\n    let a = array.filter((item) => array1.includes(item));\\n    return a.length === 0 && array.length === array1.length;\\n  }\\n\\n  private _viewMode(simpleChange) {\\n    if (\\n      simpleChange.viewMode.currentValue !== simpleChange.viewMode.previousValue\\n    ) {\\n      this.calendarService.viewMode = simpleChange.viewMode.currentValue;\\n      this.calendarService.getShownMonths(this.shownDate);\\n      setTimeout(() => this.recountWidth(), 10);\\n    }\\n  }\\n\\n  private _selectMode(simpleChange) {\\n    if (\\n      simpleChange.selectMode.currentValue !==\\n      simpleChange.selectMode.previousValue\\n    ) {\\n      this.calendarService.selectMode = simpleChange.selectMode.currentValue;\\n      this.calendarService.getShownMonths(this.shownDate);\\n      setTimeout(() => this.recountWidth(), 10);\\n    }\\n  }\\n\\n  private _shownDate(simpleChange) {\\n    if (\\n      simpleChange.shownDate.currentValue !==\\n      simpleChange.shownDate.previousValue\\n    ) {\\n      this.calendarService.shownDate = simpleChange.shownDate.currentValue;\\n      this.calendarService.getShownMonths(this.shownDate);\\n      setTimeout(() => this.recountWidth(), 10);\\n    }\\n  }\\n\\n  ngOnChanges(simpleChange) {\\n    simpleChange.viewMode && this._viewMode(simpleChange);\\n    simpleChange.selectMode && this._selectMode(simpleChange);\\n    simpleChange.shownDate && this._shownDate(simpleChange);\\n    simpleChange.days && this.calendarService.days.next(this.days);\\n    simpleChange.selectedDates &&\\n      this.calendarService.setSelectedDates(this.selectedDates);\\n  }\\n\\n  /** Set custom Day[] */\\n  setDays() {}\\n\\n  goNext() {\\n    let lastDate = this.calendarService.calendar[\\n      this.calendarService.calendar.length - 1\\n    ];\\n    this.calendarService.goNext(lastDate);\\n  }\\n  goPrev() {\\n    let firstDate = this.calendarService.calendar[0];\\n    this.calendarService.goPrev(firstDate);\\n  }\\n}\\n\",\"/*\\n * Public API Surface of angular-datepicker2\\n */\\n\\nexport * from \\\"./lib/calendar/angular-datepicker2.component\\\";\\nexport * from \\\"./lib/month-view/month-view.component\\\";\\nexport * from \\\"./lib/day-view/day-view.component\\\";\\nexport * from \\\"./lib/month-select/month-select.component\\\";\\nexport * from \\\"./lib/year-select/year-select.component\\\";\\nexport * from \\\"./lib/week-view/week-view.component\\\";\\nexport * from \\\"./lib/interfaces\\\";\\nexport * from \\\"./lib/day.directive\\\";\\nexport * from \\\"./lib/_service/calendar.service\\\";\\nexport * from \\\"./lib/_service/day.service\\\";\\nexport * from \\\"./lib/_service/month.service\\\";\\nexport * from \\\"./lib/_service/week.service\\\";\\nexport * from \\\"./lib/_utils/date.utils\\\";\\n\",\"/**\\n * Generated bundle index. Do not edit.\\n */\\n\\nexport * from './public-api';\\n\"],\"names\":[\"i1.CalendarService\",\"_c1\",\"i1.DayService\",\"i2.CalendarService\",\"i3\",\"i1.WeekService\",\"i1.MonthService\"],\"mappings\":\";;;;;;AAuCA;;AAEG;IACS;AAAZ,CAAA,UAAY,UAAU,EAAA;AACpB,IAAA,UAAA,CAAA,QAAA,CAAA,GAAA,QAAiB;AACjB,IAAA,UAAA,CAAA,UAAA,CAAA,GAAA,UAAqB;AACrB,IAAA,UAAA,CAAA,QAAA,CAAA,GAAA,QAAiB;AACnB,CAAC,EAJW,UAAU,KAAV,UAAU,GAIrB,EAAA,CAAA,CAAA;IAEW;AAAZ,CAAA,UAAY,QAAQ,EAAA;AAClB,IAAA,QAAA,CAAA,MAAA,CAAA,GAAA,MAAa;AACb,IAAA,QAAA,CAAA,SAAA,CAAA,GAAA,SAAmB;AACnB,IAAA,QAAA,CAAA,UAAA,CAAA,GAAA,UAAqB;AACvB,CAAC,EAJW,QAAQ,KAAR,QAAQ,GAInB,EAAA,CAAA,CAAA;;ACpDD;;;AAGG;MACU,SAAS,CAAA;AAEpB,IAAA,OAAO,UAAU,CAAC,IAAU,EAAE,MAAc,CAAC,EAAA;AAC3C,QAAA,MAAM,OAAO,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC;QAC9B,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC;AACxC,QAAA,OAAO,OAAO;;;AAIhB,IAAA,OAAO,WAAW,CAAC,IAAU,EAAE,MAAc,CAAC,EAAA;AAC5C,QAAA,MAAM,OAAO,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC;AAC9B,QAAA,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;QAClB,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,EAAE,GAAG,GAAG,CAAC;AAC1C,QAAA,OAAO,OAAO;;;AAIhB,IAAA,OAAO,UAAU,CAAC,IAAU,EAAE,MAAc,CAAC,EAAA;AAC3C,QAAA,MAAM,OAAO,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC;AAC9B,QAAA,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;AAClB,QAAA,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnB,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC;AAChD,QAAA,OAAO,OAAO;;AAGhB,IAAA,OAAO,eAAe,CAAC,IAAU,EAAE,KAAa,EAAA;QAC9C,MAAM,OAAO,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;AACxC,QAAA,IAAI,GAAG,GAAG,OAAO,CAAC,MAAM,EAAE;AAC1B,QAAA,GAAG,GAAG,GAAG,GAAG,KAAK;AACjB,QAAA,IAAI,GAAG,GAAG,CAAC,EAAE;AACX,YAAA,GAAG,GAAG,CAAC,GAAG,GAAG;;AAEf,QAAA,OAAO,GAAG;;AAGZ,IAAA,OAAO,eAAe,CAAC,IAAU,EAAE,KAAa,EAAA;QAC9C,MAAM,OAAO,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;AACxC,QAAA,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;QAClB,OAAO,SAAS,CAAC,eAAe,CAAC,OAAO,EAAE,KAAK,CAAC;;IAGlD,OAAO,MAAM,CAAC,IAAU,EAAA;AACtB,QAAA,QACE,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,EAAE;AAC7B,YAAA,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;AACnD,YAAA,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;;AAGvD;;MC5CY,eAAe,CAAA;AA4B1B,IAAA,WAAA,GAAA;AApBA,QAAA,IAAA,CAAA,aAAa,GAA4B,IAAI,eAAe,CAAC,EAAE,CAAC;AAChE,QAAA,IAAA,CAAA,aAAa,GAAmC,IAAI,eAAe,CAAC,IAAI,CAAC;AACzE,QAAA,IAAA,CAAA,IAAI,GAA2B,IAAI,eAAe,CAAC,EAAE,CAAC;AAMtD,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,eAAe,CAAC,MAAM,CAAC;AAE3C,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,eAAe,CAAC,CAAC,CAAC;;AAGrC,QAAA,IAAA,CAAA,WAAW,GAGC,IAAI,eAAe,CAAC,IAAI,CAAC;QAErC,IAAU,CAAA,UAAA,GAAG,IAAI,eAAe,CAAC,IAAI,IAAI,EAAE,CAAC;;AAI5C,IAAA,gBAAgB,CAAC,aAAqB,EAAA;AACpC,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC;;AAGxC,IAAA,gBAAgB,CAAC,aAA4B,EAAA;AAC3C,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC;;AAGxC,IAAA,OAAO,CAAC,IAAW,EAAA;AACjB,QAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;;AAGtB,IAAA,YAAY,CAAC,IAAU,EAAA;AACrB,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI;;AAGvB,IAAA,WAAW,CAAC,IAAU,EAAA;AACpB,QAAA,IAAI,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK;AAC5C,QAAA,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC;AACxB,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC;;IAGjC,cAAc,GAAA;AACnB,QAAA,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ;AAC5B,QAAA,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;AAChC,YAAA,OAAO,QAAQ;;aACV;AACL,YAAA,IAAI,QAAQ,KAAK,QAAQ,CAAC,OAAO,EAAE;AACjC,gBAAA,OAAO,CAAC;;AACH,iBAAA,IAAI,QAAQ,KAAK,QAAQ,CAAC,QAAQ,EAAE;AACzC,gBAAA,OAAO,CAAC;;;AAGZ,QAAA,OAAO,CAAC;;AAGH,IAAA,WAAW,CAAC,IAAW,EAAA;;AAE5B,QAAA,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ;AAC5B,QAAA,IAAI,QAAQ,GAAG,IAAI,CAAC;AAClB,cAAE,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS;AACzB,cAAE,IAAI,CAAC,aAAa,CAAC;AACrB,kBAAE,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;AAClE,kBAAE,IAAI,IAAI,EAAE;AAEd,QAAA,QAAQ,GAAG,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,QAAQ;;AAG3C,QAAA,IAAI,QAAQ,KAAK,QAAQ,CAAC,OAAO,EAAE;AACjC,YAAA,IAAI,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE;AACxD,gBAAA,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;;AACf,iBAAA,IAAI,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE;AAC/D,gBAAA,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;;AACf,iBAAA,IAAI,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE;AAC/D,gBAAA,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;;AACf,iBAAA,IAAI,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,QAAQ,CAAC,QAAQ,EAAE,IAAI,EAAE,EAAE;AAChE,gBAAA,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC;;;AAElB,aAAA,IAAI,QAAQ,KAAK,QAAQ,CAAC,QAAQ,EAAE;AACzC,YAAA,IAAI,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE;AACxD,gBAAA,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;;AACf,iBAAA,IAAI,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,QAAQ,CAAC,QAAQ,EAAE,IAAI,EAAE,EAAE;AAChE,gBAAA,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC;;;;AAKzB,QAAA,OAAO,QAAQ;;AAGjB,IAAA,aAAa,CAAC,aAAmB,EAAA;QAC/B,IAAI,WAAW,GAAG,CAAC;QACnB,MAAM,MAAM,GAAG,EAAE;AAEjB,QAAA,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE;AACnC,QAAA,IAAI,CAAC,WAAW,GAAG,WAAW;AAE9B,QAAA,KAAK,IAAI,CAAC,GAAG,WAAW,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AACzC,YAAA,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;AAEhE,QAAA,IAAI,CAAC,QAAQ,GAAG,MAAM;AACtB,QAAA,IAAI,CAAC,gBAAgB,GAAG,QAAQ;;AAGlC,IAAA,cAAc,CAAC,IAAW,EAAA;QACxB,IAAI,WAAW,GAAG,CAAC;QACnB,MAAM,MAAM,GAAG,EAAE;AACjB,QAAA,IAAI,QAAc;AAElB,QAAA,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;AACjC,QAAA,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE;AACnC,QAAA,IAAI,CAAC,WAAW,GAAG,WAAW;AAE9B,QAAA,KAAK,IAAI,CAAC,GAAG,WAAW,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AACzC,YAAA,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;AAG5D,QAAA,IAAI,CAAC,QAAQ,GAAG,MAAM;AACtB,QAAA,IAAI,CAAC,gBAAgB,GAAG,MAAM;;AAGhC,IAAA,MAAM,CAAC,SAAe,EAAA;AACpB,QAAA,IAAI,QAAQ,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC;AAElC,QAAA,IAAI,IAAI,CAAC,gBAAgB,KAAK,MAAM,EAAE;YACpC,QAAQ,GAAG,SAAS,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;;AACzC,aAAA,IAAI,IAAI,CAAC,gBAAgB,KAAK,QAAQ,EAAE;YAC7C,QAAQ,GAAG,SAAS,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;;QAG/C,IAAI,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;AAC9B,QAAA,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC;AACvB,QAAA,IAAI,CAAC,QAAQ,GAAG,KAAK;AACrB,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC;QAE/B,UAAU,CAAC,MAAK;AACd,YAAA,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC1B,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC;AACjC,YAAA,IAAI,CAAC,QAAQ,GAAG,KAAK;AACrB,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC;SAChC,EAAE,GAAG,CAAC;;AAGT,IAAA,MAAM,CAAC,QAAc,EAAA;AACnB,QAAA,IAAI,QAAQ,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC;AAEjC,QAAA,IAAI,IAAI,CAAC,gBAAgB,KAAK,MAAM,EAAE;YACpC,QAAQ,GAAG,SAAS,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC;;AACxC,aAAA,IAAI,IAAI,CAAC,gBAAgB,KAAK,QAAQ,EAAE;YAC7C,QAAQ,GAAG,SAAS,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;;QAG9C,IAAI,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;;AAE9B,QAAA,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC;AACpB,QAAA,IAAI,CAAC,QAAQ,GAAG,KAAK;AACrB,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC;QAEhC,UAAU,CAAC,MAAK;AACd,YAAA,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;AAE1B,YAAA,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;AAClB,YAAA,IAAI,CAAC,QAAQ,GAAG,KAAK;AACrB,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC;;SAEhC,EAAE,GAAG,CAAC;;mIA/KE,eAAe,GAAA,CAAA,EAAA,CAAA;sGAAf,eAAe,EAAA,OAAA,EAAf,eAAe,CAAA,IAAA,EAAA,UAAA,EAFd,MAAM,EAAA,CAAA,CAAA;;iFAEP,eAAe,EAAA,CAAA;cAH3B,UAAU;AAAC,QAAA,IAAA,EAAA,CAAA;AACV,gBAAA,UAAU,EAAE,MAAM;AACnB,aAAA;;;MCAY,YAAY,CAAA;IAIvB,WACU,CAAA,QAA0B,EAC1B,SAA2B,EAAA;QAD3B,IAAQ,CAAA,QAAA,GAAR,QAAQ;QACR,IAAS,CAAA,SAAA,GAAT,SAAS;QALnB,IAAO,CAAA,OAAA,GAAe,IAAI;QAC1B,IAAS,CAAA,SAAA,GAAG,KAAK;;IASjB,IAAa,GAAG,CAAC,IAAU,EAAA;QACzB,IAAI,CAAC,OAAO,GAAG;AACb,YAAA,SAAS,EAAE,IAAI;SAChB;;IAGH,QAAQ,GAAA;QACN,IAAI,CAAC,OAAO,GAAG;YACb,SAAS,EAAE,IAAI,CAAC,IAAI;YACpB,IAAI,EAAE,IAAI,CAAC,IAAI;SAChB;;gIArBQ,YAAY,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,gBAAA,CAAA,CAAA,CAAA,EAAA,CAAA;mGAAZ,YAAY,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,EAAA,QAAA,EAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,CAAA,CAAA,EAAA,YAAA,EAAA,MAAA,CAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,CAAA,CAAA;;iFAAZ,YAAY,EAAA,CAAA;cALxB,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,UAAU;AACpB,gBAAA,UAAU,EAAE,IAAI;;AAEjB,aAAA;2EAUsB,IAAI,EAAA,CAAA;kBAAxB,KAAK;mBAAC,YAAY;YAEN,GAAG,EAAA,CAAA;kBAAf;;;MCVU,YAAY,CAAA;AAEvB,IAAA,WAAA,CAAoB,eAAgC,EAAA;QAAhC,IAAe,CAAA,eAAA,GAAf,eAAe;;AAEnC,IAAA,QAAQ,CAAC,IAAU,EAAA;QACjB,MAAM,WAAW,GAAG,IAAI,IAAI,CAC1B,IAAI,CAAC,WAAW,EAAE,EAClB,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,EACnB,CAAC,CACF,CAAC,OAAO,EAAE;AAEX,QAAA,IAAI,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS;QAE9C,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CACzB,CAAC,WAAW,GAAG,SAAS,CAAC,eAAe,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,CAC/D;QAED,MAAM,KAAK,GAAG,EAAE;AAChB,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;AAClC,YAAA,MAAM,aAAa,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC;YACpC,aAAa,CAAC,OAAO,CACnB,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,eAAe,CAAC,IAAI,EAAE,SAAS,CAAC,CACpE;AACD,YAAA,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC;;AAG3B,QAAA,OAAO,KAAK;;gIA1BH,YAAY,EAAA,EAAA,CAAA,QAAA,CAAAA,eAAA,CAAA,CAAA,CAAA,EAAA,CAAA;sGAAZ,YAAY,EAAA,OAAA,EAAZ,YAAY,CAAA,IAAA,EAAA,UAAA,EAFX,MAAM,EAAA,CAAA,CAAA;;iFAEP,YAAY,EAAA,CAAA;cAHxB,UAAU;AAAC,QAAA,IAAA,EAAA,CAAA;AACV,gBAAA,UAAU,EAAE;AACb,aAAA;;;MCDY,WAAW,CAAA;AAEtB,IAAA,WAAA,GAAA;AAEA,IAAA,OAAO,CAAC,IAAU,EAAA;QAChB,MAAM,SAAS,GAAG,CAAC;QACnB,MAAM,IAAI,GAAG,EAAE;AAEf,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;AAClC,YAAA,MAAM,OAAO,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC;YAC9B,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;AACtC,YAAA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;;AAGpB,QAAA,OAAO,IAAI;;+HAdF,WAAW,GAAA,CAAA,EAAA,CAAA;sGAAX,WAAW,EAAA,OAAA,EAAX,WAAW,CAAA,IAAA,EAAA,UAAA,EAFV,MAAM,EAAA,CAAA,CAAA;;iFAEP,WAAW,EAAA,CAAA;cAHvB,UAAU;AAAC,QAAA,IAAA,EAAA,CAAA;AACV,gBAAA,UAAU,EAAE;AACb,aAAA;;;MCGY,UAAU,CAAA;AAErB,IAAA,WAAA,CAAoB,eAAgC,EAAA;QAAhC,IAAe,CAAA,eAAA,GAAf,eAAe;;AAE3B,IAAA,aAAa,CAAC,IAAU,EAAA;QAC9B,MAAM,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,KAAK;QAC9D,IAAI,CAAC,aAAa,EAAE;AAClB,YAAA,OAAO,KAAK;;QAEd,IACE,aAAa,CAAC,KAAK;AACnB,YAAA,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC;YAC9B,aAAa,CAAC,KAAK,CAAC,IAAI,CACtB,CAAC,WAAW,KAAK,WAAW,CAAC,OAAO,EAAE,KAAK,IAAI,CAAC,OAAO,EAAE,CAC1D,EACD;AACA,YAAA,OAAO,IAAI;;AAEb,QAAA,IAAI,aAAa,CAAC,KAAK,IAAI,aAAa,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE;AACzE,YAAA,OAAO,IAAI;;QAEb,IACE,aAAa,CAAC,MAAM;YACpB,aAAa,CAAC,MAAM,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,EAC/C;AACA,YAAA,OAAO,IAAI;;AAEb,QAAA,OAAO,KAAK;;AAGd,IAAA,SAAS,CAAC,IAAU,EAAA;QAClB,IAAI,CAAC,GAAG,GAAG;AACT,YAAA,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;AACpC,YAAA,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;AAChE,YAAA,UAAU,EAAE,KAAK;AACjB,YAAA,SAAS,EAAE,KAAK;AAChB,YAAA,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;AACpC,YAAA,IAAI,EAAE,IAAI;SACX;QAED,OAAO,IAAI,CAAC,GAAG;;AAGjB,IAAA,aAAa,CAAC,IAAU,EAAA;AACtB,QAAA,IACE,IAAI,CAAC,eAAe,CAAC,UAAU,KAAK,QAAQ;YAC5C,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC;AACpD,YAAA,IAAI,CAAC,OAAO,EAAE,IAAI,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE;AACvE,YAAA,IAAI,CAAC,OAAO,EAAE,IAAI,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,EACvE;AACA,YAAA,OAAO,IAAI;;AAEb,QAAA,OAAO,KAAK;;IAGd,MAAM,GAAA;QACJ,OAAO,IAAI,CAAC,GAAG;;IAGjB,UAAU,CAAC,CAAC,EAAE,CAAC,EAAA;QACb,IAAI,CAAC,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,OAAO,EAAE;AAAE,YAAA,OAAO,CAAC;QACvC,IAAI,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,OAAO,EAAE;AAAE,YAAA,OAAO,CAAC;QACxC,IAAI,CAAC,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,OAAO,EAAE;YAAE,OAAO,CAAC,CAAC;;IAG1C,UAAU,GAAA;AACR,QAAA,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC;AAEjC,QAAA,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC;AACpC,YAAA,GAAG,EAAE,SAAS,CAAC,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE;YACtD,GAAG,EAAE,IAAI,CAAC,GAAG;AACd,SAAA,CAAC;QAEF,IAAI,IAAI,CAAC,eAAe,CAAC,UAAU,KAAK,QAAQ,EAAE;AAChD,YAAA,IAAI,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;AACvD,gBAAA,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;;;aAErD,IAAI,IAAI,CAAC,eAAe,CAAC,UAAU,KAAK,UAAU,EAAE;AACzD,YAAA,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE;AACvB,gBAAA,IAAI,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CACjE,CAAC,IAAI,KAAK,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CACrE;AACD,gBAAA,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;gBACnC,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC;;iBACjD;gBACL,IAAI,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,KAAK;gBAC5D,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;gBACjC,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC;;;aAEnD,IAAI,IAAI,CAAC,eAAe,CAAC,UAAU,KAAK,QAAQ,EAAE;AACvD,YAAA,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE;AACvB,gBAAA,IAAI,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CACjE,CAAC,IAAI,KAAK,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CACrE;gBACD,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC;;iBACjD;AACL,gBAAA,IAAI,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;AACxD,oBAAA,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;;AACnD,qBAAA,IAAI,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC9D,IAAI,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,KAAK;oBAC5D,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;AAEjC,oBAAA,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;;oBAGnC,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC;;;;;8HAzGnD,UAAU,EAAA,EAAA,CAAA,QAAA,CAAAA,eAAA,CAAA,CAAA,CAAA,EAAA,CAAA;sGAAV,UAAU,EAAA,OAAA,EAAV,UAAU,CAAA,IAAA,EAAA,UAAA,EAFT,MAAM,EAAA,CAAA,CAAA;;iFAEP,UAAU,EAAA,CAAA;cAHtB,UAAU;AAAC,QAAA,IAAA,EAAA,CAAA;AACV,gBAAA,UAAU,EAAE,MAAM;AACnB,aAAA;;;;;;ICGO,EAAwC,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA;IACpC,EACJ,CAAA,MAAA,CAAA,CAAA,CAAA;;IAAA,EAAO,CAAA,YAAA,EAAA;;;IADH,EACJ,CAAA,SAAA,EAAA;IADI,EACJ,CAAA,kBAAA,CAAA,GAAA,EAAA,EAAA,CAAA,WAAA,CAAA,CAAA,EAAA,CAAA,EAAA,MAAA,CAAA,UAAA,CAAA,GAAA,CAAA,IAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA;;;;;IAXJ,EAQG,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA;AARsC,IAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,oDAAA,GAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAA,EAAA,CAAA,WAAA,CAAS,gBAAS,CAAC,CAAA,EAAA,CAAA;IASxD,EAAwC,CAAA,UAAA,CAAA,CAAA,EAAA,sCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA;IAGxC,EAAoB,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA;IAChB,EAAkB,CAAA,UAAA,CAAA,CAAA,EAAA,6CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,sBAAA,CAAA;AAE1B,IADI,iBAAM,EACJ;;;IAfuD,EAQ3D,CAAA,UAAA,CAAA,SAAA,EAAA,EAAA,CAAA,eAAA,CAAA,CAAA,EAAAC,KAAA,EAAA,MAAA,CAAA,UAAA,CAAA,GAAA,CAAA,UAAA,EAAA,MAAA,CAAA,UAAA,CAAA,GAAA,CAAA,UAAA,EAAA,MAAA,CAAA,UAAA,CAAA,GAAA,CAAA,SAAA,EAAA,MAAA,CAAA,UAAA,CAAA,GAAA,CAAA,UAAA,EAAA,MAAA,CAAA,aAAA,EAAA,KAAA,QAAA,EAAA,MAAA,CAAA,sBAAA,EAAA,KAAA,KAAA,EAAA,MAAA,CAAA,sBAAA,EAAA,KAAA,OAAA,CAAA,CAAA;IACS,EAAmB,CAAA,SAAA,EAAA;IAAnB,EAAmB,CAAA,UAAA,CAAA,MAAA,EAAA,CAAA,MAAA,CAAA,YAAA,CAAA;;MCerB,gBAAgB,CAAA;IAS3B,WACS,CAAA,UAAsB,EACrB,eAAgC,EAAA;QADjC,IAAU,CAAA,UAAA,GAAV,UAAU;QACT,IAAe,CAAA,eAAA,GAAf,eAAe;;IAGzB,oBAAoB,GAAA;AAClB,QAAA,IAAI,gBAAgB,GAAG,IAAI,CAAC,QAAQ;QACpC,gBAAgB,CAAC,KAAK,EAAE;AACxB,QAAA,gBAAgB,CAAC,kBAAkB,CAChC,IAAI,CAAC,YAAoB,CAAC,QAAQ,EAClC,IAAI,CAAC,YAAoB,CAAC,OAAO,CACnC;;IAGH,sBAAsB,GAAA;AACpB,QAAA,IAAI,IAAI,CAAC,aAAa,EAAE,KAAK,QAAQ,EAAE;YACrC,IAAI,IAAI,CAAC,gBAAgB,EAAE,CAAC,MAAM,IAAI,CAAC,EAAE;gBACvC,IAAI,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;AAChF,oBAAA,OAAO,OAAO;;qBACT,IAAI,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;AACvF,oBAAA,OAAO,KAAK;;;;AAIlB,QAAA,OAAO,KAAK;;IAGd,gBAAgB,GAAA;AACd,QAAA,OAAO,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,KAAK;;IAGjD,aAAa,GAAA;AACX,QAAA,OAAO,IAAI,CAAC,eAAe,CAAC,UAAU;;IAGxC,eAAe,GAAA;QACb,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,QAAQ,EAAE;YACtC,IAAI,CAAC,oBAAoB,EAAE;;;;IAK/B,QAAQ,GAAA;QACN,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;AACpC,QAAA,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,IAAI,KAAI;AAC/D,YAAA,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACvD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAC5C,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAC3C;YACD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAC5D,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CACzB;AACH,SAAC,CAAC;;AAGJ,IAAA,aAAa;IAEb,WAAW,GAAA;QACT,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,QAAQ,EAAE;YACtC,IAAI,CAAC,oBAAoB,EAAE;;;IAI/B,OAAO,GAAA;QACL,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,GAAG,IAAI;;IAEvE,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE;;oIA5Eb,gBAAgB,EAAA,EAAA,CAAA,iBAAA,CAAAC,UAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAAC,eAAA,CAAA,CAAA,CAAA,EAAA,CAAA;mGAAhB,gBAAgB,EAAA,SAAA,EAAA,CAAA,CAAA,cAAA,CAAA,CAAA,EAAA,SAAA,EAAA,SAAA,sBAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;qCAIc,gBAAgB,CAAA;;;;AAN9C,SAAA,EAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,SAAA,EAAA,WAAA,EAAA,YAAA,EAAA,cAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAAA,CAAC,UAAU,CAAC,CAAA,EAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,KAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA,SAAA,CAAA,EAAA,CAAA,OAAA,EAAA,WAAA,EAAA,CAAA,EAAA,SAAA,EAAA,OAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,CAAA,EAAA,WAAA,EAAA,CAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,OAAA,EAAA,KAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,CAAA,EAAA,QAAA,CAAA,EAAA,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,yBAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;YDvBzB,EAAqB,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA;YACjB,EAQG,CAAA,UAAA,CAAA,CAAA,EAAA,+BAAA,EAAA,CAAA,EAAA,EAAA,EAAA,KAAA,EAAA,CAAA,CAAA;YAQP,EAAM,CAAA,YAAA,EAAA;;YAhBsB,EAAe,CAAA,SAAA,EAAA;YAAf,EAAe,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,SAAA,CAAA;4BCmB/B,YAAY,EAAAC,EAAA,CAAA,OAAA,EAAAA,EAAA,CAAA,IAAA,EAAAA,EAAA,CAAA,QAAA,CAAA,EAAA,aAAA,EAAA,CAAA,EAAA,CAAA,CAAA;;iFAKX,gBAAgB,EAAA,CAAA;cAR5B,SAAS;2BACE,cAAc,EAAA,UAAA,EACZ,IAAI,EACP,OAAA,EAAA,CAAC,YAAY,CAAC,EAAA,SAAA,EAGZ,CAAC,UAAU,CAAC,EAAA,QAAA,EAAA,orBAAA,EAAA;mEAGd,IAAI,EAAA,CAAA;kBAAZ;YACQ,SAAS,EAAA,CAAA;kBAAjB;YACQ,YAAY,EAAA,CAAA;kBAApB;YAED,QAAQ,EAAA,CAAA;kBADP,SAAS;mBAAC,KAAK,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,gBAAgB,EAAE;;kFAJhD,gBAAgB,EAAA,EAAA,SAAA,EAAA,kBAAA,EAAA,QAAA,EAAA,oCAAA,EAAA,UAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;;ICzB7B,EAA2C,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA;IACvC,EAEe,CAAA,SAAA,CAAA,CAAA,EAAA,cAAA,EAAA,CAAA,CAAA;IACnB,EAAM,CAAA,YAAA,EAAA;;;;IAHY,EAAsC,CAAA,SAAA,EAAA;IAAtC,EAAsC,CAAA,UAAA,CAAA,cAAA,EAAA,MAAA,CAAA,eAAA,CAAA,OAAA,CAAA,CAAA,CAAA,MAAA,EAAA,OAAA,CAAc,CAC8C,WAAA,EAAA,OAAA,CAAA,QAAA,EAAA,KAAA,MAAA,CAAA,cAAA,CAAA,QAAA,EAAA,IAAA,OAAA,CAAA,WAAA,EAAA,KAAA,MAAA,CAAA,cAAA,CAAA,WAAA,EAAA,CAAA;;MCYvG,iBAAiB,CAAA;AAK5B,IAAA,WAAA,CAAoB,WAAwB,EAAA;QAAxB,IAAW,CAAA,WAAA,GAAX,WAAW;;IAE/B,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;;AAGlD,IAAA,eAAe,CAAC,IAAU,EAAA;QACxB,IAAI,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAC/B,CAAC,SAAuB,KAAK,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,IAAI,CAAC,OAAO,EAAE,CACzE;AACD,QAAA,OAAO,GAAG;;qIAfD,iBAAiB,EAAA,EAAA,CAAA,iBAAA,CAAAC,WAAA,CAAA,CAAA,CAAA,EAAA,CAAA;mGAAjB,iBAAiB,EAAA,SAAA,EAAA,CAAA,CAAA,eAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,aAAA,EAAA,eAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAFjB,CAAC,WAAW,CAAC,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,OAAA,EAAA,IAAA,EAAA,CAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAAA,IAAA,CAAA,EAAA,CAAA,CAAA,EAAA,cAAA,EAAA,MAAA,EAAA,WAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,0BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;YDZ1B,EAA2C,CAAA,UAAA,CAAA,CAAA,EAAA,gCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA;;YAArB,EAAQ,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,KAAA,CAAA;ACSlB,SAAA,EAAA,EAAA,YAAA,EAAA,CAAA,YAAY,cAAE,gBAAgB,CAAA,EAAA,aAAA,EAAA,CAAA,EAAA,CAAA,CAAA;;iFAK7B,iBAAiB,EAAA,CAAA;cAR7B,SAAS;2BACE,eAAe,EAAA,UAAA,EACb,IAAI,EAAA,OAAA,EACP,CAAC,YAAY,EAAE,gBAAgB,CAAC,EAAA,SAAA,EAG9B,CAAC,WAAW,CAAC,EAAA,QAAA,EAAA,mRAAA,EAAA;yCAGf,IAAI,EAAA,CAAA;kBAAZ;YACQ,cAAc,EAAA,CAAA;kBAAtB;YACQ,aAAa,EAAA,CAAA;kBAArB;;kFAHU,iBAAiB,EAAA,EAAA,SAAA,EAAA,mBAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,UAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;;;;ICRlB,EAAqD,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA;IAAA,EAAwB,CAAA,MAAA,CAAA,CAAA,CAAA;;IAAA,EAAM,CAAA,YAAA,EAAA;;;IAA9B,EAAwB,CAAA,SAAA,EAAA;IAAxB,EAAwB,CAAA,iBAAA,CAAA,EAAA,CAAA,WAAA,CAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,QAAA,CAAA,CAAA;;;IAEjF,EAGgB,CAAA,SAAA,CAAA,CAAA,EAAA,eAAA,EAAA,CAAA,CAAA;;;;AADZ,IAF+C,EAAsB,CAAA,UAAA,CAAA,MAAA,EAAA,gBAAA,CAAA,CAAA,eAAA,EAAA,MAAA,CAAA,oBAAA,CAAA,gBAAA,CAAA,CAChB,+BAAwB,CACvB,SAAA,EAAA,EAAA,CAAA,eAAA,CAAA,CAAA,EAAAJ,KAAA,EAAA,MAAA,CAAA,QAAA,GAAA,QAAA,GAAA,KAAA,CAAA,CAAA;;MCgBrD,kBAAkB,CAAA;IAc7B,WACU,CAAA,YAA0B,EAC1B,eAAgC,EAAA;QADhC,IAAY,CAAA,YAAA,GAAZ,YAAY;QACZ,IAAe,CAAA,eAAA,GAAf,eAAe;AAJzB,QAAA,IAAA,CAAA,GAAG,GAAiB,IAAI,YAAY,EAAE;;IAOtC,SAAS,GAAA;QACP,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC;;IAG/C,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,GAAG,CAAC,GAAG,CACV,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,IAAI,KAAI;AACpD,YAAA,IAAI,CAAC,aAAa,GAAG,IAAI;SAC1B,CAAC,CACH;AACD,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;QAElD,IAAI,QAAQ,GAAG,EAAE;AACjB,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAC1B,YAAA,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAS,EAAE,CAAC,CAAC,CAAC;;AAE/D,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ;;IAG1B,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE;;AAGxB,IAAA,oBAAoB,CAAC,aAAmB,EAAA;QACtC,aAAa,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAClC,QAAA,MAAM,WAAW,GAAG,IAAI,IAAI,CAAC,aAAa,CAAC;QAC3C,WAAW,CAAC,OAAO,CAAC,aAAa,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;QAChD,WAAW,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAChC,IAAI,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CACxC,CAAC,SAAS,KACR,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,aAAa,CAAC,OAAO,EAAE;YACnD,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,WAAW,CAAC,OAAO,EAAE,CACnD;AACD,QAAA,OAAO,UAAU;;sIApDR,kBAAkB,EAAA,EAAA,CAAA,iBAAA,CAAAK,YAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAAH,eAAA,CAAA,CAAA,CAAA,EAAA,CAAA;mGAAlB,kBAAkB,EAAA,SAAA,EAAA,CAAA,CAAA,gBAAA,CAAA,CAAA,EAAA,SAAA,EAAA,SAAA,wBAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;;;;;;YAAlB,EAAkB,CAAA,UAAA,CAAA,GAAA,CAAA,OAAA,CAAA;AAFlB,SAAA,EAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,UAAA,EAAA,YAAA,EAAA,QAAA,EAAA,UAAA,EAAA,aAAA,EAAA,eAAA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,EAAA,SAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAAA,CAAC,YAAY,CAAC,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,CAAA,CAAA,MAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA,aAAA,EAAA,CAAA,EAAA,OAAA,CAAA,EAAA,CAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAAA,SAAA,EAAA,MAAA,EAAA,CAAA,EAAA,SAAA,CAAA,EAAA,CAAA,OAAA,EAAA,cAAA,EAAA,CAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,eAAA,EAAA,gBAAA,EAAA,SAAA,EAAA,CAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAAA,cAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,eAAA,EAAA,gBAAA,EAAA,SAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,2BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;;ADvBvB,YADJ,oCAAwD,CACL,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA;AAAtB,YAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,gDAAA,GAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,OAAA,EAAA,CAAA,WAAA,CAAS,eAAW,CAAC,CAAA,EAAA,CAAA;YAC1C,EACJ,CAAA,MAAA,CAAA,CAAA,CAAA;;YAAA,EAAM,CAAA,YAAA,EAAA;AAEF,YADJ,8BAA6E,CACY,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA;YACjF,EAAqD,CAAA,UAAA,CAAA,CAAA,EAAA,iCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA;YACzD,EAAM,CAAA,YAAA,EAAA;YACN,EAE2D,CAAA,UAAA,CAAA,CAAA,EAAA,2CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,CAAA,CAAA;AAGnE,YADI,iBAAM,EACJ;;YAbK,EAA4C,CAAA,sBAAA,CAAA,qBAAA,EAAA,GAAA,CAAA,aAAA,EAAA,EAAA,CAAA;YAE/C,EACJ,CAAA,SAAA,CAAA,CAAA,CAAA;YADI,EACJ,CAAA,kBAAA,CAAA,GAAA,EAAA,EAAA,CAAA,WAAA,CAAA,CAAA,EAAA,CAAA,EAAA,GAAA,CAAA,IAAA,EAAA,WAAA,CAAA,EAAA,GAAA,CAAA;YACsB,EAAsD,CAAA,SAAA,CAAA,CAAA,CAAA;YAAtD,EAAsD,CAAA,UAAA,CAAA,SAAA,EAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAAF,KAAA,EAAA,GAAA,CAAA,QAAA,GAAA,KAAA,GAAA,QAAA,CAAA,CAAA;YACnE,EAAwD,CAAA,SAAA,EAAA;YAAxD,EAAwD,CAAA,UAAA,CAAA,SAAA,EAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAAA,KAAA,EAAA,GAAA,CAAA,QAAA,GAAA,QAAA,GAAA,KAAA,CAAA,CAAA;YACtC,EAAW,CAAA,SAAA,EAAA;YAAX,EAAW,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,QAAA,CAAA;YAEO,EAAQ,CAAA,SAAA,EAAA;YAAR,EAAQ,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,KAAA,CAAA;ACa7C,SAAA,EAAA,EAAA,YAAA,EAAA,CAAA,YAAY,uCAAE,iBAAiB,CAAA,EAAA,aAAA,EAAA,CAAA,EAAA,CAAA,CAAA;;iFAK9B,kBAAkB,EAAA,CAAA;cAR9B,SAAS;2BACE,gBAAgB,EAAA,UAAA,EACd,IAAI,EAAA,OAAA,EACP,CAAC,YAAY,EAAE,iBAAiB,CAAC,EAAA,SAAA,EAG/B,CAAC,YAAY,CAAC,EAAA,QAAA,EAAA,mwBAAA,EAAA;qEAGhB,IAAI,EAAA,CAAA;kBAAZ;YACQ,UAAU,EAAA,CAAA;kBAAlB;YACQ,QAAQ,EAAA,CAAA;kBAAhB;YACQ,aAAa,EAAA,CAAA;kBAArB;YAE+B,OAAO,EAAA,CAAA;kBAAtC;;kBAAU,WAAW;mBAAC,OAAO;YACO,WAAW,EAAA,CAAA;kBAA/C,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA,MAAM,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;;kFAPxB,kBAAkB,EAAA,EAAA,SAAA,EAAA,oBAAA,EAAA,QAAA,EAAA,wCAAA,EAAA,UAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;;;IChBnB,EAA8E,CAAA,SAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA;;;;IAHlF,EAA0D,CAAA,uBAAA,CAAA,CAAA,CAAA;IACtD,EAAiD,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA;AAA1B,IAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,iEAAA,GAAA,EAAA,MAAA,QAAA,GAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,SAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAA,EAAA,CAAA,WAAA,CAAS,yBAAe,CAAC,CAAA,EAAA,CAAA;IAC5C,EAAwB,CAAA,MAAA,CAAA,CAAA,CAAA;;IAAA,EAAM,CAAA,YAAA,EAAA;IAClC,EAAwE,CAAA,UAAA,CAAA,CAAA,EAAA,kDAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA;;;;;IADpE,EAAwB,CAAA,SAAA,CAAA,CAAA,CAAA;IAAxB,EAAwB,CAAA,kBAAA,CAAA,GAAA,EAAA,EAAA,CAAA,WAAA,CAAA,CAAA,EAAA,CAAA,EAAA,QAAA,EAAA,KAAA,CAAA,EAAA,EAAA,CAAA;IACtB,EAAgC,CAAA,SAAA,CAAA,CAAA,CAAA;IAAhC,EAAgC,CAAA,UAAA,CAAA,MAAA,EAAA,CAAA,IAAA,GAAA,CAAA,IAAA,CAAA,KAAA,CAAA,IAAA,IAAA,IAAA,CAAA,IAAA,IAAA,IAAA,EAAA,CAAA;;MCErC,oBAAoB,CAAA;AAC/B,IAAA,WAAA,CAAoB,eAAgC,EAAA;QAAhC,IAAe,CAAA,eAAA,GAAf,eAAe;QAInC,IAAM,CAAA,MAAA,GAAG,EAAE;;IAGX,QAAQ,GAAA;AACN,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;YAC3B,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;AAC9B,YAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAChB,IAAI,GAAG,SAAS,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC;AACrC,YAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;;QAGxB,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,IAAG;AAClD,YAAA,IAAI,CAAC,aAAa,GAAG,IAAI;AAC3B,SAAC,CAAC;;AAGJ,IAAA,QAAQ,CAAC,KAAW,EAAA;AAClB,QAAA,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,KAAK,CAAC;;wIAtBjC,oBAAoB,EAAA,EAAA,CAAA,iBAAA,CAAAD,eAAA,CAAA,CAAA,CAAA,EAAA,CAAA;mGAApB,oBAAoB,EAAA,SAAA,EAAA,CAAA,CAAA,kBAAA,CAAA,CAAA,EAAA,SAAA,EAAA,SAAA,0BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;;;;;;ADV7B,YAFJ,iCACiD,CACpB,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA;YACrB,EACJ,CAAA,MAAA,CAAA,CAAA,CAAA;;YAAA,EAAM,CAAA,YAAA,EAAA;YACN,EAAyE,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA;YAErE,EAA0D,CAAA,UAAA,CAAA,CAAA,EAAA,4CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,cAAA,EAAA,CAAA,CAAA;AAOlE,YADI,iBAAM,EACJ;;YAbF,EAA4C,CAAA,sBAAA,CAAA,qBAAA,EAAA,GAAA,CAAA,aAAA,EAAA,EAAA,CAAA;YAExC,EACJ,CAAA,SAAA,CAAA,CAAA,CAAA;YADI,EACJ,CAAA,kBAAA,CAAA,GAAA,EAAA,EAAA,CAAA,WAAA,CAAA,CAAA,EAAA,CAAA,EAAA,GAAA,CAAA,IAAA,EAAA,MAAA,CAAA,EAAA,GAAA,CAAA;YAGoC,EAAW,CAAA,SAAA,CAAA,CAAA,CAAA;YAAX,EAAW,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,MAAA,CAAA;4BCCvC,YAAY,EAAA,EAAA,CAAA,OAAA,EAAA,EAAA,CAAA,IAAA,EAAA,EAAA,CAAA,QAAA,CAAA,EAAA,aAAA,EAAA,CAAA,EAAA,CAAA,CAAA;;iFAIX,oBAAoB,EAAA,CAAA;cAPhC,SAAS;AACE,QAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,kBAAkB,EAChB,UAAA,EAAA,IAAI,EACP,OAAA,EAAA,CAAC,YAAY,CAAC,EAAA,QAAA,EAAA,gnBAAA,EAAA;6CAOd,IAAI,EAAA,CAAA;kBAAZ;YACoC,WAAW,EAAA,CAAA;kBAA/C,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA,MAAM,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;;kFAJxB,oBAAoB,EAAA,EAAA,SAAA,EAAA,sBAAA,EAAA,QAAA,EAAA,4CAAA,EAAA,UAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;MCFpB,mBAAmB,CAAA;AAE9B,IAAA,WAAA,GAAA;IAEA,QAAQ,GAAA;;uIAJG,mBAAmB,GAAA,CAAA,EAAA,CAAA;mGAAnB,mBAAmB,EAAA,SAAA,EAAA,CAAA,CAAA,iBAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,SAAA,4BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;YCVhC,EAAG,CAAA,cAAA,CAAA,CAAA,EAAA,GAAA,CAAA;YAAA,EAAkB,CAAA,MAAA,CAAA,CAAA,EAAA,oBAAA,CAAA;YAAA,EAAI,CAAA,YAAA,EAAA;4BDMb,YAAY,CAAA,EAAA,aAAA,EAAA,CAAA,EAAA,CAAA,CAAA;;iFAIX,mBAAmB,EAAA,CAAA;cAP/B,SAAS;AACE,QAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,iBAAiB,EACf,UAAA,EAAA,IAAI,EACP,OAAA,EAAA,CAAC,YAAY,CAAC,EAAA,QAAA,EAAA,6BAAA,EAAA;;kFAIZ,mBAAmB,EAAA,EAAA,SAAA,EAAA,qBAAA,EAAA,QAAA,EAAA,0CAAA,EAAA,UAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;;;;;IEPpB,EAA+F,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA;AAA7B,IAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,4DAAA,GAAA,EAAA,MAAA,OAAA,GAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,SAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAA,EAAA,CAAA,WAAA,CAAS,4BAAkB,CAAC,CAAA,EAAA,CAAA;IAC1F,EAAc,CAAA,MAAA,CAAA,CAAA,CAAA;IAAA,EAAM,CAAA,YAAA,EAAA;;;IAApB,EAAc,CAAA,SAAA,EAAA;IAAd,EAAc,CAAA,kBAAA,CAAA,GAAA,EAAA,OAAA,CAAA,KAAA,EAAA,EAAA,CAAA;;;IAFtB,EAAwD,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA;IACpD,EAA+F,CAAA,UAAA,CAAA,CAAA,EAAA,uCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA;IAEnG,EAAM,CAAA,YAAA,EAAA;;;IAFoB,EAAa,CAAA,SAAA,EAAA;IAAb,EAAa,CAAA,UAAA,CAAA,SAAA,EAAA,MAAA,CAAA,OAAA,CAAA;;;IAQ/B,EAEiB,CAAA,SAAA,CAAA,CAAA,EAAA,gBAAA,EAAA,EAAA,EAAA,CAAA,CAAA;;;;IAF2C,EAAa,CAAA,UAAA,CAAA,MAAA,EAAA,OAAA,CAAA,CAAA,UAAA,EAAA,MAAA,CAAA,QAAA,CAAsB,CAC9C,eAAA,EAAA,MAAA,CAAA,qBAAA,CAAA,OAAA,CAAA,CAAA;;;IAFrD,EAA2D,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA;IACvD,EACkD,CAAA,UAAA,CAAA,CAAA,EAAA,kDAAA,EAAA,CAAA,EAAA,CAAA,EAAA,gBAAA,EAAA,EAAA,CAAA;IAEtD,EAAM,CAAA,YAAA,EAAA;;;IAH+B,EAAiB,CAAA,SAAA,EAAA;IAAjB,EAAiB,CAAA,UAAA,CAAA,SAAA,EAAA,MAAA,CAAA,WAAA,EAAA,CAAA;;;IAMlD,EACmB,CAAA,SAAA,CAAA,CAAA,EAAA,kBAAA,EAAA,EAAA,EAAA,CAAA,CAAA;;;IAD2C,EAAa,CAAA,UAAA,CAAA,MAAA,EAAA,OAAA,CAAA;;;IAD/E,EAAkG,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA;IAC9F,EAA4E,CAAA,UAAA,CAAA,CAAA,EAAA,oDAAA,EAAA,CAAA,EAAA,CAAA,EAAA,kBAAA,EAAA,EAAA,CAAA;IAEhF,EAAM,CAAA,YAAA,EAAA;;;IAFiC,EAAiB,CAAA,SAAA,EAAA;IAAjB,EAAiB,CAAA,UAAA,CAAA,SAAA,EAAA,MAAA,CAAA,WAAA,EAAA,CAAA;;MC8BvD,kBAAkB,CAAA;IA6F7B,WACU,CAAA,eAAgC,EAChC,GAAsB,EAAA;QADtB,IAAe,CAAA,eAAA,GAAf,eAAe;QACf,IAAG,CAAA,GAAA,GAAH,GAAG;AAxFb;;;AAGK;QACI,IAAa,CAAA,aAAA,GAAW,EAAE;AACzB,QAAA,IAAA,CAAA,mBAAmB,GAAG,IAAI,YAAY,EAAU;AAE1D;;;AAGG;AACO,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,YAAY,EAAO;AAkC9C;;;AAGG;QACM,IAAS,CAAA,SAAA,GAAW,CAAC;AAE9B;;;AAGG;AACM,QAAA,IAAA,CAAA,QAAQ,GAAa,CAAC,CAAC,EAAE,CAAC,CAAC;QA6BpC,IAAa,CAAA,aAAA,GAAmB,EAAE;;IAO1B,eAAe,GAAA;AACrB,QAAA,IAAI,IAAI,CAAC,sBAAsB,EAAE;YAC/B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,sBAAsB,CAAC,OAAO,EAAE;YAC1D,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,KAAI;AACrD,gBAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,EAAE;AACrC,aAAC,CAAC;;;IAIN,kBAAkB,GAAA;;;IAIlB,eAAe,GAAA;QACb,IAAI,CAAC,eAAe,EAAE;;AAGxB,IAAA,qBAAqB,CAAC,IAAU,EAAA;QAC9B,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,CAC9B,CAAC,SAAuB,KACtB,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,IAAI,CAAC,QAAQ,EAAE;YAC7C,SAAS,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,IAAI,CAAC,WAAW,EAAE,CACtD;;AAGH,IAAA,YAAY,CAAC,OAAgB,EAAA;AAC3B,QAAA,IAAI,CAAC,eAAe,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU;QACtE,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;;IAGhE,YAAY,GAAA;QACV,IAAI,KAAK,GAAG,CAAC;AACb,QAAA,IAAI,CAAC;cACD,IAAI,CAAC;AACF,iBAAA,OAAO;AACP,iBAAA,GAAG,CAAC,CAAC,IAAI,MAAM,KAAK,IAAI,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,WAAW,CAAC;cACtE,IAAI;AACR,QAAA,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,KAAK,KAAK,MAAM;AACnD,YAAA,IAAI,CAAC,eAAe,CAAC,gBAAgB,KAAK;AACxC,eAAG,IAAI,CAAC,KAAK,GAAG,KAAK;cACnB,IAAI;AAER,QAAA,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE;;IAG1B,kBAAkB,GAAA;QAChB,IAAI,CAAC,YAAY,EAAE;;IAGrB,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;AACnB,YAAA,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE;;QAG7B,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,IAAI,KAAI;AACpD,YAAA,IAAI,IAAI,KAAK,MAAM,EAAE;gBACnB,UAAU,CAAC,MAAM,IAAI,CAAC,YAAY,EAAE,EAAE,EAAE,CAAC;;AAE7C,SAAC,CAAC;QAEF,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,IAAI,KAAI;AACpD,YAAA,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC;AACrC,SAAC,CAAC;QAEF,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,IAAI,KAAI;AAClD,YAAA,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI;AAC9C,SAAC,CAAC;QAEF,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QACzC,IAAI,CAAC,eAAe,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS;QAC/C,IAAI,CAAC,eAAe,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ;QAC7C,IAAI,CAAC,eAAe,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ;AAC7C,QAAA,IAAI,CAAC,eAAe,CAAC,gBAAgB,GAAG,MAAM;QAC9C,IAAI,CAAC,eAAe,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU;QACjD,IAAI,CAAC,eAAe,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS;QAC/C,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC;QACzD,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;QACvC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC;QACnD,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC;;IAG3D,WAAW,GAAA;AACT,QAAA,OAAO,IAAI,CAAC,eAAe,CAAC,QAAQ;;IAGtC,mBAAmB,GAAA;AACjB,QAAA,OAAO,IAAI,CAAC,eAAe,CAAC,gBAAgB;;IAG9C,SAAS,GAAA;AACP,QAAA,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS;QACzB,IAAI,WAAW,GAAG,CAAC;QACnB,MAAM,MAAM,GAAG,EAAE;AACjB,QAAA,IAAI,QAAc;AAClB,QAAA,QAAQ,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE;AAC3D,QAAA,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,EAAE;AAEnD,QAAA,KAAK,IAAI,CAAC,GAAG,WAAW,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AACzC,YAAA,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;AAE5D,QAAA,OAAO,MAAM;;IAGf,OAAO,CAAC,KAAK,EAAE,MAAM,EAAA;AACnB,QAAA,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC;AAC1B,QAAA,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,KAAK,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACrD,QAAA,OAAO,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,KAAK,MAAM,CAAC,MAAM;;AAGjD,IAAA,SAAS,CAAC,YAAY,EAAA;AAC5B,QAAA,IACE,YAAY,CAAC,QAAQ,CAAC,YAAY,KAAK,YAAY,CAAC,QAAQ,CAAC,aAAa,EAC1E;YACA,IAAI,CAAC,eAAe,CAAC,QAAQ,GAAG,YAAY,CAAC,QAAQ,CAAC,YAAY;YAClE,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC;YACnD,UAAU,CAAC,MAAM,IAAI,CAAC,YAAY,EAAE,EAAE,EAAE,CAAC;;;AAIrC,IAAA,WAAW,CAAC,YAAY,EAAA;AAC9B,QAAA,IACE,YAAY,CAAC,UAAU,CAAC,YAAY;AACpC,YAAA,YAAY,CAAC,UAAU,CAAC,aAAa,EACrC;YACA,IAAI,CAAC,eAAe,CAAC,UAAU,GAAG,YAAY,CAAC,UAAU,CAAC,YAAY;YACtE,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC;YACnD,UAAU,CAAC,MAAM,IAAI,CAAC,YAAY,EAAE,EAAE,EAAE,CAAC;;;AAIrC,IAAA,UAAU,CAAC,YAAY,EAAA;AAC7B,QAAA,IACE,YAAY,CAAC,SAAS,CAAC,YAAY;AACnC,YAAA,YAAY,CAAC,SAAS,CAAC,aAAa,EACpC;YACA,IAAI,CAAC,eAAe,CAAC,SAAS,GAAG,YAAY,CAAC,SAAS,CAAC,YAAY;YACpE,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC;YACnD,UAAU,CAAC,MAAM,IAAI,CAAC,YAAY,EAAE,EAAE,EAAE,CAAC;;;AAI7C,IAAA,WAAW,CAAC,YAAY,EAAA;QACtB,YAAY,CAAC,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC;QACrD,YAAY,CAAC,UAAU,IAAI,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC;QACzD,YAAY,CAAC,SAAS,IAAI,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC;AACvD,QAAA,YAAY,CAAC,IAAI,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;AAC9D,QAAA,YAAY,CAAC,aAAa;YACxB,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC;;;AAI7D,IAAA,OAAO;IAEP,MAAM,GAAA;AACJ,QAAA,IAAI,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAC1C,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CACzC;AACD,QAAA,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC;;IAEvC,MAAM,GAAA;QACJ,IAAI,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC;AAChD,QAAA,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,SAAS,CAAC;;sIAnQ7B,kBAAkB,EAAA,EAAA,CAAA,iBAAA,CAAAA,eAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,iBAAA,CAAA,CAAA,CAAA,EAAA,CAAA;mGAAlB,kBAAkB,EAAA,SAAA,EAAA,CAAA,CAAA,qBAAA,CAAA,CAAA,EAAA,cAAA,EAAA,SAAA,iCAAA,CAAA,EAAA,EAAA,GAAA,EAAA,QAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;wCAyFZ,YAAY,EAAA,CAAA,CAAA;;;;;;;;;AA5FlB,SAAA,EAAA,EAAA,MAAA,EAAA,EAAA,aAAA,EAAA,eAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,MAAA,EAAA,SAAA,EAAA,WAAA,EAAA,QAAA,EAAA,UAAA,EAAA,QAAA,EAAA,UAAA,EAAA,SAAA,EAAA,WAAA,EAAA,QAAA,EAAA,UAAA,EAAA,UAAA,EAAA,YAAA,EAAA,OAAA,EAAA,SAAA,EAAA,aAAA,EAAA,eAAA,EAAA,EAAA,OAAA,EAAA,EAAA,mBAAA,EAAA,qBAAA,EAAA,UAAA,EAAA,YAAA,EAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,CAAA,CAAC,eAAe,CAAC,CAAA,EAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,QAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA,cAAA,CAAA,EAAA,CAAA,CAAA,EAAA,gBAAA,CAAA,EAAA,CAAA,OAAA,EAAA,UAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,CAAA,EAAA,cAAA,CAAA,EAAA,CAAA,CAAA,EAAA,aAAA,EAAA,CAAA,EAAA,MAAA,EAAA,GAAA,EAAA,CAAA,EAAA,OAAA,CAAA,EAAA,CAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,SAAA,CAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,OAAA,EAAA,EAAA,EAAA,OAAA,EAAA,oCAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,CAAA,EAAA,aAAA,EAAA,CAAA,EAAA,OAAA,EAAA,GAAA,EAAA,CAAA,EAAA,OAAA,CAAA,EAAA,CAAA,CAAA,EAAA,UAAA,CAAA,EAAA,CAAA,OAAA,EAAA,SAAA,EAAA,CAAA,EAAA,OAAA,EAAA,CAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAAA,SAAA,EAAA,CAAA,EAAA,OAAA,CAAA,EAAA,CAAA,CAAA,EAAA,QAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,UAAA,EAAA,eAAA,EAAA,CAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,UAAA,EAAA,eAAA,CAAA,EAAA,CAAA,CAAA,EAAA,EAAA,EAAA,CAAA,EAAA,OAAA,EAAA,MAAA,EAAA,SAAA,EAAA,MAAA,EAAA,MAAA,EAAA,GAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,2BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;AD3C1B,YADJ,8BAA0B,CACM,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA;YACxB,EAAwD,CAAA,UAAA,CAAA,CAAA,EAAA,iCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA;YAI5D,EAAM,CAAA,YAAA,EAAA;AAEF,YADJ,8BAA0B,CACsC,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA;AAAvD,YAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,gDAAA,GAAA,EAAA,OAAS,YAAQ,CAAC,EAAA,CAAA;YAAqC,EAAO,CAAA,MAAA,CAAA,CAAA,CAAA;YAAA,EAAM,CAAA,YAAA,EAAA;YACzE,EAAwD,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA;AAOpD,YANA,mEAA2D,CAMuC,CAAA,EAAA,iCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA;YAItG,EAAM,CAAA,YAAA,EAAA;YACN,EAA6D,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA;AAAxD,YAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,gDAAA,GAAA,EAAA,OAAS,YAAQ,CAAC,EAAA,CAAA;YAAsC,EAAO,CAAA,MAAA,CAAA,EAAA,CAAA;YAAA,EAAM,CAAA,YAAA,EAAA,EACxE,EACJ;;YArBQ,EAA+B,CAAA,SAAA,CAAA,CAAA,CAAA;YAA/B,EAA+B,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,OAAA,IAAA,GAAA,CAAA,OAAA,CAAA,MAAA,GAAA,CAAA,CAAA;YAMuB,EAAO,CAAA,SAAA,CAAA,CAAA,CAAA;YAAP,EAAO,CAAA,iBAAA,CAAA,GAAA,CAAA;YAC3C,EAA+B,CAAA,SAAA,EAAA;YAA/B,EAA+B,CAAA,UAAA,CAAA,SAAA,EAAA,EAAA,CAAA,eAAA,CAAA,CAAA,EAAA,GAAA,EAAA,GAAA,CAAA,KAAA,GAAA,IAAA,CAAA,CAAA;YAC9B,EAAoC,CAAA,SAAA,EAAA;YAApC,EAAoC,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,mBAAA,EAAA,KAAA,MAAA,CAAA;YAM1C,EAAsC,CAAA,SAAA,EAAA;YAAtC,EAAsC,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,mBAAA,EAAA,KAAA,QAAA,CAAA;YAKI,EAAO,CAAA,SAAA,CAAA,CAAA,CAAA;YAAP,EAAO,CAAA,iBAAA,CAAA,GAAA,CAAA;ACexE,SAAA,EAAA,EAAA,YAAA,EAAA,CAAA,YAAY,mCACZ,kBAAkB;YAClB,oBAAoB,CAAA,EAAA,MAAA,EAAA,CAAA,iyGAAA,CAAA,EAAA,aAAA,EAAA,CAAA,EAAA,CAAA,CAAA;;iFASX,kBAAkB,EAAA,CAAA;cAf9B,SAAS;2BACE,qBAAqB,EAAA,UAAA,EACnB,IAAI,EACP,OAAA,EAAA;oBACP,YAAY;oBACZ,kBAAkB;oBAClB,oBAAoB;oBACpB,mBAAmB;oBACnB,YAAY;AACb,iBAAA,EAAA,SAAA,EAGU,CAAC,eAAe,CAAC,EACb,aAAA,EAAA,iBAAiB,CAAC,IAAI,EAAA,QAAA,EAAA,ktCAAA,EAAA,MAAA,EAAA,CAAA,iyGAAA,CAAA,EAAA;6EAa5B,aAAa,EAAA,CAAA;kBAArB;YACS,mBAAmB,EAAA,CAAA;kBAA5B;YAMS,UAAU,EAAA,CAAA;kBAAnB;YAOQ,OAAO,EAAA,CAAA;kBAAf;YAOQ,IAAI,EAAA,CAAA;kBAAZ;YAMQ,SAAS,EAAA,CAAA;kBAAjB;YAMQ,QAAQ,EAAA,CAAA;kBAAhB;YAMQ,QAAQ,EAAA,CAAA;kBAAhB;YAMQ,SAAS,EAAA,CAAA;kBAAjB;YAMQ,QAAQ,EAAA,CAAA;kBAAhB;YAOQ,UAAU,EAAA,CAAA;kBAAlB;YAOQ,OAAO,EAAA,CAAA;kBAAf;YAOQ,aAAa,EAAA,CAAA;kBAArB;YAEuB,OAAO,EAAA,CAAA;kBAA9B,YAAY;mBAAC,QAAQ;YAKtB,sBAAsB,EAAA,CAAA;kBADrB,eAAe;mBAAC,YAAY;;kFAzFlB,kBAAkB,EAAA,EAAA,SAAA,EAAA,oBAAA,EAAA,QAAA,EAAA,+CAAA,EAAA,UAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;AC/C/B;;AAEG;;ACFH;;AAEG;;;;\"}","type":"asset"}]}