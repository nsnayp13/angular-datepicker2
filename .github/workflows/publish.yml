name: Publish to NPM

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        registry-url: 'https://registry.npmjs.org'

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm run test-once

    - name: Build library
      run: npm run build:lib

    - name: Check if version changed
      id: version-check
      run: |
        CURRENT_VERSION=$(node -p "require('./projects/angular-datepicker2/package.json').version")
        echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        
        # Получаем последний опубликованный тег
        LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
        LAST_VERSION=${LAST_TAG#v}
        echo "last_version=$LAST_VERSION" >> $GITHUB_OUTPUT
        
        if [ "$CURRENT_VERSION" != "$LAST_VERSION" ]; then
          echo "version_changed=true" >> $GITHUB_OUTPUT
          echo "Version changed from $LAST_VERSION to $CURRENT_VERSION"
        else
          echo "version_changed=false" >> $GITHUB_OUTPUT
          echo "Version unchanged: $CURRENT_VERSION"
        fi

    - name: Create Git tag
      if: steps.version-check.outputs.version_changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag -a "v${{ steps.version-check.outputs.current_version }}" -m "Release v${{ steps.version-check.outputs.current_version }}"
        git push origin "v${{ steps.version-check.outputs.current_version }}"

    - name: Publish to NPM
      if: steps.version-check.outputs.version_changed == 'true'
      run: |
        cd dist/angular-datepicker2
        npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Create GitHub Release
      if: steps.version-check.outputs.version_changed == 'true'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.version-check.outputs.current_version }}
        release_name: Release v${{ steps.version-check.outputs.current_version }}
        draft: false
        prerelease: false